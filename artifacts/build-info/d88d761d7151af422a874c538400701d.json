{"id":"d88d761d7151af422a874c538400701d","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/draft-EIP712.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/cryptography/draft-EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n    address private immutable _CACHED_THIS;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _CACHED_THIS = address(this);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _CACHED_THIS && block.chainid == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.3) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        } else if (error == RecoverError.InvalidSignatureV) {\n            revert(\"ECDSA: invalid signature 'v' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n        if (v != 27 && v != 28) {\n            return (address(0), RecoverError.InvalidSignatureV);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-ERC20Permit.sol\";\nimport \"../../../utils/math/Math.sol\";\nimport \"../../../governance/utils/IVotes.sol\";\nimport \"../../../utils/math/SafeCast.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20Votes is IVotes, ERC20Permit {\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_checkpoints[account], blockNumber);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n     * It is but NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, blockNumber);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 blockNumber) private view returns (uint256) {\n        // We run a binary search to look for the earliest checkpoint taken after `blockNumber`.\n        //\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `blockNumber`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `blockNumber`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `blockNumber`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `blockNumber`, but it works out\n        // the same.\n        uint256 high = ckpts.length;\n        uint256 low = 0;\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (ckpts[mid].fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        return high == 0 ? 0 : ckpts[high - 1].votes;\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {DelegateChanged} and {DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(\n        address src,\n        address dst,\n        uint256 amount\n    ) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n        oldWeight = pos == 0 ? 0 : ckpts[pos - 1].votes;\n        newWeight = op(oldWeight, delta);\n\n        if (pos > 0 && ckpts[pos - 1].fromBlock == block.number) {\n            ckpts[pos - 1].votes = SafeCast.toUint224(newWeight);\n        } else {\n            ckpts.push(Checkpoint({fromBlock: SafeCast.toUint32(block.number), votes: SafeCast.toUint224(newWeight)}));\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     */\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248) {\n        require(value >= type(int248).min && value <= type(int248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return int248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240) {\n        require(value >= type(int240).min && value <= type(int240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return int240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232) {\n        require(value >= type(int232).min && value <= type(int232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return int232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224) {\n        require(value >= type(int224).min && value <= type(int224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return int224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216) {\n        require(value >= type(int216).min && value <= type(int216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return int216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208) {\n        require(value >= type(int208).min && value <= type(int208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return int208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200) {\n        require(value >= type(int200).min && value <= type(int200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return int200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192) {\n        require(value >= type(int192).min && value <= type(int192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return int192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184) {\n        require(value >= type(int184).min && value <= type(int184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return int184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176) {\n        require(value >= type(int176).min && value <= type(int176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return int176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168) {\n        require(value >= type(int168).min && value <= type(int168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return int168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160) {\n        require(value >= type(int160).min && value <= type(int160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return int160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152) {\n        require(value >= type(int152).min && value <= type(int152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return int152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144) {\n        require(value >= type(int144).min && value <= type(int144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return int144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136) {\n        require(value >= type(int136).min && value <= type(int136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return int136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120) {\n        require(value >= type(int120).min && value <= type(int120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return int120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112) {\n        require(value >= type(int112).min && value <= type(int112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return int112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104) {\n        require(value >= type(int104).min && value <= type(int104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return int104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96) {\n        require(value >= type(int96).min && value <= type(int96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return int96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88) {\n        require(value >= type(int88).min && value <= type(int88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return int88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80) {\n        require(value >= type(int80).min && value <= type(int80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return int80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72) {\n        require(value >= type(int72).min && value <= type(int72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return int72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56) {\n        require(value >= type(int56).min && value <= type(int56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return int56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48) {\n        require(value >= type(int48).min && value <= type(int48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return int48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40) {\n        require(value >= type(int40).min && value <= type(int40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return int40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24) {\n        require(value >= type(int24).min && value <= type(int24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return int24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"contracts/Staking.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract CyberArenaStaking is ERC20, Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    /// @dev Staking token\n    IERC20 public stakingToken;\n\n    /// @dev Info about each stake by user address\n    mapping(address => Stake[]) public stakers;\n\n    /// @dev Penalty days value\n    uint16 public penaltyDays;\n\n    /// @dev Penalty base points value\n    uint16 public penaltyBP;\n\n    /// @dev The address to which the penalty tokens will be transferred\n    address public treasury;\n\n    /// @dev Total shares\n    uint192 public totalShares;\n\n    struct Stake {\n        bool unstaked;\n        uint128 amount;\n        uint48 stakedTimestamp;\n        uint16 penaltyDays;\n        uint16 penaltyBP;\n        uint192 shares;\n    }\n\n    event SetPenaltyBP(uint16 penaltyBP);\n    event SetTreasury(address treasury);\n\n    /**\n     * @notice Initializer\n     * @param _stakingToken Staking token address\n     * @param _penaltyDays Penalty days value\n     * @param _penaltyBP Penalty base points value\n     * @param _treasury The address to which the penalty tokens will be transferred\n     */\n    constructor(\n        IERC20 _stakingToken,\n        uint16 _penaltyDays,\n        uint16 _penaltyBP,\n        address _treasury\n    ) \n        ERC20(\"Staked CAT\", \"stCAT\")\n        Ownable()\n        ReentrancyGuard()\n    {\n\n        require(address(_stakingToken) != address(0), \"CyberArenaStaking: staking token is the zero address\");\n        require(_treasury != address(0), \"CyberArenaStaking: treasury is the zero address\");\n\n        stakingToken = _stakingToken;\n        penaltyDays = _penaltyDays;\n        penaltyBP = _penaltyBP;\n        treasury = _treasury;\n    }\n\n    /**\n     * @notice Stake staking tokens\n     * @param _amount amount to stake\n     */\n    function stake(uint128 _amount) external nonReentrant {\n        stakingToken.safeTransferFrom(msg.sender, address(this), _amount);\n\n        _mint(msg.sender, _amount);\n\n        totalShares += _amount;\n        stakers[msg.sender].push(Stake(\n            false,\n            _amount,\n            uint48(getCurrentTime()),\n            penaltyDays,\n            penaltyBP,\n            _amount\n        ));\n    }\n\n    /**\n     * @notice Unstake staking tokens\n     * @notice If penalty period is not over grab penalty\n     * @param _stakeIndex Stake index in array of user's stakes\n     */\n    function unstake(uint256 _stakeIndex) external nonReentrant {\n        require(_stakeIndex < stakers[msg.sender].length, \"CyberArenaStaking: invalid index\");\n        Stake storage stakeRef = stakers[msg.sender][_stakeIndex];\n        require(!stakeRef.unstaked, \"CyberArenaStaking: unstaked already\");\n\n        _burn(msg.sender, stakeRef.amount);\n        totalShares -= stakeRef.shares;\n        stakeRef.unstaked = true;\n\n        // pays a penalty if unstakes during the penalty period\n        uint256 penaltyAmount = 0;\n        if (stakeRef.stakedTimestamp + uint48(stakeRef.penaltyDays) * 86400 > getCurrentTime()) {\n            penaltyAmount = stakeRef.amount * stakeRef.penaltyBP / 1e4;\n            stakingToken.safeTransfer(treasury, penaltyAmount);\n        }\n\n        stakingToken.safeTransfer(msg.sender, stakeRef.amount - penaltyAmount);\n    }\n\n    // ** ONLY OWNER **\n\n    /**\n     * @notice Set a new penalty days value\n     * @param _penaltyDays New penalty days value\n     */\n    function setPenaltyDays(uint16 _penaltyDays) external onlyOwner {\n        penaltyDays = _penaltyDays;\n    }\n\n    /**\n     * @notice Set a new penalty base points value\n     * @param _penaltyBP New penalty base points value\n     */\n    function setPenaltyBP(uint16 _penaltyBP) external onlyOwner {\n        require(_penaltyBP <= 1e4, \"Staking: penalty BP exceeds limit\");\n        penaltyBP = _penaltyBP;\n        emit SetPenaltyBP(_penaltyBP);\n    }\n\n    /**\n     * @notice Set a new penalty treasury\n     * @param _treasury New treasury address\n     */\n    function setTreasury(address _treasury) external onlyOwner {\n        require(_treasury != address(0), \"CyberArenaStaking: treasury is the zero address\");\n        treasury = _treasury;\n         emit SetTreasury(_treasury);\n    }\n\n    // ** INTERNAL **\n\n    /// @dev disable transfers\n    function _transfer(address _from, address _to, uint256 _amount) internal override {\n        revert(\"CyberArenaStaking: NON_TRANSFERABLE\");\n    }\n\n    function getCurrentTime()\n        internal\n        virtual\n        view\n        returns(uint256){\n        return block.timestamp;\n    }\n}"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20VotesComp.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20Votes.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound's voting and delegation. This version exactly matches Compound's\n * interface, with the drawback of only supporting supply up to (2^96^ - 1).\n *\n * NOTE: You should use this contract if you need exact compatibility with COMP (for example in order to use your token\n * with Governor Alpha or Bravo) and if you are sure the supply cap of 2^96^ is enough for you. Otherwise, use the\n * {ERC20Votes} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getCurrentVotes} and {getPriorVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20VotesComp is ERC20Votes {\n    /**\n     * @dev Comp version of the {getVotes} accessor, with `uint96` return type.\n     */\n    function getCurrentVotes(address account) external view virtual returns (uint96) {\n        return SafeCast.toUint96(getVotes(account));\n    }\n\n    /**\n     * @dev Comp version of the {getPastVotes} accessor, with `uint96` return type.\n     */\n    function getPriorVotes(address account, uint256 blockNumber) external view virtual returns (uint96) {\n        return SafeCast.toUint96(getPastVotes(account, blockNumber));\n    }\n\n    /**\n     * @dev Maximum token supply. Reduced to `type(uint96).max` (2^96^ - 1) to fit COMP interface.\n     */\n    function _maxSupply() internal view virtual override returns (uint224) {\n        return type(uint96).max;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"contracts/MockStaking.sol":{"content":"// contracts/Staking.sol\n// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.11;\n\nimport \"./Staking.sol\";\n\n/**\n * @title MockStaking\n * WARNING: use only for testing and debugging purpose\n */\ncontract MockStaking is CyberArenaStaking{\n\n    uint256 mockTime = 0;\n\n    constructor(        IERC20 _stakingToken,\n        uint16 _penaltyDays,\n        uint16 _penaltyBP,\n        address _treasury) CyberArenaStaking(_stakingToken, _penaltyDays, _penaltyBP, _treasury) {\n    }\n\n    function setCurrentTime(uint256 _time)\n        external{\n        mockTime = _time;\n    }\n\n    function getCurrentTime()\n        internal\n        virtual\n        override\n        view\n        returns(uint256){\n        return mockTime;\n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5740","formattedMessage":"Warning: Unreachable code.\n   --> @openzeppelin/contracts/token/ERC20/ERC20.sol:116:9:\n    |\n116 |         return true;\n    |         ^^^^^^^^^^^\n\n","message":"Unreachable code.","severity":"warning","sourceLocation":{"end":3911,"file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","start":3900},"type":"Warning"},{"component":"general","errorCode":"5740","formattedMessage":"Warning: Unreachable code.\n   --> @openzeppelin/contracts/token/ERC20/ERC20.sol:166:9:\n    |\n166 |         return true;\n    |         ^^^^^^^^^^^\n\n","message":"Unreachable code.","severity":"warning","sourceLocation":{"end":5471,"file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","start":5460},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Staking.sol:146:24:\n    |\n146 |     function _transfer(address _from, address _to, uint256 _amount) internal override {\n    |                        ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4525,"file":"contracts/Staking.sol","start":4512},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Staking.sol:146:39:\n    |\n146 |     function _transfer(address _from, address _to, uint256 _amount) internal override {\n    |                                       ^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4538,"file":"contracts/Staking.sol","start":4527},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Staking.sol:146:52:\n    |\n146 |     function _transfer(address _from, address _to, uint256 _amount) internal override {\n    |                                                    ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4555,"file":"contracts/Staking.sol","start":4540},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/Staking.sol:146:5:\n    |\n146 |     function _transfer(address _from, address _to, uint256 _amount) internal override {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":4637,"file":"contracts/Staking.sol","start":4493},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2418],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":2419,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2418,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,2418],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1875:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2141:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"135:132:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IVotes","nameLocation":"278:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"291:71:1","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":124,"name":"DelegateChanged","nameLocation":"373:15:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:1","nodeType":"VariableDeclaration","scope":124,"src":"389:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:1","nodeType":"VariableDeclaration","scope":124,"src":"416:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:1","nodeType":"VariableDeclaration","scope":124,"src":"446:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:1"},"src":"367:107:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"480:124:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":133,"name":"DelegateVotesChanged","nameLocation":"615:20:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:1","nodeType":"VariableDeclaration","scope":133,"src":"636:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:1","nodeType":"VariableDeclaration","scope":133,"src":"662:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:1","nodeType":"VariableDeclaration","scope":133,"src":"687:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:1"},"src":"609:98:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"713:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":141,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:1","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"account","nameLocation":"823:7:1","nodeType":"VariableDeclaration","scope":141,"src":"815:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:1"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"855:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:1"},"scope":190,"src":"797:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"870:114:1","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`)."},"functionSelector":"3a46b1a8","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"998:12:1","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"account","nameLocation":"1019:7:1","nodeType":"VariableDeclaration","scope":151,"src":"1011:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"blockNumber","nameLocation":"1036:11:1","nodeType":"VariableDeclaration","scope":151,"src":"1028:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:38:1"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":151,"src":"1072:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1071:9:1"},"scope":190,"src":"989:92:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"1087:365:1","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":159,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1466:18:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"blockNumber","nameLocation":"1493:11:1","nodeType":"VariableDeclaration","scope":159,"src":"1485:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1484:21:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"1529:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1528:9:1"},"scope":190,"src":"1457:81:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1544:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1629:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"account","nameLocation":"1647:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1639:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1638:17:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1679:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1678:9:1"},"scope":190,"src":"1620:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1694:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"1779:8:1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"delegatee","nameLocation":"1796:9:1","nodeType":"VariableDeclaration","scope":173,"src":"1788:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1787:19:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"1815:0:1"},"scope":190,"src":"1770:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"1822:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"1903:13:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"delegatee","nameLocation":"1934:9:1","nodeType":"VariableDeclaration","scope":189,"src":"1926:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"nonce","nameLocation":"1961:5:1","nodeType":"VariableDeclaration","scope":189,"src":"1953:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"expiry","nameLocation":"1984:6:1","nodeType":"VariableDeclaration","scope":189,"src":"1976:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1976:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"v","nameLocation":"2006:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2000:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"2000:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"r","nameLocation":"2025:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2017:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"s","nameLocation":"2044:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2036:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1916:135:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"2060:0:1"},"scope":190,"src":"1894:167:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"268:1795:1","usedErrors":[]}],"src":"110:1954:1"},"id":1},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[230]},"id":231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"122:750:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":230,"linearizedBaseContracts":[230],"name":"ReentrancyGuard","nameLocation":"891:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":196,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1686:12:2","nodeType":"VariableDeclaration","scope":230,"src":"1661:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1701:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":199,"mutability":"constant","name":"_ENTERED","nameLocation":"1733:8:2","nodeType":"VariableDeclaration","scope":230,"src":"1708:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1744:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":201,"mutability":"mutable","name":"_status","nameLocation":"1768:7:2","nodeType":"VariableDeclaration","scope":230,"src":"1752:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":208,"nodeType":"Block","src":"1796:39:2","statements":[{"expression":{"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":204,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1806:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":205,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"1816:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1806:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":207,"nodeType":"ExpressionStatement","src":"1806:22:2"}]},"id":209,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"1793:2:2"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"1796:0:2"},"scope":230,"src":"1782:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":228,"nodeType":"Block","src":"2236:421:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":213,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"2325:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":214,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"2336:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2346:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2317:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":218,"nodeType":"ExpressionStatement","src":"2317:63:2"},{"expression":{"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":219,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"2455:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":220,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"2465:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2455:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":222,"nodeType":"ExpressionStatement","src":"2455:18:2"},{"id":223,"nodeType":"PlaceholderStatement","src":"2484:1:2"},{"expression":{"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":224,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"2628:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":225,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"2638:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2628:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":227,"nodeType":"ExpressionStatement","src":"2628:22:2"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"1841:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":229,"name":"nonReentrant","nameLocation":"2221:12:2","nodeType":"ModifierDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"2233:2:2"},"src":"2212:445:2","virtual":false,"visibility":"internal"}],"scope":231,"src":"873:1786:2","usedErrors":[]}],"src":"97:2563:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2418],"ERC20":[816],"IERC20":[894],"IERC20Metadata":[1612]},"id":817,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":232,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":817,"sourceUnit":895,"src":"130:22:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":817,"sourceUnit":1613,"src":"153:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":817,"sourceUnit":2419,"src":"195:33:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":237,"name":"Context","nameLocations":["1421:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2418,"src":"1421:7:3"},"id":238,"nodeType":"InheritanceSpecifier","src":"1421:7:3"},{"baseName":{"id":239,"name":"IERC20","nameLocations":["1430:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"1430:6:3"},"id":240,"nodeType":"InheritanceSpecifier","src":"1430:6:3"},{"baseName":{"id":241,"name":"IERC20Metadata","nameLocations":["1438:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1612,"src":"1438:14:3"},"id":242,"nodeType":"InheritanceSpecifier","src":"1438:14:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"230:1172:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":816,"linearizedBaseContracts":[816,1612,894,2418],"name":"ERC20","nameLocation":"1412:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":246,"mutability":"mutable","name":"_balances","nameLocation":"1495:9:3","nodeType":"VariableDeclaration","scope":816,"src":"1459:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":245,"keyType":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1459:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":252,"mutability":"mutable","name":"_allowances","nameLocation":"1567:11:3","nodeType":"VariableDeclaration","scope":816,"src":"1511:67:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":251,"keyType":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1511:47:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":250,"keyType":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1530:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":254,"mutability":"mutable","name":"_totalSupply","nameLocation":"1601:12:3","nodeType":"VariableDeclaration","scope":816,"src":"1585:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":256,"mutability":"mutable","name":"_name","nameLocation":"1635:5:3","nodeType":"VariableDeclaration","scope":816,"src":"1620:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":255,"name":"string","nodeType":"ElementaryTypeName","src":"1620:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":258,"mutability":"mutable","name":"_symbol","nameLocation":"1661:7:3","nodeType":"VariableDeclaration","scope":816,"src":"1646:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":257,"name":"string","nodeType":"ElementaryTypeName","src":"1646:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":274,"nodeType":"Block","src":"2034:57:3","statements":[{"expression":{"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":266,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2044:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":267,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2052:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2044:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":269,"nodeType":"ExpressionStatement","src":"2044:13:3"},{"expression":{"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":270,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2067:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":271,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2077:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2067:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":273,"nodeType":"ExpressionStatement","src":"2067:17:3"}]},"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"1675:298:3","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":275,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"name_","nameLocation":"2004:5:3","nodeType":"VariableDeclaration","scope":275,"src":"1990:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":260,"name":"string","nodeType":"ElementaryTypeName","src":"1990:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"symbol_","nameLocation":"2025:7:3","nodeType":"VariableDeclaration","scope":275,"src":"2011:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":262,"name":"string","nodeType":"ElementaryTypeName","src":"2011:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1989:44:3"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"2034:0:3"},"scope":816,"src":"1978:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1599],"body":{"id":284,"nodeType":"Block","src":"2225:29:3","statements":[{"expression":{"id":282,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2242:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":281,"id":283,"nodeType":"Return","src":"2235:12:3"}]},"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"2097:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":285,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2165:4:3","nodeType":"FunctionDefinition","overrides":{"id":278,"nodeType":"OverrideSpecifier","overrides":[],"src":"2192:8:3"},"parameters":{"id":277,"nodeType":"ParameterList","parameters":[],"src":"2169:2:3"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"2210:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":279,"name":"string","nodeType":"ElementaryTypeName","src":"2210:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2209:15:3"},"scope":816,"src":"2156:98:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1605],"body":{"id":294,"nodeType":"Block","src":"2438:31:3","statements":[{"expression":{"id":292,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2455:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":291,"id":293,"nodeType":"Return","src":"2448:14:3"}]},"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"2260:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":295,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2376:6:3","nodeType":"FunctionDefinition","overrides":{"id":288,"nodeType":"OverrideSpecifier","overrides":[],"src":"2405:8:3"},"parameters":{"id":287,"nodeType":"ParameterList","parameters":[],"src":"2382:2:3"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"2423:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":289,"name":"string","nodeType":"ElementaryTypeName","src":"2423:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2422:15:3"},"scope":816,"src":"2367:102:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1611],"body":{"id":304,"nodeType":"Block","src":"3158:26:3","statements":[{"expression":{"hexValue":"3138","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3175:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":301,"id":303,"nodeType":"Return","src":"3168:9:3"}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"2475:613:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":305,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3102:8:3","nodeType":"FunctionDefinition","overrides":{"id":298,"nodeType":"OverrideSpecifier","overrides":[],"src":"3133:8:3"},"parameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"3110:2:3"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":305,"src":"3151:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":299,"name":"uint8","nodeType":"ElementaryTypeName","src":"3151:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3150:7:3"},"scope":816,"src":"3093:91:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[843],"body":{"id":314,"nodeType":"Block","src":"3314:36:3","statements":[{"expression":{"id":312,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"3331:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":311,"id":313,"nodeType":"Return","src":"3324:19:3"}]},"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"3190:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":315,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3253:11:3","nodeType":"FunctionDefinition","overrides":{"id":308,"nodeType":"OverrideSpecifier","overrides":[],"src":"3287:8:3"},"parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"3264:2:3"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"3305:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3304:9:3"},"scope":816,"src":"3244:106:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[851],"body":{"id":328,"nodeType":"Block","src":"3491:42:3","statements":[{"expression":{"baseExpression":{"id":324,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3508:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":326,"indexExpression":{"id":325,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3518:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3508:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":323,"id":327,"nodeType":"Return","src":"3501:25:3"}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"3356:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":329,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3417:9:3","nodeType":"FunctionDefinition","overrides":{"id":320,"nodeType":"OverrideSpecifier","overrides":[],"src":"3464:8:3"},"parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"account","nameLocation":"3435:7:3","nodeType":"VariableDeclaration","scope":329,"src":"3427:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:17:3"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":329,"src":"3482:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:9:3"},"scope":816,"src":"3408:125:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[861],"body":{"id":353,"nodeType":"Block","src":"3814:104:3","statements":[{"assignments":[341],"declarations":[{"constant":false,"id":341,"mutability":"mutable","name":"owner","nameLocation":"3832:5:3","nodeType":"VariableDeclaration","scope":353,"src":"3824:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"3824:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":344,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":342,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"3840:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3840:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3824:28:3"},{"expression":{"arguments":[{"id":346,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"3872:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":347,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3879:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":348,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"3883:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":345,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"3862:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":350,"nodeType":"ExpressionStatement","src":"3862:28:3"},{"expression":{"hexValue":"74727565","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3907:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":339,"id":352,"nodeType":"Return","src":"3900:11:3"}]},"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"3539:185:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3738:8:3","nodeType":"FunctionDefinition","overrides":{"id":336,"nodeType":"OverrideSpecifier","overrides":[],"src":"3790:8:3"},"parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"to","nameLocation":"3755:2:3","nodeType":"VariableDeclaration","scope":354,"src":"3747:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"3747:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"amount","nameLocation":"3767:6:3","nodeType":"VariableDeclaration","scope":354,"src":"3759:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3759:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3746:28:3"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"3808:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":337,"name":"bool","nodeType":"ElementaryTypeName","src":"3808:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3807:6:3"},"scope":816,"src":"3729:189:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[871],"body":{"id":371,"nodeType":"Block","src":"4074:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":365,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"4091:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":367,"indexExpression":{"id":366,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"4103:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":369,"indexExpression":{"id":368,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"4110:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":364,"id":370,"nodeType":"Return","src":"4084:34:3"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"3924:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3985:9:3","nodeType":"FunctionDefinition","overrides":{"id":361,"nodeType":"OverrideSpecifier","overrides":[],"src":"4047:8:3"},"parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"owner","nameLocation":"4003:5:3","nodeType":"VariableDeclaration","scope":372,"src":"3995:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"spender","nameLocation":"4018:7:3","nodeType":"VariableDeclaration","scope":372,"src":"4010:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"4010:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3994:32:3"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"4065:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"4065:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4064:9:3"},"scope":816,"src":"3976:149:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[881],"body":{"id":396,"nodeType":"Block","src":"4522:108:3","statements":[{"assignments":[384],"declarations":[{"constant":false,"id":384,"mutability":"mutable","name":"owner","nameLocation":"4540:5:3","nodeType":"VariableDeclaration","scope":396,"src":"4532:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"4532:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":387,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":385,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"4548:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4548:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4532:28:3"},{"expression":{"arguments":[{"id":389,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"4579:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":390,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4586:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":391,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"4595:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":388,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"4570:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"ExpressionStatement","src":"4570:32:3"},{"expression":{"hexValue":"74727565","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4619:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":382,"id":395,"nodeType":"Return","src":"4612:11:3"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"4131:297:3","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4442:7:3","nodeType":"FunctionDefinition","overrides":{"id":379,"nodeType":"OverrideSpecifier","overrides":[],"src":"4498:8:3"},"parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"spender","nameLocation":"4458:7:3","nodeType":"VariableDeclaration","scope":397,"src":"4450:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"4450:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"amount","nameLocation":"4475:6:3","nodeType":"VariableDeclaration","scope":397,"src":"4467:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint256","nodeType":"ElementaryTypeName","src":"4467:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:33:3"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"4516:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":380,"name":"bool","nodeType":"ElementaryTypeName","src":"4516:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4515:6:3"},"scope":816,"src":"4433:197:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[893],"body":{"id":429,"nodeType":"Block","src":"5325:153:3","statements":[{"assignments":[411],"declarations":[{"constant":false,"id":411,"mutability":"mutable","name":"spender","nameLocation":"5343:7:3","nodeType":"VariableDeclaration","scope":429,"src":"5335:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":414,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":412,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"5353:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5353:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5335:30:3"},{"expression":{"arguments":[{"id":416,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"5391:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":417,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5397:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":418,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"5406:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":415,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"5375:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"5375:38:3"},{"expression":{"arguments":[{"id":422,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"5433:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":423,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"5439:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":424,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"5443:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"5423:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5423:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":426,"nodeType":"ExpressionStatement","src":"5423:27:3"},{"expression":{"hexValue":"74727565","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5467:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":409,"id":428,"nodeType":"Return","src":"5460:11:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"4636:551:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":430,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5201:12:3","nodeType":"FunctionDefinition","overrides":{"id":406,"nodeType":"OverrideSpecifier","overrides":[],"src":"5301:8:3"},"parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"from","nameLocation":"5231:4:3","nodeType":"VariableDeclaration","scope":430,"src":"5223:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"5223:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"to","nameLocation":"5253:2:3","nodeType":"VariableDeclaration","scope":430,"src":"5245:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"5245:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"amount","nameLocation":"5273:6:3","nodeType":"VariableDeclaration","scope":430,"src":"5265:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5213:72:3"},"returnParameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":430,"src":"5319:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":407,"name":"bool","nodeType":"ElementaryTypeName","src":"5319:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5318:6:3"},"scope":816,"src":"5192:286:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"5967:140:3","statements":[{"assignments":[441],"declarations":[{"constant":false,"id":441,"mutability":"mutable","name":"owner","nameLocation":"5985:5:3","nodeType":"VariableDeclaration","scope":458,"src":"5977:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"5977:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":444,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":442,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"5993:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5993:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5977:28:3"},{"expression":{"arguments":[{"id":446,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"6024:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"6031:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":449,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"6050:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":450,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"6057:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":448,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"6040:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":452,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"6068:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":445,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"6015:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6015:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"6015:64:3"},{"expression":{"hexValue":"74727565","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6096:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":439,"id":457,"nodeType":"Return","src":"6089:11:3"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"5484:384:3","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":459,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5882:17:3","nodeType":"FunctionDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"spender","nameLocation":"5908:7:3","nodeType":"VariableDeclaration","scope":459,"src":"5900:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"addedValue","nameLocation":"5925:10:3","nodeType":"VariableDeclaration","scope":459,"src":"5917:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5899:37:3"},"returnParameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":459,"src":"5961:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":437,"name":"bool","nodeType":"ElementaryTypeName","src":"5961:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5960:6:3"},"scope":816,"src":"5873:234:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":499,"nodeType":"Block","src":"6693:328:3","statements":[{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"owner","nameLocation":"6711:5:3","nodeType":"VariableDeclaration","scope":499,"src":"6703:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":473,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":471,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"6719:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6719:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6703:28:3"},{"assignments":[475],"declarations":[{"constant":false,"id":475,"mutability":"mutable","name":"currentAllowance","nameLocation":"6749:16:3","nodeType":"VariableDeclaration","scope":499,"src":"6741:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"6741:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":480,"initialValue":{"arguments":[{"id":477,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6778:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":478,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6785:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":476,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"6768:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6768:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6741:52:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":482,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6811:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":483,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6831:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6811:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6848:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6803:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6803:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":487,"nodeType":"ExpressionStatement","src":"6803:85:3"},{"id":496,"nodeType":"UncheckedBlock","src":"6898:95:3","statements":[{"expression":{"arguments":[{"id":489,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6931:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":490,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6938:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":491,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6947:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":492,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6966:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6947:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":488,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"6922:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"6922:60:3"}]},{"expression":{"hexValue":"74727565","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7010:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":468,"id":498,"nodeType":"Return","src":"7003:11:3"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"6113:476:3","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6603:17:3","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"spender","nameLocation":"6629:7:3","nodeType":"VariableDeclaration","scope":500,"src":"6621:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"6621:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"subtractedValue","nameLocation":"6646:15:3","nodeType":"VariableDeclaration","scope":500,"src":"6638:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"6638:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6620:42:3"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"6687:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":466,"name":"bool","nodeType":"ElementaryTypeName","src":"6687:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6686:6:3"},"scope":816,"src":"6594:427:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":576,"nodeType":"Block","src":"7583:543:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":511,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"7601:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7609:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"7609:7:3","typeDescriptions":{}}},"id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7609:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7601:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7621:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":510,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7593:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"ExpressionStatement","src":"7593:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":521,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"7679:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7693:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7685:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"7685:7:3","typeDescriptions":{}}},"id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7685:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7679:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7697:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7671:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7671:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"ExpressionStatement","src":"7671:64:3"},{"expression":{"arguments":[{"id":531,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"7767:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"7773:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"7777:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":530,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"7746:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7746:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":535,"nodeType":"ExpressionStatement","src":"7746:38:3"},{"assignments":[537],"declarations":[{"constant":false,"id":537,"mutability":"mutable","name":"fromBalance","nameLocation":"7803:11:3","nodeType":"VariableDeclaration","scope":576,"src":"7795:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":541,"initialValue":{"baseExpression":{"id":538,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"7817:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":540,"indexExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"7827:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7817:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7795:37:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":543,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"7850:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":544,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"7865:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7873:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7842:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7842:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":548,"nodeType":"ExpressionStatement","src":"7842:72:3"},{"id":557,"nodeType":"UncheckedBlock","src":"7924:73:3","statements":[{"expression":{"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":549,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"7948:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":551,"indexExpression":{"id":550,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"7958:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7948:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":552,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"7966:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":553,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"7980:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7966:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":556,"nodeType":"ExpressionStatement","src":"7948:38:3"}]},{"expression":{"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":558,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"8006:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":560,"indexExpression":{"id":559,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"8016:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8006:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"8023:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8006:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":563,"nodeType":"ExpressionStatement","src":"8006:23:3"},{"eventCall":{"arguments":[{"id":565,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"8054:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"8060:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":567,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"8064:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":564,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8045:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8045:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"EmitStatement","src":"8040:31:3"},{"expression":{"arguments":[{"id":571,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"8102:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":572,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"8108:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"8112:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":570,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"8082:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8082:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":575,"nodeType":"ExpressionStatement","src":"8082:37:3"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"7027:443:3","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":577,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7484:9:3","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"from","nameLocation":"7511:4:3","nodeType":"VariableDeclaration","scope":577,"src":"7503:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"7503:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"to","nameLocation":"7533:2:3","nodeType":"VariableDeclaration","scope":577,"src":"7525:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"7525:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"amount","nameLocation":"7553:6:3","nodeType":"VariableDeclaration","scope":577,"src":"7545:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"7545:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7493:72:3"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"7583:0:3"},"scope":816,"src":"7475:651:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"8467:324:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":586,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"8485:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8504:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8496:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"8496:7:3","typeDescriptions":{}}},"id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8496:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8485:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8508:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":585,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8477:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8477:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":594,"nodeType":"ExpressionStatement","src":"8477:65:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8582:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8574:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"8574:7:3","typeDescriptions":{}}},"id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8574:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":600,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"8586:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8595:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":595,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"8553:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8553:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":603,"nodeType":"ExpressionStatement","src":"8553:49:3"},{"expression":{"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":604,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8613:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":605,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8629:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ExpressionStatement","src":"8613:22:3"},{"expression":{"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":608,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"8645:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":610,"indexExpression":{"id":609,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"8655:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8645:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8667:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8645:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":613,"nodeType":"ExpressionStatement","src":"8645:28:3"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8705:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8697:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"8697:7:3","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8697:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":619,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"8709:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8718:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":614,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8688:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8688:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"EmitStatement","src":"8683:42:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8764:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8756:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"8756:7:3","typeDescriptions":{}}},"id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8756:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"8768:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8777:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":623,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"8736:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8736:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"ExpressionStatement","src":"8736:48:3"}]},"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"8132:265:3","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":633,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8411:5:3","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"account","nameLocation":"8425:7:3","nodeType":"VariableDeclaration","scope":633,"src":"8417:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"8417:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"amount","nameLocation":"8442:6:3","nodeType":"VariableDeclaration","scope":633,"src":"8434:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8416:33:3"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[],"src":"8467:0:3"},"scope":816,"src":"8402:389:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":704,"nodeType":"Block","src":"9176:511:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":642,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"9194:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9213:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9205:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"9205:7:3","typeDescriptions":{}}},"id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9205:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9194:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9217:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9186:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":650,"nodeType":"ExpressionStatement","src":"9186:67:3"},{"expression":{"arguments":[{"id":652,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"9285:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9302:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9294:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"9294:7:3","typeDescriptions":{}}},"id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9294:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":657,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"9306:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":651,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"9264:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"ExpressionStatement","src":"9264:49:3"},{"assignments":[661],"declarations":[{"constant":false,"id":661,"mutability":"mutable","name":"accountBalance","nameLocation":"9332:14:3","nodeType":"VariableDeclaration","scope":704,"src":"9324:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"9324:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":665,"initialValue":{"baseExpression":{"id":662,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"9349:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":664,"indexExpression":{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"9359:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9349:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9324:43:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"9385:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":668,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"9403:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9385:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9411:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":666,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9377:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9377:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":672,"nodeType":"ExpressionStatement","src":"9377:71:3"},{"id":681,"nodeType":"UncheckedBlock","src":"9458:79:3","statements":[{"expression":{"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":673,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"9482:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":675,"indexExpression":{"id":674,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"9492:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9482:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"9503:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":677,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"9520:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9503:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9482:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":680,"nodeType":"ExpressionStatement","src":"9482:44:3"}]},{"expression":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":682,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"9546:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":683,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"9562:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9546:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":685,"nodeType":"ExpressionStatement","src":"9546:22:3"},{"eventCall":{"arguments":[{"id":687,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"9593:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9610:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9602:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"9602:7:3","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9602:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"9614:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":686,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"9584:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9584:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"EmitStatement","src":"9579:42:3"},{"expression":{"arguments":[{"id":696,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"9652:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9669:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9661:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"9661:7:3","typeDescriptions":{}}},"id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9661:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"9673:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":695,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"9632:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9632:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"9632:48:3"}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"8797:309:3","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":705,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9120:5:3","nodeType":"FunctionDefinition","parameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"account","nameLocation":"9134:7:3","nodeType":"VariableDeclaration","scope":705,"src":"9126:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"9126:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"amount","nameLocation":"9151:6:3","nodeType":"VariableDeclaration","scope":705,"src":"9143:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"9143:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9125:33:3"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[],"src":"9176:0:3"},"scope":816,"src":"9111:576:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"10223:257:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":716,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"10241:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10258:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10250:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"10250:7:3","typeDescriptions":{}}},"id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10250:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10241:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10262:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10233:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10233:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"10233:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":726,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"10319:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10338:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10330:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"10330:7:3","typeDescriptions":{}}},"id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10330:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10319:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10342:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10311:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10311:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"10311:68:3"},{"expression":{"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":735,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"10390:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":738,"indexExpression":{"id":736,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"10402:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10390:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":739,"indexExpression":{"id":737,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"10409:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10390:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":740,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"10420:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10390:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":742,"nodeType":"ExpressionStatement","src":"10390:36:3"},{"eventCall":{"arguments":[{"id":744,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"10450:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":745,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"10457:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":746,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"10466:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":743,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"10441:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"EmitStatement","src":"10436:37:3"}]},"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"9693:412:3","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10119:8:3","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"owner","nameLocation":"10145:5:3","nodeType":"VariableDeclaration","scope":750,"src":"10137:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"spender","nameLocation":"10168:7:3","nodeType":"VariableDeclaration","scope":750,"src":"10160:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"10160:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"amount","nameLocation":"10193:6:3","nodeType":"VariableDeclaration","scope":750,"src":"10185:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"10185:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10127:78:3"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"10223:0:3"},"scope":816,"src":"10110:370:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":792,"nodeType":"Block","src":"10881:321:3","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10899:16:3","nodeType":"VariableDeclaration","scope":792,"src":"10891:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10891:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10928:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10935:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"10918:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10918:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10891:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10957:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10982:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10982:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10977:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10977:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10991:3:3","memberName":"max","nodeType":"MemberAccess","src":"10977:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10957:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":791,"nodeType":"IfStatement","src":"10953:243:3","trueBody":{"id":790,"nodeType":"Block","src":"10996:200:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":775,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"11018:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":776,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"11038:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11018:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11046:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11010:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11010:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"11010:68:3"},{"id":789,"nodeType":"UncheckedBlock","src":"11092:94:3","statements":[{"expression":{"arguments":[{"id":782,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"11129:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"11136:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"11145:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":785,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"11164:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11145:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":781,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"11120:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11120:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"11120:51:3"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10486:270:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":793,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10770:15:3","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10803:5:3","nodeType":"VariableDeclaration","scope":793,"src":"10795:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10795:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10826:7:3","nodeType":"VariableDeclaration","scope":793,"src":"10818:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10818:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"amount","nameLocation":"10851:6:3","nodeType":"VariableDeclaration","scope":793,"src":"10843:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10843:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10785:78:3"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10881:0:3"},"scope":816,"src":"10761:441:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":803,"nodeType":"Block","src":"11905:2:3","statements":[]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"11208:573:3","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":804,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"11795:20:3","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"from","nameLocation":"11833:4:3","nodeType":"VariableDeclaration","scope":804,"src":"11825:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"11825:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"to","nameLocation":"11855:2:3","nodeType":"VariableDeclaration","scope":804,"src":"11847:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"11847:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"amount","nameLocation":"11875:6:3","nodeType":"VariableDeclaration","scope":804,"src":"11867:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":799,"name":"uint256","nodeType":"ElementaryTypeName","src":"11867:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11815:72:3"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[],"src":"11905:0:3"},"scope":816,"src":"11786:121:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":814,"nodeType":"Block","src":"12613:2:3","statements":[]},"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"11913:577:3","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":815,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12504:19:3","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"from","nameLocation":"12541:4:3","nodeType":"VariableDeclaration","scope":815,"src":"12533:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"12533:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"mutability":"mutable","name":"to","nameLocation":"12563:2:3","nodeType":"VariableDeclaration","scope":815,"src":"12555:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"12555:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"amount","nameLocation":"12583:6:3","nodeType":"VariableDeclaration","scope":815,"src":"12575:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"12575:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12523:72:3"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[],"src":"12613:0:3"},"scope":816,"src":"12495:120:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":817,"src":"1403:11214:3","usedErrors":[]}],"src":"105:12513:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[894]},"id":895,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":818,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"131:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":894,"linearizedBaseContracts":[894],"name":"IERC20","nameLocation":"212:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"225:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":828,"name":"Transfer","nameLocation":"394:8:4","nodeType":"EventDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:4","nodeType":"VariableDeclaration","scope":828,"src":"403:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:4","nodeType":"VariableDeclaration","scope":828,"src":"425:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:4","nodeType":"VariableDeclaration","scope":828,"src":"445:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:4"},"src":"388:72:4"},{"anonymous":false,"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"466:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":837,"name":"Approval","nameLocation":"625:8:4","nodeType":"EventDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:4","nodeType":"VariableDeclaration","scope":837,"src":"634:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:4","nodeType":"VariableDeclaration","scope":837,"src":"657:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:4","nodeType":"VariableDeclaration","scope":837,"src":"682:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:4"},"src":"619:78:4"},{"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"703:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":843,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":894,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"835:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":851,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":851,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":894,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"986:202:4","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":861,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:4","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"to","nameLocation":"1219:2:4","nodeType":"VariableDeclaration","scope":861,"src":"1211:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"amount","nameLocation":"1231:6:4","nodeType":"VariableDeclaration","scope":861,"src":"1223:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:4"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":861,"src":"1257:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:4"},"scope":894,"src":"1193:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"1269:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":871,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:4","nodeType":"FunctionDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"owner","nameLocation":"1565:5:4","nodeType":"VariableDeclaration","scope":871,"src":"1557:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"spender","nameLocation":"1580:7:4","nodeType":"VariableDeclaration","scope":871,"src":"1572:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:4"},"returnParameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":871,"src":"1612:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:4"},"scope":894,"src":"1538:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1627:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":881,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:4","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"spender","nameLocation":"2299:7:4","nodeType":"VariableDeclaration","scope":881,"src":"2291:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"amount","nameLocation":"2316:6:4","nodeType":"VariableDeclaration","scope":881,"src":"2308:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:4"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":881,"src":"2342:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":878,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:4"},"scope":894,"src":"2274:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"2354:287:4","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":893,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:4","nodeType":"FunctionDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":893,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"to","nameLocation":"2707:2:4","nodeType":"VariableDeclaration","scope":893,"src":"2699:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"amount","nameLocation":"2727:6:4","nodeType":"VariableDeclaration","scope":893,"src":"2719:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:4"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":893,"src":"2758:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":890,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:4"},"scope":894,"src":"2646:118:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":895,"src":"202:2564:4","usedErrors":[]}],"src":"106:2661:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Context":[2418],"Counters":[2492],"ECDSA":[3106],"EIP712":[3260],"ERC20":[816],"ERC20Permit":[1784],"ERC20Votes":[1531],"IERC20":[894],"IERC20Metadata":[1612],"IERC20Permit":[1820],"IVotes":[190],"Math":[3764],"SafeCast":[5615],"Strings":[2718]},"id":1532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":896,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","file":"./draft-ERC20Permit.sol","id":897,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1532,"sourceUnit":1785,"src":"146:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":898,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1532,"sourceUnit":3765,"src":"180:38:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../../../governance/utils/IVotes.sol","id":899,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1532,"sourceUnit":191,"src":"219:46:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../../utils/math/SafeCast.sol","id":900,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1532,"sourceUnit":5616,"src":"266:42:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1532,"sourceUnit":3107,"src":"309:47:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":903,"name":"IVotes","nameLocations":["1285:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1285:6:5"},"id":904,"nodeType":"InheritanceSpecifier","src":"1285:6:5"},{"baseName":{"id":905,"name":"ERC20Permit","nameLocations":["1293:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":1784,"src":"1293:11:5"},"id":906,"nodeType":"InheritanceSpecifier","src":"1293:11:5"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"358:894:5","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":false,"id":1531,"linearizedBaseContracts":[1531,1784,3260,1820,816,1612,894,2418,190],"name":"ERC20Votes","nameLocation":"1271:10:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Votes.Checkpoint","id":911,"members":[{"constant":false,"id":908,"mutability":"mutable","name":"fromBlock","nameLocation":"1346:9:5","nodeType":"VariableDeclaration","scope":911,"src":"1339:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":907,"name":"uint32","nodeType":"ElementaryTypeName","src":"1339:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"votes","nameLocation":"1373:5:5","nodeType":"VariableDeclaration","scope":911,"src":"1365:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":909,"name":"uint224","nodeType":"ElementaryTypeName","src":"1365:7:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1318:10:5","nodeType":"StructDefinition","scope":1531,"src":"1311:74:5","visibility":"public"},{"constant":true,"id":916,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1416:20:5","nodeType":"VariableDeclaration","scope":1531,"src":"1391:127:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1391:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1457:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":913,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1447:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1447:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":920,"mutability":"mutable","name":"_delegates","nameLocation":"1561:10:5","nodeType":"VariableDeclaration","scope":1531,"src":"1525:46:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":919,"keyType":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"1533:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1525:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":926,"mutability":"mutable","name":"_checkpoints","nameLocation":"1618:12:5","nodeType":"VariableDeclaration","scope":1531,"src":"1577:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"typeName":{"id":925,"keyType":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"1585:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1577:32:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"valueType":{"baseType":{"id":923,"nodeType":"UserDefinedTypeName","pathNode":{"id":922,"name":"Checkpoint","nameLocations":["1596:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":911,"src":"1596:10:5"},"referencedDeclaration":911,"src":"1596:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":924,"nodeType":"ArrayTypeName","src":"1596:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":930,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1657:23:5","nodeType":"VariableDeclaration","scope":1531,"src":"1636:44:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":928,"nodeType":"UserDefinedTypeName","pathNode":{"id":927,"name":"Checkpoint","nameLocations":["1636:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":911,"src":"1636:10:5"},"referencedDeclaration":911,"src":"1636:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":929,"nodeType":"ArrayTypeName","src":"1636:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"private"},{"body":{"id":947,"nodeType":"Block","src":"1856:50:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":941,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"1873:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":943,"indexExpression":{"id":942,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"1886:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1873:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":945,"indexExpression":{"id":944,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"1895:3:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1873:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"functionReturnParameters":940,"id":946,"nodeType":"Return","src":"1866:33:5"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"1687:66:5","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":948,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"1767:11:5","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"account","nameLocation":"1787:7:5","nodeType":"VariableDeclaration","scope":948,"src":"1779:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"1779:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"pos","nameLocation":"1803:3:5","nodeType":"VariableDeclaration","scope":948,"src":"1796:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":934,"name":"uint32","nodeType":"ElementaryTypeName","src":"1796:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1778:29:5"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"1837:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":938,"nodeType":"UserDefinedTypeName","pathNode":{"id":937,"name":"Checkpoint","nameLocations":["1837:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":911,"src":"1837:10:5"},"referencedDeclaration":911,"src":"1837:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"1836:19:5"},"scope":1531,"src":"1758:148:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":964,"nodeType":"Block","src":"2059:71:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":958,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"2094:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":960,"indexExpression":{"id":959,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"2107:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2094:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2116:6:5","memberName":"length","nodeType":"MemberAccess","src":"2094:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":956,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"2076:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5615_$","typeString":"type(library SafeCast)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2085:8:5","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4467,"src":"2076:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2076:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":955,"id":963,"nodeType":"Return","src":"2069:54:5"}]},"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"1912:64:5","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":965,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"1990:14:5","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"account","nameLocation":"2013:7:5","nodeType":"VariableDeclaration","scope":965,"src":"2005:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2004:17:5"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":965,"src":"2051:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":953,"name":"uint32","nodeType":"ElementaryTypeName","src":"2051:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2050:8:5"},"scope":1531,"src":"1981:149:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[167],"body":{"id":978,"nodeType":"Block","src":"2301:43:5","statements":[{"expression":{"baseExpression":{"id":974,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2318:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":976,"indexExpression":{"id":975,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"2329:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2318:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":973,"id":977,"nodeType":"Return","src":"2311:26:5"}]},"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"2136:77:5","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":979,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2227:9:5","nodeType":"FunctionDefinition","overrides":{"id":970,"nodeType":"OverrideSpecifier","overrides":[],"src":"2274:8:5"},"parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"account","nameLocation":"2245:7:5","nodeType":"VariableDeclaration","scope":979,"src":"2237:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"2237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2236:17:5"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":979,"src":"2292:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"2292:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2291:9:5"},"scope":1531,"src":"2218:126:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[141],"body":{"id":1009,"nodeType":"Block","src":"2505:127:5","statements":[{"assignments":[989],"declarations":[{"constant":false,"id":989,"mutability":"mutable","name":"pos","nameLocation":"2523:3:5","nodeType":"VariableDeclaration","scope":1009,"src":"2515:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2515:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":994,"initialValue":{"expression":{"baseExpression":{"id":990,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"2529:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":992,"indexExpression":{"id":991,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2542:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2529:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2551:6:5","memberName":"length","nodeType":"MemberAccess","src":"2529:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2515:42:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":995,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2574:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2581:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2574:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":999,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"2589:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1001,"indexExpression":{"id":1000,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2602:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2589:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1005,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1002,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2611:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2617:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2611:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2589:30:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2620:5:5","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":910,"src":"2589:36:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2574:51:5","trueExpression":{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":987,"id":1008,"nodeType":"Return","src":"2567:58:5"}]},"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"2350:68:5","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"2432:8:5","nodeType":"FunctionDefinition","overrides":{"id":984,"nodeType":"OverrideSpecifier","overrides":[],"src":"2478:8:5"},"parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"account","nameLocation":"2449:7:5","nodeType":"VariableDeclaration","scope":1010,"src":"2441:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"2441:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2440:17:5"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1010,"src":"2496:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2496:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2495:9:5"},"scope":1531,"src":"2423:209:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[151],"body":{"id":1036,"nodeType":"Block","src":"2932:158:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1022,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2950:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1023,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2964:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2970:6:5","memberName":"number","nodeType":"MemberAccess","src":"2964:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2950:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2978:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":1021,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2942:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2942:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"2942:70:5"},{"expression":{"arguments":[{"baseExpression":{"id":1030,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3048:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1032,"indexExpression":{"id":1031,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"3061:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3048:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1033,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"3071:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1029,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3029:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3029:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1020,"id":1035,"nodeType":"Return","src":"3022:61:5"}]},"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"2638:182:5","text":" @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"3a46b1a8","id":1037,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"2834:12:5","nodeType":"FunctionDefinition","overrides":{"id":1017,"nodeType":"OverrideSpecifier","overrides":[],"src":"2905:8:5"},"parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"account","nameLocation":"2855:7:5","nodeType":"VariableDeclaration","scope":1037,"src":"2847:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"2847:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"blockNumber","nameLocation":"2872:11:5","nodeType":"VariableDeclaration","scope":1037,"src":"2864:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2846:38:5"},"returnParameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1037,"src":"2923:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2922:9:5"},"scope":1531,"src":"2825:265:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[159],"body":{"id":1059,"nodeType":"Block","src":"3465:160:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1047,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"3483:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1048,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3497:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3503:6:5","memberName":"number","nodeType":"MemberAccess","src":"3497:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3483:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3511:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":1046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3475:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3475:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"3475:70:5"},{"expression":{"arguments":[{"id":1055,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"3581:23:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1056,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"3606:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1054,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3562:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3562:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1045,"id":1058,"nodeType":"Return","src":"3555:63:5"}]},"documentation":{"id":1038,"nodeType":"StructuredDocumentation","src":"3096:268:5","text":" @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n It is but NOT the sum of all the delegated votes!\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"8e539e8c","id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3378:18:5","nodeType":"FunctionDefinition","overrides":{"id":1042,"nodeType":"OverrideSpecifier","overrides":[],"src":"3438:8:5"},"parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"blockNumber","nameLocation":"3405:11:5","nodeType":"VariableDeclaration","scope":1060,"src":"3397:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"3397:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3396:21:5"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1060,"src":"3456:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"3456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3455:9:5"},"scope":1531,"src":"3369:256:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1125,"nodeType":"Block","src":"3817:1350:5","statements":[{"assignments":[1073],"declarations":[{"constant":false,"id":1073,"mutability":"mutable","name":"high","nameLocation":"4823:4:5","nodeType":"VariableDeclaration","scope":1125,"src":"4815:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1076,"initialValue":{"expression":{"id":1074,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"4830:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4836:6:5","memberName":"length","nodeType":"MemberAccess","src":"4830:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4815:27:5"},{"assignments":[1078],"declarations":[{"constant":false,"id":1078,"mutability":"mutable","name":"low","nameLocation":"4860:3:5","nodeType":"VariableDeclaration","scope":1125,"src":"4852:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"4852:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1080,"initialValue":{"hexValue":"30","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4866:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4852:15:5"},{"body":{"id":1111,"nodeType":"Block","src":"4896:210:5","statements":[{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"mid","nameLocation":"4918:3:5","nodeType":"VariableDeclaration","scope":1111,"src":"4910:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"4910:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1091,"initialValue":{"arguments":[{"id":1088,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"4937:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1089,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"4942:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1086,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4924:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3764_$","typeString":"type(library Math)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4929:7:5","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"4924:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4924:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4910:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1092,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"4965:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1094,"indexExpression":{"id":1093,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4971:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4965:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4976:9:5","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":908,"src":"4965:20:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1096,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"4988:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4965:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1109,"nodeType":"Block","src":"5050:46:5","statements":[{"expression":{"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1103,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"5068:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1104,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"5074:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5080:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5074:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5068:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1108,"nodeType":"ExpressionStatement","src":"5068:13:5"}]},"id":1110,"nodeType":"IfStatement","src":"4961:135:5","trueBody":{"id":1102,"nodeType":"Block","src":"5001:43:5","statements":[{"expression":{"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1098,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"5019:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1099,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"5026:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5019:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1101,"nodeType":"ExpressionStatement","src":"5019:10:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1081,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"4884:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1082,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"4890:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4884:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1112,"nodeType":"WhileStatement","src":"4877:229:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"5123:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5131:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5123:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"id":1117,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"5139:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1121,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1118,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"5145:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5145:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5139:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5155:5:5","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":910,"src":"5139:21:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5123:37:5","trueExpression":{"hexValue":"30","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5135:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1071,"id":1124,"nodeType":"Return","src":"5116:44:5"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"3631:73:5","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"3718:18:5","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"ckpts","nameLocation":"3758:5:5","nodeType":"VariableDeclaration","scope":1126,"src":"3737:26:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1063,"nodeType":"UserDefinedTypeName","pathNode":{"id":1062,"name":"Checkpoint","nameLocations":["3737:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":911,"src":"3737:10:5"},"referencedDeclaration":911,"src":"3737:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1064,"nodeType":"ArrayTypeName","src":"3737:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"blockNumber","nameLocation":"3773:11:5","nodeType":"VariableDeclaration","scope":1126,"src":"3765:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"3765:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3736:49:5"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1126,"src":"3808:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"3808:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3807:9:5"},"scope":1531,"src":"3709:1458:5","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[173],"body":{"id":1139,"nodeType":"Block","src":"5309:51:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1134,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"5329:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5329:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1136,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"5343:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1133,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5319:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"ExpressionStatement","src":"5319:34:5"}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"5173:70:5","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5257:8:5","nodeType":"FunctionDefinition","overrides":{"id":1131,"nodeType":"OverrideSpecifier","overrides":[],"src":"5300:8:5"},"parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"delegatee","nameLocation":"5274:9:5","nodeType":"VariableDeclaration","scope":1140,"src":"5266:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5265:19:5"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[],"src":"5309:0:5"},"scope":1531,"src":"5248:112:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[189],"body":{"id":1199,"nodeType":"Block","src":"5619:392:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1158,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5637:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5643:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"5637:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1160,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"5656:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5637:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5664:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":1157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5629:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5629:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1164,"nodeType":"ExpressionStatement","src":"5629:67:5"},{"assignments":[1166],"declarations":[{"constant":false,"id":1166,"mutability":"mutable","name":"signer","nameLocation":"5714:6:5","nodeType":"VariableDeclaration","scope":1199,"src":"5706:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"5706:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1184,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1173,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"5788:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1174,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"5810:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"5821:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1176,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"5828:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1171,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5777:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5781:6:5","memberName":"encode","nodeType":"MemberAccess","src":"5777:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5777:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1170,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5767:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1169,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"5750:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5750:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1180,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"5851:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1181,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"5866:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1182,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"5881:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1167,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"5723:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3106_$","typeString":"type(library ECDSA)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5729:7:5","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3046,"src":"5723:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5723:169:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5706:186:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"5910:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1188,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5929:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1187,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5919:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5919:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5910:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":1185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5902:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5902:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"ExpressionStatement","src":"5902:64:5"},{"expression":{"arguments":[{"id":1195,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5986:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1196,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"5994:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1194,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5976:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5976:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1198,"nodeType":"ExpressionStatement","src":"5976:28:5"}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"5366:66:5","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5446:13:5","nodeType":"FunctionDefinition","overrides":{"id":1155,"nodeType":"OverrideSpecifier","overrides":[],"src":"5610:8:5"},"parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"delegatee","nameLocation":"5477:9:5","nodeType":"VariableDeclaration","scope":1200,"src":"5469:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"5469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"nonce","nameLocation":"5504:5:5","nodeType":"VariableDeclaration","scope":1200,"src":"5496:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5496:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"expiry","nameLocation":"5527:6:5","nodeType":"VariableDeclaration","scope":1200,"src":"5519:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"5519:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"v","nameLocation":"5549:1:5","nodeType":"VariableDeclaration","scope":1200,"src":"5543:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1148,"name":"uint8","nodeType":"ElementaryTypeName","src":"5543:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"r","nameLocation":"5568:1:5","nodeType":"VariableDeclaration","scope":1200,"src":"5560:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5560:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"s","nameLocation":"5587:1:5","nodeType":"VariableDeclaration","scope":1200,"src":"5579:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5579:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5459:135:5"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"5619:0:5"},"scope":1531,"src":"5437:574:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1212,"nodeType":"Block","src":"6175:41:5","statements":[{"expression":{"expression":{"arguments":[{"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6197:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1207,"name":"uint224","nodeType":"ElementaryTypeName","src":"6197:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1206,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6192:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6192:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6206:3:5","memberName":"max","nodeType":"MemberAccess","src":"6192:17:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1205,"id":1211,"nodeType":"Return","src":"6185:24:5"}]},"documentation":{"id":1201,"nodeType":"StructuredDocumentation","src":"6017:91:5","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"6122:10:5","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[],"src":"6132:2:5"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"6166:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1203,"name":"uint224","nodeType":"ElementaryTypeName","src":"6166:7:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"6165:9:5"},"scope":1531,"src":"6113:103:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[633],"body":{"id":1244,"nodeType":"Block","src":"6379:211:5","statements":[{"expression":{"arguments":[{"id":1225,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"6401:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"6410:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1222,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6389:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1531_$","typeString":"type(contract super ERC20Votes)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6395:5:5","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":633,"src":"6389:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6389:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"6389:28:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1230,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6435:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6435:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1232,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6452:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6452:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"6435:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6466:50:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":1229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6427:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6427:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1237,"nodeType":"ExpressionStatement","src":"6427:90:5"},{"expression":{"arguments":[{"id":1239,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"6545:23:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1240,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"6570:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1241,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"6576:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1238,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"6528:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6528:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1243,"nodeType":"ExpressionStatement","src":"6528:55:5"}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"6222:78:5","text":" @dev Snapshots the totalSupply after it has been increased."},"id":1245,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6314:5:5","nodeType":"FunctionDefinition","overrides":{"id":1220,"nodeType":"OverrideSpecifier","overrides":[],"src":"6370:8:5"},"parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"account","nameLocation":"6328:7:5","nodeType":"VariableDeclaration","scope":1245,"src":"6320:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"6320:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"amount","nameLocation":"6345:6:5","nodeType":"VariableDeclaration","scope":1245,"src":"6337:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"6337:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6319:33:5"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[],"src":"6379:0:5"},"scope":1531,"src":"6305:285:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[705],"body":{"id":1267,"nodeType":"Block","src":"6753:116:5","statements":[{"expression":{"arguments":[{"id":1257,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"6775:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1258,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"6784:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1254,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6763:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1531_$","typeString":"type(contract super ERC20Votes)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6769:5:5","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":705,"src":"6763:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6763:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1260,"nodeType":"ExpressionStatement","src":"6763:28:5"},{"expression":{"arguments":[{"id":1262,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"6819:23:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1263,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"6844:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1264,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"6855:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1261,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"6802:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1266,"nodeType":"ExpressionStatement","src":"6802:60:5"}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"6596:78:5","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":1268,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"6688:5:5","nodeType":"FunctionDefinition","overrides":{"id":1252,"nodeType":"OverrideSpecifier","overrides":[],"src":"6744:8:5"},"parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"account","nameLocation":"6702:7:5","nodeType":"VariableDeclaration","scope":1268,"src":"6694:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"6694:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"amount","nameLocation":"6719:6:5","nodeType":"VariableDeclaration","scope":1268,"src":"6711:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"6711:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6693:33:5"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"6753:0:5"},"scope":1531,"src":"6679:190:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[815],"body":{"id":1297,"nodeType":"Block","src":"7129:127:5","statements":[{"expression":{"arguments":[{"id":1282,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"7165:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1283,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7171:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1284,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"7175:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1279,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7139:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1531_$","typeString":"type(contract super ERC20Votes)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7145:19:5","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":815,"src":"7139:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7139:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"ExpressionStatement","src":"7139:43:5"},{"expression":{"arguments":[{"arguments":[{"id":1289,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"7220:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1288,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"7210:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7210:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1292,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7237:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1291,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"7227:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7227:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1294,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"7242:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1287,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"7193:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7193:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"ExpressionStatement","src":"7193:56:5"}]},"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"6875:122:5","text":" @dev Move voting power when tokens are transferred.\n Emits a {DelegateVotesChanged} event."},"id":1298,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"7011:19:5","nodeType":"FunctionDefinition","overrides":{"id":1277,"nodeType":"OverrideSpecifier","overrides":[],"src":"7120:8:5"},"parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"from","nameLocation":"7048:4:5","nodeType":"VariableDeclaration","scope":1298,"src":"7040:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"7040:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"to","nameLocation":"7070:2:5","nodeType":"VariableDeclaration","scope":1298,"src":"7062:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"7062:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"amount","nameLocation":"7090:6:5","nodeType":"VariableDeclaration","scope":1298,"src":"7082:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"7082:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7030:72:5"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[],"src":"7129:0:5"},"scope":1531,"src":"7002:254:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1336,"nodeType":"Block","src":"7487:306:5","statements":[{"assignments":[1307],"declarations":[{"constant":false,"id":1307,"mutability":"mutable","name":"currentDelegate","nameLocation":"7505:15:5","nodeType":"VariableDeclaration","scope":1336,"src":"7497:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1311,"initialValue":{"arguments":[{"id":1309,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"7533:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1308,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"7523:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7497:46:5"},{"assignments":[1313],"declarations":[{"constant":false,"id":1313,"mutability":"mutable","name":"delegatorBalance","nameLocation":"7561:16:5","nodeType":"VariableDeclaration","scope":1336,"src":"7553:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"7553:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1317,"initialValue":{"arguments":[{"id":1315,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"7590:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1314,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7580:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7580:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7553:47:5"},{"expression":{"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1318,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"7610:10:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1320,"indexExpression":{"id":1319,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"7621:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7610:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1321,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"7634:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7610:33:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1323,"nodeType":"ExpressionStatement","src":"7610:33:5"},{"eventCall":{"arguments":[{"id":1325,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"7675:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1326,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"7686:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"7703:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1324,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"7659:15:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7659:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"EmitStatement","src":"7654:59:5"},{"expression":{"arguments":[{"id":1331,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"7741:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1332,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"7758:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1333,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"7769:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1330,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"7724:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7724:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1335,"nodeType":"ExpressionStatement","src":"7724:62:5"}]},"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"7262:146:5","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {DelegateChanged} and {DelegateVotesChanged}."},"id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"7422:9:5","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"delegator","nameLocation":"7440:9:5","nodeType":"VariableDeclaration","scope":1337,"src":"7432:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"delegatee","nameLocation":"7459:9:5","nodeType":"VariableDeclaration","scope":1337,"src":"7451:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"7451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7431:38:5"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[],"src":"7487:0:5"},"scope":1531,"src":"7413:380:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1407,"nodeType":"Block","src":"7905:521:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7919:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1347,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"7926:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7919:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1349,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"7933:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7942:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7933:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7919:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1406,"nodeType":"IfStatement","src":"7915:505:5","trueBody":{"id":1405,"nodeType":"Block","src":"7945:475:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1353,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7963:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7978:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7970:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"7970:7:5","typeDescriptions":{}}},"id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7970:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7963:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1378,"nodeType":"IfStatement","src":"7959:221:5","trueBody":{"id":1377,"nodeType":"Block","src":"7982:198:5","statements":[{"assignments":[1360,1362],"declarations":[{"constant":false,"id":1360,"mutability":"mutable","name":"oldWeight","nameLocation":"8009:9:5","nodeType":"VariableDeclaration","scope":1377,"src":"8001:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"8001:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"newWeight","nameLocation":"8028:9:5","nodeType":"VariableDeclaration","scope":1377,"src":"8020:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"8020:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1370,"initialValue":{"arguments":[{"baseExpression":{"id":1364,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"8058:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1366,"indexExpression":{"id":1365,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"8071:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8058:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1367,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"8077:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1368,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"8088:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1363,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"8041:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8041:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8000:95:5"},{"eventCall":{"arguments":[{"id":1372,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"8139:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1373,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8144:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1374,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"8155:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1371,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"8118:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8118:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1376,"nodeType":"EmitStatement","src":"8113:52:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1379,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"8198:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8213:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8205:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"8205:7:5","typeDescriptions":{}}},"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8198:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"nodeType":"IfStatement","src":"8194:216:5","trueBody":{"id":1403,"nodeType":"Block","src":"8217:193:5","statements":[{"assignments":[1386,1388],"declarations":[{"constant":false,"id":1386,"mutability":"mutable","name":"oldWeight","nameLocation":"8244:9:5","nodeType":"VariableDeclaration","scope":1403,"src":"8236:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"8236:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"newWeight","nameLocation":"8263:9:5","nodeType":"VariableDeclaration","scope":1403,"src":"8255:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"8255:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1396,"initialValue":{"arguments":[{"baseExpression":{"id":1390,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"8293:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1392,"indexExpression":{"id":1391,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"8306:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8293:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1393,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"8312:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1394,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"8318:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1389,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"8276:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8276:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8235:90:5"},{"eventCall":{"arguments":[{"id":1398,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"8369:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1399,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"8374:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1400,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"8385:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1397,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"8348:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8348:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1402,"nodeType":"EmitStatement","src":"8343:52:5"}]}}]}}]},"id":1408,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"7808:16:5","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"src","nameLocation":"7842:3:5","nodeType":"VariableDeclaration","scope":1408,"src":"7834:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"7834:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"dst","nameLocation":"7863:3:5","nodeType":"VariableDeclaration","scope":1408,"src":"7855:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"7855:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"amount","nameLocation":"7884:6:5","nodeType":"VariableDeclaration","scope":1408,"src":"7876:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"7876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7824:72:5"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[],"src":"7905:0:5"},"scope":1531,"src":"7799:627:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1501,"nodeType":"Block","src":"8640:423:5","statements":[{"assignments":[1432],"declarations":[{"constant":false,"id":1432,"mutability":"mutable","name":"pos","nameLocation":"8658:3:5","nodeType":"VariableDeclaration","scope":1501,"src":"8650:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1431,"name":"uint256","nodeType":"ElementaryTypeName","src":"8650:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1435,"initialValue":{"expression":{"id":1433,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"8664:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8670:6:5","memberName":"length","nodeType":"MemberAccess","src":"8664:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8650:26:5"},{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"8686:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"8698:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8705:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8698:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"id":1441,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"8713:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1445,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"8719:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8725:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8719:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8713:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8728:5:5","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":910,"src":"8713:20:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8698:35:5","trueExpression":{"hexValue":"30","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8709:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"8686:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1449,"nodeType":"ExpressionStatement","src":"8686:47:5"},{"expression":{"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"8743:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1452,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"8758:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1453,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8769:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1451,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"8755:2:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8755:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8743:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1456,"nodeType":"ExpressionStatement","src":"8743:32:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1457,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"8790:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8796:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8790:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1460,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"8801:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1464,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1461,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"8807:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8813:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8807:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8801:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8816:9:5","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":908,"src":"8801:24:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1466,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8829:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8835:6:5","memberName":"number","nodeType":"MemberAccess","src":"8829:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8801:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8790:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1499,"nodeType":"Block","src":"8926:131:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1489,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8992:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8998:6:5","memberName":"number","nodeType":"MemberAccess","src":"8992:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1487,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"8974:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5615_$","typeString":"type(library SafeCast)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8983:8:5","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4467,"src":"8974:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":1494,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"9033:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1492,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"9014:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5615_$","typeString":"type(library SafeCast)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9023:9:5","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":3867,"src":"9014:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9014:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1486,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"8951:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$911_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8963:9:5","9007:5:5"],"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"8951:94:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$911_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}],"expression":{"id":1483,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"8940:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8946:4:5","memberName":"push","nodeType":"MemberAccess","src":"8940:10:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$911_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,struct ERC20Votes.Checkpoint storage ref)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8940:106:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1498,"nodeType":"ExpressionStatement","src":"8940:106:5"}]},"id":1500,"nodeType":"IfStatement","src":"8786:271:5","trueBody":{"id":1482,"nodeType":"Block","src":"8843:77:5","statements":[{"expression":{"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1470,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"8857:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1474,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1471,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"8863:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8869:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8863:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8857:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8872:5:5","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":910,"src":"8857:20:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1478,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"8899:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1476,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"8880:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5615_$","typeString":"type(library SafeCast)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8889:9:5","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":3867,"src":"8880:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8880:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"8857:52:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1481,"nodeType":"ExpressionStatement","src":"8857:52:5"}]}}]},"id":1502,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"8441:16:5","nodeType":"FunctionDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"ckpts","nameLocation":"8488:5:5","nodeType":"VariableDeclaration","scope":1502,"src":"8467:26:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1410,"nodeType":"UserDefinedTypeName","pathNode":{"id":1409,"name":"Checkpoint","nameLocations":["8467:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":911,"src":"8467:10:5"},"referencedDeclaration":911,"src":"8467:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$911_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1411,"nodeType":"ArrayTypeName","src":"8467:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$911_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"op","nameLocation":"8553:2:5","nodeType":"VariableDeclaration","scope":1502,"src":"8503:52:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":1421,"nodeType":"FunctionTypeName","parameterTypes":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"8512:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"8512:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"8521:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"8521:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8511:18:5"},"returnParameterTypes":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"8544:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"8544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8543:9:5"},"src":"8503:52:5","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"delta","nameLocation":"8573:5:5","nodeType":"VariableDeclaration","scope":1502,"src":"8565:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"8565:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8457:127:5"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"oldWeight","nameLocation":"8610:9:5","nodeType":"VariableDeclaration","scope":1502,"src":"8602:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"8602:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"newWeight","nameLocation":"8629:9:5","nodeType":"VariableDeclaration","scope":1502,"src":"8621:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"8621:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8601:38:5"},"scope":1531,"src":"8432:631:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1515,"nodeType":"Block","src":"9136:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"9153:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1512,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"9157:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9153:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1510,"id":1514,"nodeType":"Return","src":"9146:12:5"}]},"id":1516,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9078:4:5","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"a","nameLocation":"9091:1:5","nodeType":"VariableDeclaration","scope":1516,"src":"9083:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"9083:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"b","nameLocation":"9102:1:5","nodeType":"VariableDeclaration","scope":1516,"src":"9094:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"9094:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9082:22:5"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1516,"src":"9127:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"9127:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9126:9:5"},"scope":1531,"src":"9069:96:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1529,"nodeType":"Block","src":"9243:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"9260:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1526,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"9264:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9260:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1524,"id":1528,"nodeType":"Return","src":"9253:12:5"}]},"id":1530,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9180:9:5","nodeType":"FunctionDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"a","nameLocation":"9198:1:5","nodeType":"VariableDeclaration","scope":1530,"src":"9190:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"9190:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1520,"mutability":"mutable","name":"b","nameLocation":"9209:1:5","nodeType":"VariableDeclaration","scope":1530,"src":"9201:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"9201:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9189:22:5"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1530,"src":"9234:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"9234:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9233:9:5"},"scope":1531,"src":"9171:101:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1532,"src":"1253:8021:5","usedErrors":[]}],"src":"121:9154:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol","exportedSymbols":{"Context":[2418],"Counters":[2492],"ECDSA":[3106],"EIP712":[3260],"ERC20":[816],"ERC20Permit":[1784],"ERC20Votes":[1531],"ERC20VotesComp":[1587],"IERC20":[894],"IERC20Metadata":[1612],"IERC20Permit":[1820],"IVotes":[190],"Math":[3764],"SafeCast":[5615],"Strings":[2718]},"id":1588,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1533,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"125:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"./ERC20Votes.sol","id":1534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1588,"sourceUnit":1532,"src":"150:26:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1536,"name":"ERC20Votes","nameLocations":["1278:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1531,"src":"1278:10:6"},"id":1537,"nodeType":"InheritanceSpecifier","src":"1278:10:6"}],"canonicalName":"ERC20VotesComp","contractDependencies":[],"contractKind":"contract","documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"178:1063:6","text":" @dev Extension of ERC20 to support Compound's voting and delegation. This version exactly matches Compound's\n interface, with the drawback of only supporting supply up to (2^96^ - 1).\n NOTE: You should use this contract if you need exact compatibility with COMP (for example in order to use your token\n with Governor Alpha or Bravo) and if you are sure the supply cap of 2^96^ is enough for you. Otherwise, use the\n {ERC20Votes} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getCurrentVotes} and {getPriorVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":false,"id":1587,"linearizedBaseContracts":[1587,1531,1784,3260,1820,816,1612,894,2418,190],"name":"ERC20VotesComp","nameLocation":"1260:14:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1552,"nodeType":"Block","src":"1472:60:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1548,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"1516:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1547,"name":"getVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"1507:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1545,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"1489:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5615_$","typeString":"type(library SafeCast)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1498:8:6","memberName":"toUint96","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"1489:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint96_$","typeString":"function (uint256) pure returns (uint96)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1489:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1544,"id":1551,"nodeType":"Return","src":"1482:43:6"}]},"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"1295:91:6","text":" @dev Comp version of the {getVotes} accessor, with `uint96` return type."},"functionSelector":"b4b5ea57","id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentVotes","nameLocation":"1400:15:6","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"account","nameLocation":"1424:7:6","nodeType":"VariableDeclaration","scope":1553,"src":"1416:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"1416:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1415:17:6"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1553,"src":"1464:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1542,"name":"uint96","nodeType":"ElementaryTypeName","src":"1464:6:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1463:8:6"},"scope":1587,"src":"1391:141:6","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":1571,"nodeType":"Block","src":"1738:77:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1566,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"1786:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1567,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"1795:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1565,"name":"getPastVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"1773:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1563,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"1755:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5615_$","typeString":"type(library SafeCast)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1764:8:6","memberName":"toUint96","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"1755:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint96_$","typeString":"function (uint256) pure returns (uint96)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1755:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1562,"id":1570,"nodeType":"Return","src":"1748:60:6"}]},"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"1538:95:6","text":" @dev Comp version of the {getPastVotes} accessor, with `uint96` return type."},"functionSelector":"782d6fe1","id":1572,"implemented":true,"kind":"function","modifiers":[],"name":"getPriorVotes","nameLocation":"1647:13:6","nodeType":"FunctionDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"account","nameLocation":"1669:7:6","nodeType":"VariableDeclaration","scope":1572,"src":"1661:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"1661:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1558,"mutability":"mutable","name":"blockNumber","nameLocation":"1686:11:6","nodeType":"VariableDeclaration","scope":1572,"src":"1678:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1660:38:6"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1572,"src":"1730:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1560,"name":"uint96","nodeType":"ElementaryTypeName","src":"1730:6:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1729:8:6"},"scope":1587,"src":"1638:177:6","stateMutability":"view","virtual":true,"visibility":"external"},{"baseFunctions":[1213],"body":{"id":1585,"nodeType":"Block","src":"2007:40:6","statements":[{"expression":{"expression":{"arguments":[{"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2029:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1580,"name":"uint96","nodeType":"ElementaryTypeName","src":"2029:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":1579,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2024:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2024:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2037:3:6","memberName":"max","nodeType":"MemberAccess","src":"2024:16:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1578,"id":1584,"nodeType":"Return","src":"2017:23:6"}]},"documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"1821:110:6","text":" @dev Maximum token supply. Reduced to `type(uint96).max` (2^96^ - 1) to fit COMP interface."},"id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"1945:10:6","nodeType":"FunctionDefinition","overrides":{"id":1575,"nodeType":"OverrideSpecifier","overrides":[],"src":"1980:8:6"},"parameters":{"id":1574,"nodeType":"ParameterList","parameters":[],"src":"1955:2:6"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1586,"src":"1998:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1576,"name":"uint224","nodeType":"ElementaryTypeName","src":"1998:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1997:9:6"},"scope":1587,"src":"1936:111:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1588,"src":"1242:807:6","usedErrors":[]}],"src":"125:1925:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[894],"IERC20Metadata":[1612]},"id":1613,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1589,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1590,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1613,"sourceUnit":895,"src":"135:23:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1592,"name":"IERC20","nameLocations":["305:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"305:6:7"},"id":1593,"nodeType":"InheritanceSpecifier","src":"305:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"160:116:7","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1612,"linearizedBaseContracts":[1612,894],"name":"IERC20Metadata","nameLocation":"287:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"318:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1599,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:7","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"390:2:7"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1599,"src":"416:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1596,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:7"},"scope":1612,"src":"377:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"437:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1605,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:7","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[],"src":"513:2:7"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"539:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1602,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:7"},"scope":1612,"src":"498:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"560:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1611,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:7","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[],"src":"647:2:7"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"673:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1608,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:7"},"scope":1612,"src":"630:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1613,"src":"277:405:7","usedErrors":[]}],"src":"110:573:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","exportedSymbols":{"Context":[2418],"Counters":[2492],"ECDSA":[3106],"EIP712":[3260],"ERC20":[816],"ERC20Permit":[1784],"IERC20":[894],"IERC20Metadata":[1612],"IERC20Permit":[1820],"Strings":[2718]},"id":1785,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1614,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"./draft-IERC20Permit.sol","id":1615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1785,"sourceUnit":1821,"src":"153:34:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1785,"sourceUnit":817,"src":"188:22:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","file":"../../../utils/cryptography/draft-EIP712.sol","id":1617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1785,"sourceUnit":3261,"src":"211:54:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1618,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1785,"sourceUnit":3107,"src":"266:47:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":1619,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1785,"sourceUnit":2493,"src":"314:37:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1621,"name":"ERC20","nameLocations":["904:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":816,"src":"904:5:8"},"id":1622,"nodeType":"InheritanceSpecifier","src":"904:5:8"},{"baseName":{"id":1623,"name":"IERC20Permit","nameLocations":["911:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1820,"src":"911:12:8"},"id":1624,"nodeType":"InheritanceSpecifier","src":"911:12:8"},{"baseName":{"id":1625,"name":"EIP712","nameLocations":["925:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3260,"src":"925:6:8"},"id":1626,"nodeType":"InheritanceSpecifier","src":"925:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"353:517:8","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":false,"id":1784,"linearizedBaseContracts":[1784,3260,1820,816,1612,894,2418],"name":"ERC20Permit","nameLocation":"889:11:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1630,"libraryName":{"id":1627,"name":"Counters","nameLocations":["944:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"944:8:8"},"nodeType":"UsingForDirective","src":"938:36:8","typeName":{"id":1629,"nodeType":"UserDefinedTypeName","pathNode":{"id":1628,"name":"Counters.Counter","nameLocations":["957:8:8","966:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2424,"src":"957:16:8"},"referencedDeclaration":2424,"src":"957:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":1635,"mutability":"mutable","name":"_nonces","nameLocation":"1025:7:8","nodeType":"VariableDeclaration","scope":1784,"src":"980:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2424_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":1634,"keyType":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"980:36:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2424_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueType":{"id":1633,"nodeType":"UserDefinedTypeName","pathNode":{"id":1632,"name":"Counters.Counter","nameLocations":["999:8:8","1008:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2424,"src":"999:16:8"},"referencedDeclaration":2424,"src":"999:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":1640,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1116:16:8","nodeType":"VariableDeclaration","scope":1784,"src":"1091:147:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1091:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1153:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1637,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1143:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1143:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"1244:254:8","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1643,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1571:32:8","nodeType":"VariableDeclaration","scope":1784,"src":"1555:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1555:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1653,"nodeType":"Block","src":"1885:2:8","statements":[]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"1610:220:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1654,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1649,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1874:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1880:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1651,"kind":"baseConstructorSpecifier","modifierName":{"id":1648,"name":"EIP712","nameLocations":["1867:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3260,"src":"1867:6:8"},"nodeType":"ModifierInvocation","src":"1867:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"name","nameLocation":"1861:4:8","nodeType":"VariableDeclaration","scope":1654,"src":"1847:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1645,"name":"string","nodeType":"ElementaryTypeName","src":"1847:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1846:20:8"},"returnParameters":{"id":1652,"nodeType":"ParameterList","parameters":[],"src":"1885:0:8"},"scope":1784,"src":"1835:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1805],"body":{"id":1726,"nodeType":"Block","src":"2146:428:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1674,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2164:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2170:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"2164:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1676,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"2183:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2164:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2156:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2156:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"ExpressionStatement","src":"2156:69:8"},{"assignments":[1682],"declarations":[{"constant":false,"id":1682,"mutability":"mutable","name":"structHash","nameLocation":"2244:10:8","nodeType":"VariableDeclaration","scope":1726,"src":"2236:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2236:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1696,"initialValue":{"arguments":[{"arguments":[{"id":1686,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"2278:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1687,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2296:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1688,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"2303:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2312:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1691,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2329:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1690,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"2319:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2319:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1693,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"2337:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1684,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2267:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2271:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2267:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2267:79:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1683,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2257:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2257:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2236:111:8"},{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"hash","nameLocation":"2366:4:8","nodeType":"VariableDeclaration","scope":1726,"src":"2358:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2358:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1702,"initialValue":{"arguments":[{"id":1700,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"2390:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1699,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"2373:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2358:43:8"},{"assignments":[1704],"declarations":[{"constant":false,"id":1704,"mutability":"mutable","name":"signer","nameLocation":"2420:6:8","nodeType":"VariableDeclaration","scope":1726,"src":"2412:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"2412:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1712,"initialValue":{"arguments":[{"id":1707,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"2443:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1708,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"2449:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1709,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"2452:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1710,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"2455:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1705,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"2429:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3106_$","typeString":"type(library ECDSA)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2435:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3046,"src":"2429:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2412:45:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"2475:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1715,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2485:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2475:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2492:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2467:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2467:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1719,"nodeType":"ExpressionStatement","src":"2467:58:8"},{"expression":{"arguments":[{"id":1721,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2545:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1722,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"2552:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2561:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1720,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"2536:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2536:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1725,"nodeType":"ExpressionStatement","src":"2536:31:8"}]},"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"1893:50:8","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1957:6:8","nodeType":"FunctionDefinition","overrides":{"id":1671,"nodeType":"OverrideSpecifier","overrides":[],"src":"2137:8:8"},"parameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"owner","nameLocation":"1981:5:8","nodeType":"VariableDeclaration","scope":1727,"src":"1973:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"spender","nameLocation":"2004:7:8","nodeType":"VariableDeclaration","scope":1727,"src":"1996:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"1996:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"mutability":"mutable","name":"value","nameLocation":"2029:5:8","nodeType":"VariableDeclaration","scope":1727,"src":"2021:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2021:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"deadline","nameLocation":"2052:8:8","nodeType":"VariableDeclaration","scope":1727,"src":"2044:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"2044:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"v","nameLocation":"2076:1:8","nodeType":"VariableDeclaration","scope":1727,"src":"2070:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1664,"name":"uint8","nodeType":"ElementaryTypeName","src":"2070:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"r","nameLocation":"2095:1:8","nodeType":"VariableDeclaration","scope":1727,"src":"2087:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2087:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1669,"mutability":"mutable","name":"s","nameLocation":"2114:1:8","nodeType":"VariableDeclaration","scope":1727,"src":"2106:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2106:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1963:158:8"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[],"src":"2146:0:8"},"scope":1784,"src":"1948:626:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1813],"body":{"id":1742,"nodeType":"Block","src":"2713:48:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1736,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"2730:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2424_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1738,"indexExpression":{"id":1737,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2738:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2730:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage","typeString":"struct Counters.Counter storage ref"}},"id":1739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2745:7:8","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"2730:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2424_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2424_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1735,"id":1741,"nodeType":"Return","src":"2723:31:8"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"2580:50:8","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2644:6:8","nodeType":"FunctionDefinition","overrides":{"id":1732,"nodeType":"OverrideSpecifier","overrides":[],"src":"2686:8:8"},"parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"owner","nameLocation":"2659:5:8","nodeType":"VariableDeclaration","scope":1743,"src":"2651:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2651:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2650:15:8"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1743,"src":"2704:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2703:9:8"},"scope":1784,"src":"2635:126:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1819],"body":{"id":1753,"nodeType":"Block","src":"2954:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1750,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"2971:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2971:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1749,"id":1752,"nodeType":"Return","src":"2964:27:8"}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"2767:60:8","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":1754,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2894:16:8","nodeType":"FunctionDefinition","overrides":{"id":1746,"nodeType":"OverrideSpecifier","overrides":[],"src":"2927:8:8"},"parameters":{"id":1745,"nodeType":"ParameterList","parameters":[],"src":"2910:2:8"},"returnParameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"2945:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1747,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2945:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2944:9:8"},"scope":1784,"src":"2885:113:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1782,"nodeType":"Block","src":"3206:126:8","statements":[{"assignments":[1766],"declarations":[{"constant":false,"id":1766,"mutability":"mutable","name":"nonce","nameLocation":"3241:5:8","nodeType":"VariableDeclaration","scope":1782,"src":"3216:30:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1765,"nodeType":"UserDefinedTypeName","pathNode":{"id":1764,"name":"Counters.Counter","nameLocations":["3216:8:8","3225:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2424,"src":"3216:16:8"},"referencedDeclaration":2424,"src":"3216:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1770,"initialValue":{"baseExpression":{"id":1767,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"3249:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2424_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1769,"indexExpression":{"id":1768,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"3257:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3249:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3216:47:8"},{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1771,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"3273:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1772,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"3283:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3289:7:8","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"3283:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2424_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2424_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3283:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3273:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1776,"nodeType":"ExpressionStatement","src":"3273:25:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1777,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"3308:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3314:9:8","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"3308:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2424_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2424_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3308:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1781,"nodeType":"ExpressionStatement","src":"3308:17:8"}]},"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"3004:120:8","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3138:9:8","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"owner","nameLocation":"3156:5:8","nodeType":"VariableDeclaration","scope":1783,"src":"3148:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"3148:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3147:15:8"},"returnParameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"current","nameLocation":"3197:7:8","nodeType":"VariableDeclaration","scope":1783,"src":"3189:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3189:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3188:17:8"},"scope":1784,"src":"3129:203:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1785,"src":"871:2463:8","usedErrors":[]}],"src":"128:3207:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1820]},"id":1821,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1786,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"139:480:9","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1820,"linearizedBaseContracts":[1820],"name":"IERC20Permit","nameLocation":"630:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"649:792:9","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1805,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:9","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"owner","nameLocation":"1479:5:9","nodeType":"VariableDeclaration","scope":1805,"src":"1471:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"spender","nameLocation":"1502:7:9","nodeType":"VariableDeclaration","scope":1805,"src":"1494:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1791,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"value","nameLocation":"1527:5:9","nodeType":"VariableDeclaration","scope":1805,"src":"1519:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:9","nodeType":"VariableDeclaration","scope":1805,"src":"1542:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"v","nameLocation":"1574:1:9","nodeType":"VariableDeclaration","scope":1805,"src":"1568:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1797,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"r","nameLocation":"1593:1:9","nodeType":"VariableDeclaration","scope":1805,"src":"1585:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"s","nameLocation":"1612:1:9","nodeType":"VariableDeclaration","scope":1805,"src":"1604:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:9"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[],"src":"1628:0:9"},"scope":1820,"src":"1446:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"1635:294:9","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1813,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:9","nodeType":"FunctionDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"owner","nameLocation":"1958:5:9","nodeType":"VariableDeclaration","scope":1813,"src":"1950:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:9"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1813,"src":"1988:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:9"},"scope":1820,"src":"1934:63:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"2003:128:9","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1819,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:9","nodeType":"FunctionDefinition","parameters":{"id":1815,"nodeType":"ParameterList","parameters":[],"src":"2214:2:9"},"returnParameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1819,"src":"2240:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:9"},"scope":1820,"src":"2189:60:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1821,"src":"620:1631:9","usedErrors":[]}],"src":"114:2138:9"},"id":9},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2396],"IERC20":[894],"IERC20Permit":[1820],"SafeERC20":[2101]},"id":2102,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1822,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2102,"sourceUnit":895,"src":"140:23:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":1824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2102,"sourceUnit":1821,"src":"164:46:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2102,"sourceUnit":2397,"src":"211:36:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"249:457:10","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2101,"linearizedBaseContracts":[2101],"name":"SafeERC20","nameLocation":"715:9:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1829,"libraryName":{"id":1827,"name":"Address","nameLocations":["737:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2396,"src":"737:7:10"},"nodeType":"UsingForDirective","src":"731:26:10","typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1851,"nodeType":"Block","src":"865:103:10","statements":[{"expression":{"arguments":[{"id":1840,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"895:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1843,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"925:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"931:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":861,"src":"925:14:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:8:10","memberName":"selector","nodeType":"MemberAccess","src":"925:23:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1846,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"950:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"954:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1841,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"906:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1839,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"875:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$894_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:86:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1850,"nodeType":"ExpressionStatement","src":"875:86:10"}]},"id":1852,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:10","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"token","nameLocation":"801:5:10","nodeType":"VariableDeclaration","scope":1852,"src":"794:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},"typeName":{"id":1831,"nodeType":"UserDefinedTypeName","pathNode":{"id":1830,"name":"IERC20","nameLocations":["794:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"794:6:10"},"referencedDeclaration":894,"src":"794:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"to","nameLocation":"824:2:10","nodeType":"VariableDeclaration","scope":1852,"src":"816:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"844:5:10","nodeType":"VariableDeclaration","scope":1852,"src":"836:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:10"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[],"src":"865:0:10"},"scope":2101,"src":"763:205:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1877,"nodeType":"Block","src":"1102:113:10","statements":[{"expression":{"arguments":[{"id":1865,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"1132:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1868,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"1162:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:12:10","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":893,"src":"1162:18:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:8:10","memberName":"selector","nodeType":"MemberAccess","src":"1162:27:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1871,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"1191:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1872,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"1197:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"1201:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1866,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1143:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1139:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1864,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"1112:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$894_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:96:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1876,"nodeType":"ExpressionStatement","src":"1112:96:10"}]},"id":1878,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:10","nodeType":"FunctionDefinition","parameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"token","nameLocation":"1016:5:10","nodeType":"VariableDeclaration","scope":1878,"src":"1009:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},"typeName":{"id":1854,"nodeType":"UserDefinedTypeName","pathNode":{"id":1853,"name":"IERC20","nameLocations":["1009:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"1009:6:10"},"referencedDeclaration":894,"src":"1009:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"from","nameLocation":"1039:4:10","nodeType":"VariableDeclaration","scope":1878,"src":"1031:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"to","nameLocation":"1061:2:10","nodeType":"VariableDeclaration","scope":1878,"src":"1053:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1861,"mutability":"mutable","name":"value","nameLocation":"1081:5:10","nodeType":"VariableDeclaration","scope":1878,"src":"1073:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:10"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[],"src":"1102:0:10"},"scope":2101,"src":"974:241:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1921,"nodeType":"Block","src":"1581:497:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"1830:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1898,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2101","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2101","typeString":"library SafeERC20"}],"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1896,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:10","typeDescriptions":{}}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1900,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"1877:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1894,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"1846:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:9:10","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":871,"src":"1846:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:163:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1908,"nodeType":"ExpressionStatement","src":"1808:163:10"},{"expression":{"arguments":[{"id":1910,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"2001:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1913,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"2031:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":881,"src":"2031:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2045:8:10","memberName":"selector","nodeType":"MemberAccess","src":"2031:22:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1916,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"2055:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"2064:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1911,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2012:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1909,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"1981:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$894_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:90:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1920,"nodeType":"ExpressionStatement","src":"1981:90:10"}]},"documentation":{"id":1879,"nodeType":"StructuredDocumentation","src":"1221:249:10","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1922,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:10","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"token","nameLocation":"1512:5:10","nodeType":"VariableDeclaration","scope":1922,"src":"1505:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},"typeName":{"id":1881,"nodeType":"UserDefinedTypeName","pathNode":{"id":1880,"name":"IERC20","nameLocations":["1505:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"1505:6:10"},"referencedDeclaration":894,"src":"1505:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"spender","nameLocation":"1535:7:10","nodeType":"VariableDeclaration","scope":1922,"src":"1527:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"value","nameLocation":"1560:5:10","nodeType":"VariableDeclaration","scope":1922,"src":"1552:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:10"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[],"src":"1581:0:10"},"scope":2101,"src":"1475:603:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1957,"nodeType":"Block","src":"2200:194:10","statements":[{"assignments":[1933],"declarations":[{"constant":false,"id":1933,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:10","nodeType":"VariableDeclaration","scope":1957,"src":"2210:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1944,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1938,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2101","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2101","typeString":"library SafeERC20"}],"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1936,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:10","typeDescriptions":{}}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1940,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"2264:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1934,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"2233:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:9:10","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":871,"src":"2233:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"2275:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:10"},{"expression":{"arguments":[{"id":1946,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"2310:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1949,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"2340:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":881,"src":"2340:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2354:8:10","memberName":"selector","nodeType":"MemberAccess","src":"2340:22:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1952,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"2364:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1953,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2373:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1947,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2321:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1945,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"2290:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$894_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:97:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"ExpressionStatement","src":"2290:97:10"}]},"id":1958,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:10","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"token","nameLocation":"2131:5:10","nodeType":"VariableDeclaration","scope":1958,"src":"2124:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},"typeName":{"id":1924,"nodeType":"UserDefinedTypeName","pathNode":{"id":1923,"name":"IERC20","nameLocations":["2124:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"2124:6:10"},"referencedDeclaration":894,"src":"2124:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"spender","nameLocation":"2154:7:10","nodeType":"VariableDeclaration","scope":1958,"src":"2146:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"value","nameLocation":"2179:5:10","nodeType":"VariableDeclaration","scope":1958,"src":"2171:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:10"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[],"src":"2200:0:10"},"scope":2101,"src":"2084:310:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2005,"nodeType":"Block","src":"2516:370:10","statements":[{"id":2004,"nodeType":"UncheckedBlock","src":"2526:354:10","statements":[{"assignments":[1969],"declarations":[{"constant":false,"id":1969,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:10","nodeType":"VariableDeclaration","scope":2004,"src":"2550:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1978,"initialValue":{"arguments":[{"arguments":[{"id":1974,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2101","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2101","typeString":"library SafeERC20"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1972,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:10","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1976,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2604:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1970,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"2573:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:9:10","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":871,"src":"2573:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1980,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"2634:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"2650:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1985,"nodeType":"ExpressionStatement","src":"2626:75:10"},{"assignments":[1987],"declarations":[{"constant":false,"id":1987,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:10","nodeType":"VariableDeclaration","scope":2004,"src":"2715:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1991,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1988,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"2738:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"2753:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:10"},{"expression":{"arguments":[{"id":1993,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"2792:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1996,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"2822:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2828:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":881,"src":"2822:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2836:8:10","memberName":"selector","nodeType":"MemberAccess","src":"2822:22:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1999,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2846:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2000,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"2855:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1994,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2803:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1992,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"2772:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$894_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:97:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"ExpressionStatement","src":"2772:97:10"}]}]},"id":2006,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:10","nodeType":"FunctionDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"token","nameLocation":"2447:5:10","nodeType":"VariableDeclaration","scope":2006,"src":"2440:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},"typeName":{"id":1960,"nodeType":"UserDefinedTypeName","pathNode":{"id":1959,"name":"IERC20","nameLocations":["2440:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"2440:6:10"},"referencedDeclaration":894,"src":"2440:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"spender","nameLocation":"2470:7:10","nodeType":"VariableDeclaration","scope":2006,"src":"2462:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"value","nameLocation":"2495:5:10","nodeType":"VariableDeclaration","scope":2006,"src":"2487:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:10"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[],"src":"2516:0:10"},"scope":2101,"src":"2400:486:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2061,"nodeType":"Block","src":"3107:257:10","statements":[{"assignments":[2027],"declarations":[{"constant":false,"id":2027,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:10","nodeType":"VariableDeclaration","scope":2061,"src":"3117:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2032,"initialValue":{"arguments":[{"id":2030,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"3152:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2028,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"3139:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1820","typeString":"contract IERC20Permit"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:6:10","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1813,"src":"3139:12:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:10"},{"expression":{"arguments":[{"id":2036,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"3181:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2037,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"3188:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3197:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2039,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3204:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2040,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"3214:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2041,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3217:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2042,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"3220:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2033,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"3168:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1820","typeString":"contract IERC20Permit"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3174:6:10","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1805,"src":"3168:12:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2044,"nodeType":"ExpressionStatement","src":"3168:54:10"},{"assignments":[2046],"declarations":[{"constant":false,"id":2046,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:10","nodeType":"VariableDeclaration","scope":2061,"src":"3232:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2051,"initialValue":{"arguments":[{"id":2049,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"3266:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2047,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"3253:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1820","typeString":"contract IERC20Permit"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:6:10","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1813,"src":"3253:12:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"3290:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2054,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"3304:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":2052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2060,"nodeType":"ExpressionStatement","src":"3282:75:10"}]},"id":2062,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:10","nodeType":"FunctionDefinition","parameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"token","nameLocation":"2934:5:10","nodeType":"VariableDeclaration","scope":2062,"src":"2921:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1820","typeString":"contract IERC20Permit"},"typeName":{"id":2008,"nodeType":"UserDefinedTypeName","pathNode":{"id":2007,"name":"IERC20Permit","nameLocations":["2921:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1820,"src":"2921:12:10"},"referencedDeclaration":1820,"src":"2921:12:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1820","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"owner","nameLocation":"2957:5:10","nodeType":"VariableDeclaration","scope":2062,"src":"2949:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2010,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2013,"mutability":"mutable","name":"spender","nameLocation":"2980:7:10","nodeType":"VariableDeclaration","scope":2062,"src":"2972:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"value","nameLocation":"3005:5:10","nodeType":"VariableDeclaration","scope":2062,"src":"2997:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:10","nodeType":"VariableDeclaration","scope":2062,"src":"3020:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"v","nameLocation":"3052:1:10","nodeType":"VariableDeclaration","scope":2062,"src":"3046:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2018,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"r","nameLocation":"3071:1:10","nodeType":"VariableDeclaration","scope":2062,"src":"3063:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2023,"mutability":"mutable","name":"s","nameLocation":"3090:1:10","nodeType":"VariableDeclaration","scope":2062,"src":"3082:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:10"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[],"src":"3107:0:10"},"scope":2101,"src":"2892:472:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2099,"nodeType":"Block","src":"3817:636:10","statements":[{"assignments":[2072],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:10","nodeType":"VariableDeclaration","scope":2099,"src":"4166:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2071,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2081,"initialValue":{"arguments":[{"id":2078,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"4220:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":2075,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"4200:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}],"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2073,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:10","typeDescriptions":{}}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4207:12:10","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2190,"src":"4192:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2082,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"4275:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4286:6:10","memberName":"length","nodeType":"MemberAccess","src":"4275:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2098,"nodeType":"IfStatement","src":"4271:176:10","trueBody":{"id":2097,"nodeType":"Block","src":"4298:149:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2089,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"4370:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2090,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:10","typeDescriptions":{}}}],"id":2092,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2087,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4363:6:10","memberName":"decode","nodeType":"MemberAccess","src":"4359:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4359:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":2086,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:85:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2096,"nodeType":"ExpressionStatement","src":"4351:85:10"}]}}]},"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"3370:372:10","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":2100,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:10","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"token","nameLocation":"3783:5:10","nodeType":"VariableDeclaration","scope":2100,"src":"3776:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},"typeName":{"id":2065,"nodeType":"UserDefinedTypeName","pathNode":{"id":2064,"name":"IERC20","nameLocations":["3776:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"3776:6:10"},"referencedDeclaration":894,"src":"3776:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"data","nameLocation":"3803:4:10","nodeType":"VariableDeclaration","scope":2100,"src":"3790:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2067,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:10"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[],"src":"3817:0:10"},"scope":2101,"src":"3747:706:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2102,"src":"707:3748:10","usedErrors":[]}],"src":"115:4341:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2396]},"id":2397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2103,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"126:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2396,"linearizedBaseContracts":[2396],"name":"Address","nameLocation":"202:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2118,"nodeType":"Block","src":"1241:254:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1465:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:11","memberName":"code","nodeType":"MemberAccess","src":"1465:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:11","memberName":"length","nodeType":"MemberAccess","src":"1465:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2111,"id":2117,"nodeType":"Return","src":"1458:30:11"}]},"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"216:954:11","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2119,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:11","nodeType":"FunctionDefinition","parameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"account","nameLocation":"1203:7:11","nodeType":"VariableDeclaration","scope":2119,"src":"1195:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:11"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2119,"src":"1235:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2109,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:11"},"scope":2396,"src":"1175:320:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2152,"nodeType":"Block","src":"2483:241:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2130,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2396","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2396","typeString":"library Address"}],"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:11","typeDescriptions":{}}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:11","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2133,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"2526:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2137,"nodeType":"ExpressionStatement","src":"2493:73:11"},{"assignments":[2139,null],"declarations":[{"constant":false,"id":2139,"mutability":"mutable","name":"success","nameLocation":"2583:7:11","nodeType":"VariableDeclaration","scope":2152,"src":"2578:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2138,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2146,"initialValue":{"arguments":[{"hexValue":"","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2140,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2596:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:11","memberName":"call","nodeType":"MemberAccess","src":"2596:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2142,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"2618:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:11"},{"expression":{"arguments":[{"id":2148,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"2647:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2147,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"ExpressionStatement","src":"2639:78:11"}]},"documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"1501:906:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2153,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:11","nodeType":"FunctionDefinition","parameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:11","nodeType":"VariableDeclaration","scope":2153,"src":"2431:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2121,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"amount","nameLocation":"2466:6:11","nodeType":"VariableDeclaration","scope":2153,"src":"2458:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:11"},"returnParameters":{"id":2126,"nodeType":"ParameterList","parameters":[],"src":"2483:0:11"},"scope":2396,"src":"2412:312:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2169,"nodeType":"Block","src":"3555:84:11","statements":[{"expression":{"arguments":[{"id":2164,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"3585:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2165,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"3593:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2163,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[2170,2190],"referencedDeclaration":2190,"src":"3572:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2162,"id":2168,"nodeType":"Return","src":"3565:67:11"}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"2730:731:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2170,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:11","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"target","nameLocation":"3496:6:11","nodeType":"VariableDeclaration","scope":2170,"src":"3488:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"data","nameLocation":"3517:4:11","nodeType":"VariableDeclaration","scope":2170,"src":"3504:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2157,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:11"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2170,"src":"3541:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2160,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:11"},"scope":2396,"src":"3466:173:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2189,"nodeType":"Block","src":"4008:76:11","statements":[{"expression":{"arguments":[{"id":2183,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"4047:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2184,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4055:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2186,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"4064:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2182,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2210,2260],"referencedDeclaration":2260,"src":"4025:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2181,"id":2188,"nodeType":"Return","src":"4018:59:11"}]},"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"3645:211:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2190,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:11","nodeType":"FunctionDefinition","parameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"target","nameLocation":"3900:6:11","nodeType":"VariableDeclaration","scope":2190,"src":"3892:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2175,"mutability":"mutable","name":"data","nameLocation":"3929:4:11","nodeType":"VariableDeclaration","scope":2190,"src":"3916:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2174,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2177,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:11","nodeType":"VariableDeclaration","scope":2190,"src":"3943:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2176,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:11"},"returnParameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2190,"src":"3994:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2179,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:11"},"scope":2396,"src":"3861:223:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2209,"nodeType":"Block","src":"4589:111:11","statements":[{"expression":{"arguments":[{"id":2203,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"4628:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2204,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"4636:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"4642:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2202,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2210,2260],"referencedDeclaration":2260,"src":"4606:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4606:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2201,"id":2208,"nodeType":"Return","src":"4599:94:11"}]},"documentation":{"id":2191,"nodeType":"StructuredDocumentation","src":"4090:351:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:11","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"target","nameLocation":"4494:6:11","nodeType":"VariableDeclaration","scope":2210,"src":"4486:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"data","nameLocation":"4523:4:11","nodeType":"VariableDeclaration","scope":2210,"src":"4510:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2194,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"value","nameLocation":"4545:5:11","nodeType":"VariableDeclaration","scope":2210,"src":"4537:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:11"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2210,"src":"4575:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2199,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:11"},"scope":2396,"src":"4446:254:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2259,"nodeType":"Block","src":"5127:320:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2227,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2396","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2396","typeString":"library Address"}],"id":2226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:11","typeDescriptions":{}}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5145:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5159:7:11","memberName":"balance","nodeType":"MemberAccess","src":"5145:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5170:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2224,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5137:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2234,"nodeType":"ExpressionStatement","src":"5137:81:11"},{"expression":{"arguments":[{"arguments":[{"id":2237,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"5247:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2236,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"5236:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5236:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5228:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2241,"nodeType":"ExpressionStatement","src":"5228:60:11"},{"assignments":[2243,2245],"declarations":[{"constant":false,"id":2243,"mutability":"mutable","name":"success","nameLocation":"5305:7:11","nodeType":"VariableDeclaration","scope":2259,"src":"5300:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2242,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2245,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:11","nodeType":"VariableDeclaration","scope":2259,"src":"5314:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2244,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2252,"initialValue":{"arguments":[{"id":2250,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"5367:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2246,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"5341:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5348:4:11","memberName":"call","nodeType":"MemberAccess","src":"5341:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5360:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:11"},{"expression":{"arguments":[{"id":2254,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"5406:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2255,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"5415:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2256,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"5427:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2253,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"5389:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2223,"id":2258,"nodeType":"Return","src":"5382:58:11"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"4706:237:11","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2260,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:11","nodeType":"FunctionDefinition","parameters":{"id":2220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"target","nameLocation":"4996:6:11","nodeType":"VariableDeclaration","scope":2260,"src":"4988:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2212,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"data","nameLocation":"5025:4:11","nodeType":"VariableDeclaration","scope":2260,"src":"5012:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2214,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2217,"mutability":"mutable","name":"value","nameLocation":"5047:5:11","nodeType":"VariableDeclaration","scope":2260,"src":"5039:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:11","nodeType":"VariableDeclaration","scope":2260,"src":"5062:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2218,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:11"},"returnParameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"5113:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2221,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:11"},"scope":2396,"src":"4948:499:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2276,"nodeType":"Block","src":"5724:97:11","statements":[{"expression":{"arguments":[{"id":2271,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5760:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2272,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"5768:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2270,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2277,2312],"referencedDeclaration":2312,"src":"5741:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5741:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2269,"id":2275,"nodeType":"Return","src":"5734:80:11"}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"5453:166:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2277,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:11","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"target","nameLocation":"5660:6:11","nodeType":"VariableDeclaration","scope":2277,"src":"5652:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2262,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"data","nameLocation":"5681:4:11","nodeType":"VariableDeclaration","scope":2277,"src":"5668:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2264,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:11"},"returnParameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2277,"src":"5710:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2267,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:11"},"scope":2396,"src":"5624:197:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2311,"nodeType":"Block","src":"6163:228:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2291,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"6192:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2290,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"6181:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6181:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":2289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6173:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2295,"nodeType":"ExpressionStatement","src":"6173:67:11"},{"assignments":[2297,2299],"declarations":[{"constant":false,"id":2297,"mutability":"mutable","name":"success","nameLocation":"6257:7:11","nodeType":"VariableDeclaration","scope":2311,"src":"6252:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2296,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:11","nodeType":"VariableDeclaration","scope":2311,"src":"6266:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2298,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2304,"initialValue":{"arguments":[{"id":2302,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"6311:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2300,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"6293:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6300:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:11"},{"expression":{"arguments":[{"id":2306,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"6350:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2307,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"6359:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2308,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"6371:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2305,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"6333:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2288,"id":2310,"nodeType":"Return","src":"6326:58:11"}]},"documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"5827:173:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:11","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"target","nameLocation":"6050:6:11","nodeType":"VariableDeclaration","scope":2312,"src":"6042:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2279,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"data","nameLocation":"6079:4:11","nodeType":"VariableDeclaration","scope":2312,"src":"6066:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2281,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:11","nodeType":"VariableDeclaration","scope":2312,"src":"6093:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2283,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:11"},"returnParameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2312,"src":"6149:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2286,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:11"},"scope":2396,"src":"6005:386:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2328,"nodeType":"Block","src":"6667:101:11","statements":[{"expression":{"arguments":[{"id":2323,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6705:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2324,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"6713:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2322,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2329,2364],"referencedDeclaration":2364,"src":"6684:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:77:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2321,"id":2327,"nodeType":"Return","src":"6677:84:11"}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"6397:168:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2329,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:11","nodeType":"FunctionDefinition","parameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"target","nameLocation":"6608:6:11","nodeType":"VariableDeclaration","scope":2329,"src":"6600:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2317,"mutability":"mutable","name":"data","nameLocation":"6629:4:11","nodeType":"VariableDeclaration","scope":2329,"src":"6616:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2316,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:11"},"returnParameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2329,"src":"6653:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2319,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:11"},"scope":2396,"src":"6570:198:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2363,"nodeType":"Block","src":"7109:232:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2343,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"7138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2342,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"7127:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7127:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":2341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7119:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2347,"nodeType":"ExpressionStatement","src":"7119:69:11"},{"assignments":[2349,2351],"declarations":[{"constant":false,"id":2349,"mutability":"mutable","name":"success","nameLocation":"7205:7:11","nodeType":"VariableDeclaration","scope":2363,"src":"7200:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2348,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:11","nodeType":"VariableDeclaration","scope":2363,"src":"7214:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2350,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2356,"initialValue":{"arguments":[{"id":2354,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"7261:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2352,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"7241:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7248:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7241:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:11"},{"expression":{"arguments":[{"id":2358,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"7300:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2359,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"7309:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2360,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"7321:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2357,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"7283:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2340,"id":2362,"nodeType":"Return","src":"7276:58:11"}]},"documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"6774:175:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2364,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:11","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"target","nameLocation":"7001:6:11","nodeType":"VariableDeclaration","scope":2364,"src":"6993:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"data","nameLocation":"7030:4:11","nodeType":"VariableDeclaration","scope":2364,"src":"7017:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2333,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:11","nodeType":"VariableDeclaration","scope":2364,"src":"7044:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2335,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:11"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2364,"src":"7095:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2338,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:11"},"scope":2396,"src":"6954:387:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2394,"nodeType":"Block","src":"7721:582:11","statements":[{"condition":{"id":2376,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"7735:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2392,"nodeType":"Block","src":"7792:505:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2380,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7876:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7887:6:11","memberName":"length","nodeType":"MemberAccess","src":"7876:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2390,"nodeType":"Block","src":"8234:53:11","statements":[{"expression":{"arguments":[{"id":2387,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"8259:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2386,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8252:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2389,"nodeType":"ExpressionStatement","src":"8252:20:11"}]},"id":2391,"nodeType":"IfStatement","src":"7872:415:11","trueBody":{"id":2385,"nodeType":"Block","src":"7899:329:11","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:11","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:11"},"nodeType":"YulFunctionCall","src":"8114:17:11"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:11","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:11"},"nodeType":"YulFunctionCall","src":"8159:19:11"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:11"},"nodeType":"YulFunctionCall","src":"8152:44:11"},"nodeType":"YulExpressionStatement","src":"8152:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2369,"isOffset":false,"isSlot":false,"src":"8120:10:11","valueSize":1},{"declaration":2369,"isOffset":false,"isSlot":false,"src":"8167:10:11","valueSize":1}],"id":2384,"nodeType":"InlineAssembly","src":"8060:154:11"}]}}]},"id":2393,"nodeType":"IfStatement","src":"7731:566:11","trueBody":{"id":2379,"nodeType":"Block","src":"7744:42:11","statements":[{"expression":{"id":2377,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7765:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2375,"id":2378,"nodeType":"Return","src":"7758:17:11"}]}}]},"documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"7347:209:11","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:11","nodeType":"FunctionDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"success","nameLocation":"7601:7:11","nodeType":"VariableDeclaration","scope":2395,"src":"7596:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2366,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:11","nodeType":"VariableDeclaration","scope":2395,"src":"7618:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2368,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:11","nodeType":"VariableDeclaration","scope":2395,"src":"7651:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2370,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:11"},"returnParameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"7707:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2373,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:11"},"scope":2396,"src":"7561:742:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2397,"src":"194:8111:11","usedErrors":[]}],"src":"101:8205:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2418]},"id":2419,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2398,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2399,"nodeType":"StructuredDocumentation","src":"111:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2418,"linearizedBaseContracts":[2418],"name":"Context","nameLocation":"626:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2407,"nodeType":"Block","src":"702:34:12","statements":[{"expression":{"expression":{"id":2404,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:12","memberName":"sender","nodeType":"MemberAccess","src":"719:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2403,"id":2406,"nodeType":"Return","src":"712:17:12"}]},"id":2408,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:12","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[],"src":"659:2:12"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2408,"src":"693:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:12"},"scope":2418,"src":"640:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2416,"nodeType":"Block","src":"809:32:12","statements":[{"expression":{"expression":{"id":2413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:12","memberName":"data","nodeType":"MemberAccess","src":"826:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2412,"id":2415,"nodeType":"Return","src":"819:15:12"}]},"id":2417,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:12","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[],"src":"759:2:12"},"returnParameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2417,"src":"793:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2410,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:12"},"scope":2418,"src":"742:99:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2419,"src":"608:235:12","usedErrors":[]}],"src":"86:758:12"},"id":12},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[2492]},"id":2493,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2420,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":2421,"nodeType":"StructuredDocumentation","src":"112:311:13","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2492,"linearizedBaseContracts":[2492],"name":"Counters","nameLocation":"432:8:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":2424,"members":[{"constant":false,"id":2423,"mutability":"mutable","name":"_value","nameLocation":"794:6:13","nodeType":"VariableDeclaration","scope":2424,"src":"786:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:13","nodeType":"StructDefinition","scope":2492,"src":"447:374:13","visibility":"public"},{"body":{"id":2435,"nodeType":"Block","src":"901:38:13","statements":[{"expression":{"expression":{"id":2432,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"918:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2423,"src":"918:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2431,"id":2434,"nodeType":"Return","src":"911:21:13"}]},"id":2436,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:13","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"counter","nameLocation":"860:7:13","nodeType":"VariableDeclaration","scope":2436,"src":"844:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2426,"nodeType":"UserDefinedTypeName","pathNode":{"id":2425,"name":"Counter","nameLocations":["844:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2424,"src":"844:7:13"},"referencedDeclaration":2424,"src":"844:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:13"},"returnParameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2436,"src":"892:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:13"},"scope":2492,"src":"827:112:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2449,"nodeType":"Block","src":"998:70:13","statements":[{"id":2448,"nodeType":"UncheckedBlock","src":"1008:54:13","statements":[{"expression":{"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2442,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"1032:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2423,"src":"1032:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2447,"nodeType":"ExpressionStatement","src":"1032:19:13"}]}]},"id":2450,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:13","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"counter","nameLocation":"980:7:13","nodeType":"VariableDeclaration","scope":2450,"src":"964:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2438,"nodeType":"UserDefinedTypeName","pathNode":{"id":2437,"name":"Counter","nameLocations":["964:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2424,"src":"964:7:13"},"referencedDeclaration":2424,"src":"964:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:13"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[],"src":"998:0:13"},"scope":2492,"src":"945:123:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2477,"nodeType":"Block","src":"1127:176:13","statements":[{"assignments":[2457],"declarations":[{"constant":false,"id":2457,"mutability":"mutable","name":"value","nameLocation":"1145:5:13","nodeType":"VariableDeclaration","scope":2477,"src":"1137:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2460,"initialValue":{"expression":{"id":2458,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"1153:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2423,"src":"1153:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"1185:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"ExpressionStatement","src":"1177:49:13"},{"id":2476,"nodeType":"UncheckedBlock","src":"1236:61:13","statements":[{"expression":{"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2468,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"1260:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2423,"src":"1260:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"1277:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2475,"nodeType":"ExpressionStatement","src":"1260:26:13"}]}]},"id":2478,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:13","nodeType":"FunctionDefinition","parameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"counter","nameLocation":"1109:7:13","nodeType":"VariableDeclaration","scope":2478,"src":"1093:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2452,"nodeType":"UserDefinedTypeName","pathNode":{"id":2451,"name":"Counter","nameLocations":["1093:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2424,"src":"1093:7:13"},"referencedDeclaration":2424,"src":"1093:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:13"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[],"src":"1127:0:13"},"scope":2492,"src":"1074:229:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2490,"nodeType":"Block","src":"1358:35:13","statements":[{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2484,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"1368:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2423,"src":"1368:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"1368:18:13"}]},"id":2491,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:13","nodeType":"FunctionDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"counter","nameLocation":"1340:7:13","nodeType":"VariableDeclaration","scope":2491,"src":"1324:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2480,"nodeType":"UserDefinedTypeName","pathNode":{"id":2479,"name":"Counter","nameLocations":["1324:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2424,"src":"1324:7:13"},"referencedDeclaration":2424,"src":"1324:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2424_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:13"},"returnParameters":{"id":2483,"nodeType":"ParameterList","parameters":[],"src":"1358:0:13"},"scope":2492,"src":"1309:84:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2493,"src":"424:971:13","usedErrors":[]}],"src":"87:1309:13"},"id":13},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[2718]},"id":2719,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2494,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"126:34:14","text":" @dev String operations."},"fullyImplemented":true,"id":2718,"linearizedBaseContracts":[2718],"name":"Strings","nameLocation":"169:7:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2498,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:14","nodeType":"VariableDeclaration","scope":2718,"src":"183:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2496,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2501,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:14","nodeType":"VariableDeclaration","scope":2718,"src":"247:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2499,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2579,"nodeType":"Block","src":"463:632:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"665:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2515,"nodeType":"IfStatement","src":"661:51:14","trueBody":{"id":2514,"nodeType":"Block","src":"677:35:14","statements":[{"expression":{"hexValue":"30","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2508,"id":2513,"nodeType":"Return","src":"691:10:14"}]}},{"assignments":[2517],"declarations":[{"constant":false,"id":2517,"mutability":"mutable","name":"temp","nameLocation":"729:4:14","nodeType":"VariableDeclaration","scope":2579,"src":"721:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2519,"initialValue":{"id":2518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"736:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:14"},{"assignments":[2521],"declarations":[{"constant":false,"id":2521,"mutability":"mutable","name":"digits","nameLocation":"759:6:14","nodeType":"VariableDeclaration","scope":2579,"src":"751:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2522,"nodeType":"VariableDeclarationStatement","src":"751:14:14"},{"body":{"id":2533,"nodeType":"Block","src":"793:57:14","statements":[{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:14","subExpression":{"id":2526,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"807:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"807:8:14"},{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2529,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"829:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"nodeType":"ExpressionStatement","src":"829:10:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"782:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"WhileStatement","src":"775:75:14"},{"assignments":[2536],"declarations":[{"constant":false,"id":2536,"mutability":"mutable","name":"buffer","nameLocation":"872:6:14","nodeType":"VariableDeclaration","scope":2579,"src":"859:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2535,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2541,"initialValue":{"arguments":[{"id":2539,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"891:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2537,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"881:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:14"},{"body":{"id":2572,"nodeType":"Block","src":"927:131:14","statements":[{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2545,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"941:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2548,"nodeType":"ExpressionStatement","src":"941:11:14"},{"expression":{"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2549,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"966:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2551,"indexExpression":{"id":2550,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"973:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"1009:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:14","typeDescriptions":{}}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1001:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2554,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:14","typeDescriptions":{}}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"990:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2552,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:14","typeDescriptions":{}}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"983:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2567,"nodeType":"ExpressionStatement","src":"966:56:14"},{"expression":{"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"1036:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2571,"nodeType":"ExpressionStatement","src":"1036:11:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"915:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2573,"nodeType":"WhileStatement","src":"908:150:14"},{"expression":{"arguments":[{"id":2576,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"1081:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2574,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:14","typeDescriptions":{}}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2508,"id":2578,"nodeType":"Return","src":"1067:21:14"}]},"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"297:90:14","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:14","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"value","nameLocation":"418:5:14","nodeType":"VariableDeclaration","scope":2580,"src":"410:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:14"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"448:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2506,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:14"},"scope":2718,"src":"392:703:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2620,"nodeType":"Block","src":"1274:255:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"1288:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2594,"nodeType":"IfStatement","src":"1284:54:14","trueBody":{"id":2593,"nodeType":"Block","src":"1300:38:14","statements":[{"expression":{"hexValue":"30783030","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":2587,"id":2592,"nodeType":"Return","src":"1314:13:14"}]}},{"assignments":[2596],"declarations":[{"constant":false,"id":2596,"mutability":"mutable","name":"temp","nameLocation":"1355:4:14","nodeType":"VariableDeclaration","scope":2620,"src":"1347:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2598,"initialValue":{"id":2597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"1362:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:14"},{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"length","nameLocation":"1385:6:14","nodeType":"VariableDeclaration","scope":2620,"src":"1377:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2602,"initialValue":{"hexValue":"30","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:14"},{"body":{"id":2613,"nodeType":"Block","src":"1423:57:14","statements":[{"expression":{"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:14","subExpression":{"id":2606,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1437:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2608,"nodeType":"ExpressionStatement","src":"1437:8:14"},{"expression":{"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2609,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"1459:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2612,"nodeType":"ExpressionStatement","src":"1459:10:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2603,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"1412:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2614,"nodeType":"WhileStatement","src":"1405:75:14"},{"expression":{"arguments":[{"id":2616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"1508:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2617,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1515:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2615,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2621,2697,2717],"referencedDeclaration":2697,"src":"1496:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1496:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2587,"id":2619,"nodeType":"Return","src":"1489:33:14"}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"1101:94:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2621,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:14","nodeType":"FunctionDefinition","parameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"value","nameLocation":"1229:5:14","nodeType":"VariableDeclaration","scope":2621,"src":"1221:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:14"},"returnParameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2621,"src":"1259:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2585,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:14"},"scope":2718,"src":"1200:329:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"1742:351:14","statements":[{"assignments":[2632],"declarations":[{"constant":false,"id":2632,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:14","nodeType":"VariableDeclaration","scope":2696,"src":"1752:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2631,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2641,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2636,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"1788:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2633,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:14"},{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2642,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"1809:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2644,"indexExpression":{"hexValue":"30","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2647,"nodeType":"ExpressionStatement","src":"1809:15:14"},{"expression":{"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2648,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"1834:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2650,"indexExpression":{"hexValue":"31","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2653,"nodeType":"ExpressionStatement","src":"1834:15:14"},{"body":{"id":2682,"nodeType":"Block","src":"1904:87:14","statements":[{"expression":{"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2668,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"1918:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2670,"indexExpression":{"id":2669,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"1925:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2671,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"1930:12:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2675,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"1943:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2677,"nodeType":"ExpressionStatement","src":"1918:37:14"},{"expression":{"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"1969:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2681,"nodeType":"ExpressionStatement","src":"1969:11:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"1892:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2683,"initializationExpression":{"assignments":[2655],"declarations":[{"constant":false,"id":2655,"mutability":"mutable","name":"i","nameLocation":"1872:1:14","nodeType":"VariableDeclaration","scope":2683,"src":"1864:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2661,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2657,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"1880:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:14"},"loopExpression":{"expression":{"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:14","subExpression":{"id":2665,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"1901:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2667,"nodeType":"ExpressionStatement","src":"1899:3:14"},"nodeType":"ForStatement","src":"1859:132:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"2008:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2000:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2690,"nodeType":"ExpressionStatement","src":"2000:55:14"},{"expression":{"arguments":[{"id":2693,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"2079:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2691,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:14","typeDescriptions":{}}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2072:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2630,"id":2695,"nodeType":"Return","src":"2065:21:14"}]},"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"1535:112:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:14","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"value","nameLocation":"1681:5:14","nodeType":"VariableDeclaration","scope":2697,"src":"1673:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"length","nameLocation":"1696:6:14","nodeType":"VariableDeclaration","scope":2697,"src":"1688:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:14"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2697,"src":"1727:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2628,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:14"},"scope":2718,"src":"1652:441:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2716,"nodeType":"Block","src":"2318:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2710,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"2363:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2708,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:14","typeDescriptions":{}}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:14","typeDescriptions":{}}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2347:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2713,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"2371:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2705,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2621,2697,2717],"referencedDeclaration":2697,"src":"2335:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2704,"id":2715,"nodeType":"Return","src":"2328:59:14"}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"2099:141:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2717,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:14","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"addr","nameLocation":"2274:4:14","nodeType":"VariableDeclaration","scope":2717,"src":"2266:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:14"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2717,"src":"2303:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2702,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:14"},"scope":2718,"src":"2245:149:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2719,"src":"161:2235:14","usedErrors":[]}],"src":"101:2296:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3106],"Strings":[2718]},"id":3107,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2720,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2721,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3107,"sourceUnit":2719,"src":"137:24:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2722,"nodeType":"StructuredDocumentation","src":"163:205:15","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3106,"linearizedBaseContracts":[3106],"name":"ECDSA","nameLocation":"377:5:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2728,"members":[{"id":2723,"name":"NoError","nameLocation":"417:7:15","nodeType":"EnumValue","src":"417:7:15"},{"id":2724,"name":"InvalidSignature","nameLocation":"434:16:15","nodeType":"EnumValue","src":"434:16:15"},{"id":2725,"name":"InvalidSignatureLength","nameLocation":"460:22:15","nodeType":"EnumValue","src":"460:22:15"},{"id":2726,"name":"InvalidSignatureS","nameLocation":"492:17:15","nodeType":"EnumValue","src":"492:17:15"},{"id":2727,"name":"InvalidSignatureV","nameLocation":"519:17:15","nodeType":"EnumValue","src":"519:17:15"}],"name":"RecoverError","nameLocation":"394:12:15","nodeType":"EnumDefinition","src":"389:153:15"},{"body":{"id":2781,"nodeType":"Block","src":"602:577:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2734,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"616:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2735,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"625:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2728_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"638:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2723,"src":"625:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"src":"616:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"712:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2741,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"721:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2728_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"734:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"721:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"src":"712:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"821:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2750,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"830:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2728_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"843:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2725,"src":"830:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"src":"821:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2758,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"943:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2759,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"952:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2728_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"965:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2726,"src":"952:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"src":"943:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2767,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"1063:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2768,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"1072:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2728_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1085:17:15","memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":2727,"src":"1072:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"src":"1063:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2776,"nodeType":"IfStatement","src":"1059:114:15","trueBody":{"id":2775,"nodeType":"Block","src":"1104:69:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202776272076616c7565","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1125:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""},"value":"ECDSA: invalid signature 'v' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""}],"id":2771,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1118:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1118:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2774,"nodeType":"ExpressionStatement","src":"1118:44:15"}]}},"id":2777,"nodeType":"IfStatement","src":"939:234:15","trueBody":{"id":2766,"nodeType":"Block","src":"984:69:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1005:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2762,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"998:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"998:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"ExpressionStatement","src":"998:44:15"}]}},"id":2778,"nodeType":"IfStatement","src":"817:356:15","trueBody":{"id":2757,"nodeType":"Block","src":"867:66:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"888:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2753,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"881:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"881:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2756,"nodeType":"ExpressionStatement","src":"881:41:15"}]}},"id":2779,"nodeType":"IfStatement","src":"708:465:15","trueBody":{"id":2748,"nodeType":"Block","src":"752:59:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"773:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2744,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"766:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"766:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2747,"nodeType":"ExpressionStatement","src":"766:34:15"}]}},"id":2780,"nodeType":"IfStatement","src":"612:561:15","trueBody":{"id":2739,"nodeType":"Block","src":"647:55:15","statements":[{"functionReturnParameters":2733,"id":2738,"nodeType":"Return","src":"661:7:15"}]}}]},"id":2782,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"557:11:15","nodeType":"FunctionDefinition","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"error","nameLocation":"582:5:15","nodeType":"VariableDeclaration","scope":2782,"src":"569:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2730,"nodeType":"UserDefinedTypeName","pathNode":{"id":2729,"name":"RecoverError","nameLocations":["569:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2728,"src":"569:12:15"},"referencedDeclaration":2728,"src":"569:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"568:20:15"},"returnParameters":{"id":2733,"nodeType":"ParameterList","parameters":[],"src":"602:0:15"},"scope":3106,"src":"548:631:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2827,"nodeType":"Block","src":"2347:626:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2795,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"2361:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2371:6:15","memberName":"length","nodeType":"MemberAccess","src":"2361:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2381:2:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2361:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2825,"nodeType":"Block","src":"2886:81:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2916:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2908:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"2908:7:15","typeDescriptions":{}}},"id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2908:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2821,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"2920:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2728_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2933:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2725,"src":"2920:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}}],"id":2823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2907:49:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2794,"id":2824,"nodeType":"Return","src":"2900:56:15"}]},"id":2826,"nodeType":"IfStatement","src":"2357:610:15","trueBody":{"id":2816,"nodeType":"Block","src":"2385:495:15","statements":[{"assignments":[2800],"declarations":[{"constant":false,"id":2800,"mutability":"mutable","name":"r","nameLocation":"2407:1:15","nodeType":"VariableDeclaration","scope":2816,"src":"2399:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2399:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2801,"nodeType":"VariableDeclarationStatement","src":"2399:9:15"},{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"s","nameLocation":"2430:1:15","nodeType":"VariableDeclaration","scope":2816,"src":"2422:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2422:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2804,"nodeType":"VariableDeclarationStatement","src":"2422:9:15"},{"assignments":[2806],"declarations":[{"constant":false,"id":2806,"mutability":"mutable","name":"v","nameLocation":"2451:1:15","nodeType":"VariableDeclaration","scope":2816,"src":"2445:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2805,"name":"uint8","nodeType":"ElementaryTypeName","src":"2445:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2807,"nodeType":"VariableDeclarationStatement","src":"2445:7:15"},{"AST":{"nodeType":"YulBlock","src":"2653:171:15","statements":[{"nodeType":"YulAssignment","src":"2671:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2686:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2697:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:15"},"nodeType":"YulFunctionCall","src":"2682:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2676:5:15"},"nodeType":"YulFunctionCall","src":"2676:27:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2671:1:15"}]},{"nodeType":"YulAssignment","src":"2720:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2735:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2746:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:15"},"nodeType":"YulFunctionCall","src":"2731:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2725:5:15"},"nodeType":"YulFunctionCall","src":"2725:27:15"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2720:1:15"}]},{"nodeType":"YulAssignment","src":"2769:41:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2779:1:15","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2792:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2803:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2788:3:15"},"nodeType":"YulFunctionCall","src":"2788:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2782:5:15"},"nodeType":"YulFunctionCall","src":"2782:27:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2774:4:15"},"nodeType":"YulFunctionCall","src":"2774:36:15"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2769:1:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2800,"isOffset":false,"isSlot":false,"src":"2671:1:15","valueSize":1},{"declaration":2803,"isOffset":false,"isSlot":false,"src":"2720:1:15","valueSize":1},{"declaration":2787,"isOffset":false,"isSlot":false,"src":"2686:9:15","valueSize":1},{"declaration":2787,"isOffset":false,"isSlot":false,"src":"2735:9:15","valueSize":1},{"declaration":2787,"isOffset":false,"isSlot":false,"src":"2792:9:15","valueSize":1},{"declaration":2806,"isOffset":false,"isSlot":false,"src":"2769:1:15","valueSize":1}],"id":2808,"nodeType":"InlineAssembly","src":"2644:180:15"},{"expression":{"arguments":[{"id":2810,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"2855:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2811,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"2861:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2812,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"2864:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2813,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"2867:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2809,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2828,2902,3013],"referencedDeclaration":3013,"src":"2844:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2794,"id":2815,"nodeType":"Return","src":"2837:32:15"}]}}]},"documentation":{"id":2783,"nodeType":"StructuredDocumentation","src":"1185:1053:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2828,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2252:10:15","nodeType":"FunctionDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"hash","nameLocation":"2271:4:15","nodeType":"VariableDeclaration","scope":2828,"src":"2263:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2263:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2787,"mutability":"mutable","name":"signature","nameLocation":"2290:9:15","nodeType":"VariableDeclaration","scope":2828,"src":"2277:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2786,"name":"bytes","nodeType":"ElementaryTypeName","src":"2277:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2262:38:15"},"returnParameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2828,"src":"2324:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2789,"name":"address","nodeType":"ElementaryTypeName","src":"2324:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2828,"src":"2333:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2792,"nodeType":"UserDefinedTypeName","pathNode":{"id":2791,"name":"RecoverError","nameLocations":["2333:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2728,"src":"2333:12:15"},"referencedDeclaration":2728,"src":"2333:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2323:23:15"},"scope":3106,"src":"2243:730:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2854,"nodeType":"Block","src":"3846:140:15","statements":[{"assignments":[2839,2842],"declarations":[{"constant":false,"id":2839,"mutability":"mutable","name":"recovered","nameLocation":"3865:9:15","nodeType":"VariableDeclaration","scope":2854,"src":"3857:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2838,"name":"address","nodeType":"ElementaryTypeName","src":"3857:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"error","nameLocation":"3889:5:15","nodeType":"VariableDeclaration","scope":2854,"src":"3876:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2841,"nodeType":"UserDefinedTypeName","pathNode":{"id":2840,"name":"RecoverError","nameLocations":["3876:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2728,"src":"3876:12:15"},"referencedDeclaration":2728,"src":"3876:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2847,"initialValue":{"arguments":[{"id":2844,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"3909:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2845,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"3915:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2843,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2828,2902,3013],"referencedDeclaration":2828,"src":"3898:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3898:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3856:69:15"},{"expression":{"arguments":[{"id":2849,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"3947:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}],"id":2848,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"3935:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2728_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3935:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2851,"nodeType":"ExpressionStatement","src":"3935:18:15"},{"expression":{"id":2852,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"3970:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2837,"id":2853,"nodeType":"Return","src":"3963:16:15"}]},"documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"2979:775:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3768:7:15","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"hash","nameLocation":"3784:4:15","nodeType":"VariableDeclaration","scope":2855,"src":"3776:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3776:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"signature","nameLocation":"3803:9:15","nodeType":"VariableDeclaration","scope":2855,"src":"3790:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2832,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:38:15"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"3837:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2835,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3836:9:15"},"scope":3106,"src":"3759:227:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2901,"nodeType":"Block","src":"4373:203:15","statements":[{"assignments":[2871],"declarations":[{"constant":false,"id":2871,"mutability":"mutable","name":"s","nameLocation":"4391:1:15","nodeType":"VariableDeclaration","scope":2901,"src":"4383:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4383:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2878,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2872,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"4395:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4408:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4400:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4400:7:15","typeDescriptions":{}}},"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4400:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4395:80:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4383:92:15"},{"assignments":[2880],"declarations":[{"constant":false,"id":2880,"mutability":"mutable","name":"v","nameLocation":"4491:1:15","nodeType":"VariableDeclaration","scope":2901,"src":"4485:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2879,"name":"uint8","nodeType":"ElementaryTypeName","src":"4485:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2893,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2885,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"4510:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4502:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"4502:7:15","typeDescriptions":{}}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4517:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4502:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4501:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4524:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4501:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4495:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2881,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:15","typeDescriptions":{}}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4495:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4485:42:15"},{"expression":{"arguments":[{"id":2895,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4555:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2896,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"4561:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2897,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"4564:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2898,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4567:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2894,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2828,2902,3013],"referencedDeclaration":3013,"src":"4544:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4544:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2869,"id":2900,"nodeType":"Return","src":"4537:32:15"}]},"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"3992:243:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2902,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4249:10:15","nodeType":"FunctionDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"hash","nameLocation":"4277:4:15","nodeType":"VariableDeclaration","scope":2902,"src":"4269:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4269:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"r","nameLocation":"4299:1:15","nodeType":"VariableDeclaration","scope":2902,"src":"4291:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"vs","nameLocation":"4318:2:15","nodeType":"VariableDeclaration","scope":2902,"src":"4310:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4310:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4259:67:15"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2902,"src":"4350:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2864,"name":"address","nodeType":"ElementaryTypeName","src":"4350:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2902,"src":"4359:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2867,"nodeType":"UserDefinedTypeName","pathNode":{"id":2866,"name":"RecoverError","nameLocations":["4359:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2728,"src":"4359:12:15"},"referencedDeclaration":2728,"src":"4359:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4349:23:15"},"scope":3106,"src":"4240:336:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2931,"nodeType":"Block","src":"4857:136:15","statements":[{"assignments":[2915,2918],"declarations":[{"constant":false,"id":2915,"mutability":"mutable","name":"recovered","nameLocation":"4876:9:15","nodeType":"VariableDeclaration","scope":2931,"src":"4868:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2914,"name":"address","nodeType":"ElementaryTypeName","src":"4868:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"error","nameLocation":"4900:5:15","nodeType":"VariableDeclaration","scope":2931,"src":"4887:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2917,"nodeType":"UserDefinedTypeName","pathNode":{"id":2916,"name":"RecoverError","nameLocations":["4887:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2728,"src":"4887:12:15"},"referencedDeclaration":2728,"src":"4887:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2924,"initialValue":{"arguments":[{"id":2920,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"4920:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2921,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"4926:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2922,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"4929:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2919,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2828,2902,3013],"referencedDeclaration":2902,"src":"4909:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4909:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4867:65:15"},{"expression":{"arguments":[{"id":2926,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"4954:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}],"id":2925,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"4942:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2728_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4942:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2928,"nodeType":"ExpressionStatement","src":"4942:18:15"},{"expression":{"id":2929,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"4977:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2913,"id":2930,"nodeType":"Return","src":"4970:16:15"}]},"documentation":{"id":2903,"nodeType":"StructuredDocumentation","src":"4582:154:15","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2932,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4750:7:15","nodeType":"FunctionDefinition","parameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"hash","nameLocation":"4775:4:15","nodeType":"VariableDeclaration","scope":2932,"src":"4767:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4767:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"r","nameLocation":"4797:1:15","nodeType":"VariableDeclaration","scope":2932,"src":"4789:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4789:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"vs","nameLocation":"4816:2:15","nodeType":"VariableDeclaration","scope":2932,"src":"4808:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4808:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4757:67:15"},"returnParameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2932,"src":"4848:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2911,"name":"address","nodeType":"ElementaryTypeName","src":"4848:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4847:9:15"},"scope":3106,"src":"4741:252:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3012,"nodeType":"Block","src":"5316:1454:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2951,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"6212:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6204:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"6204:7:15","typeDescriptions":{}}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6204:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6204:79:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2964,"nodeType":"IfStatement","src":"6200:161:15","trueBody":{"id":2963,"nodeType":"Block","src":"6285:76:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6315:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6307:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"6307:7:15","typeDescriptions":{}}},"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6307:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2959,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"6319:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2728_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6332:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2726,"src":"6319:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}}],"id":2961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6306:44:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2948,"id":2962,"nodeType":"Return","src":"6299:51:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"6374:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3237","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6379:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6374:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2968,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"6385:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3238","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6390:2:15","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"6385:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6374:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2981,"nodeType":"IfStatement","src":"6370:100:15","trueBody":{"id":2980,"nodeType":"Block","src":"6394:76:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6424:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6416:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2972,"name":"address","nodeType":"ElementaryTypeName","src":"6416:7:15","typeDescriptions":{}}},"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6416:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2976,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"6428:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2728_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6441:17:15","memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":2727,"src":"6428:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}}],"id":2978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6415:44:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2948,"id":2979,"nodeType":"Return","src":"6408:51:15"}]}},{"assignments":[2983],"declarations":[{"constant":false,"id":2983,"mutability":"mutable","name":"signer","nameLocation":"6572:6:15","nodeType":"VariableDeclaration","scope":3012,"src":"6564:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2982,"name":"address","nodeType":"ElementaryTypeName","src":"6564:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2990,"initialValue":{"arguments":[{"id":2985,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"6591:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2986,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"6597:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2987,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"6600:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2988,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"6603:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2984,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6581:9:15","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6581:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6564:41:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"6619:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6637:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6629:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"6629:7:15","typeDescriptions":{}}},"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6629:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6619:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3006,"nodeType":"IfStatement","src":"6615:101:15","trueBody":{"id":3005,"nodeType":"Block","src":"6641:75:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6671:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6663:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2997,"name":"address","nodeType":"ElementaryTypeName","src":"6663:7:15","typeDescriptions":{}}},"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6663:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3001,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"6675:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2728_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6688:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"6675:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}}],"id":3003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6662:43:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2948,"id":3004,"nodeType":"Return","src":"6655:50:15"}]}},{"expression":{"components":[{"id":3007,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"6734:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3008,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"6742:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2728_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6755:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2723,"src":"6742:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}}],"id":3010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6733:30:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2948,"id":3011,"nodeType":"Return","src":"6726:37:15"}]},"documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"4999:163:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":3013,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5176:10:15","nodeType":"FunctionDefinition","parameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"hash","nameLocation":"5204:4:15","nodeType":"VariableDeclaration","scope":3013,"src":"5196:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5196:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"v","nameLocation":"5224:1:15","nodeType":"VariableDeclaration","scope":3013,"src":"5218:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2936,"name":"uint8","nodeType":"ElementaryTypeName","src":"5218:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"r","nameLocation":"5243:1:15","nodeType":"VariableDeclaration","scope":3013,"src":"5235:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5235:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"s","nameLocation":"5262:1:15","nodeType":"VariableDeclaration","scope":3013,"src":"5254:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5254:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5186:83:15"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3013,"src":"5293:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2943,"name":"address","nodeType":"ElementaryTypeName","src":"5293:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3013,"src":"5302:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2946,"nodeType":"UserDefinedTypeName","pathNode":{"id":2945,"name":"RecoverError","nameLocations":["5302:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2728,"src":"5302:12:15"},"referencedDeclaration":2728,"src":"5302:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5292:23:15"},"scope":3106,"src":"5167:1603:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3045,"nodeType":"Block","src":"7035:138:15","statements":[{"assignments":[3028,3031],"declarations":[{"constant":false,"id":3028,"mutability":"mutable","name":"recovered","nameLocation":"7054:9:15","nodeType":"VariableDeclaration","scope":3045,"src":"7046:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3027,"name":"address","nodeType":"ElementaryTypeName","src":"7046:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3031,"mutability":"mutable","name":"error","nameLocation":"7078:5:15","nodeType":"VariableDeclaration","scope":3045,"src":"7065:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3030,"nodeType":"UserDefinedTypeName","pathNode":{"id":3029,"name":"RecoverError","nameLocations":["7065:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2728,"src":"7065:12:15"},"referencedDeclaration":2728,"src":"7065:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3038,"initialValue":{"arguments":[{"id":3033,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"7098:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3034,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"7104:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3035,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"7107:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3036,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"7110:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3032,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2828,2902,3013],"referencedDeclaration":3013,"src":"7087:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7087:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2728_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"7045:67:15"},{"expression":{"arguments":[{"id":3040,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"7134:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2728","typeString":"enum ECDSA.RecoverError"}],"id":3039,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"7122:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2728_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7122:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3042,"nodeType":"ExpressionStatement","src":"7122:18:15"},{"expression":{"id":3043,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"7157:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3026,"id":3044,"nodeType":"Return","src":"7150:16:15"}]},"documentation":{"id":3014,"nodeType":"StructuredDocumentation","src":"6776:122:15","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3046,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6912:7:15","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"hash","nameLocation":"6937:4:15","nodeType":"VariableDeclaration","scope":3046,"src":"6929:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6929:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"v","nameLocation":"6957:1:15","nodeType":"VariableDeclaration","scope":3046,"src":"6951:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3017,"name":"uint8","nodeType":"ElementaryTypeName","src":"6951:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"r","nameLocation":"6976:1:15","nodeType":"VariableDeclaration","scope":3046,"src":"6968:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6968:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"s","nameLocation":"6995:1:15","nodeType":"VariableDeclaration","scope":3046,"src":"6987:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6987:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6919:83:15"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3046,"src":"7026:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3024,"name":"address","nodeType":"ElementaryTypeName","src":"7026:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7025:9:15"},"scope":3106,"src":"6903:270:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3062,"nodeType":"Block","src":"7541:187:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7679:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":3058,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"7715:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3055,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7662:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7666:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"7662:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3054,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7652:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7652:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3053,"id":3061,"nodeType":"Return","src":"7645:76:15"}]},"documentation":{"id":3047,"nodeType":"StructuredDocumentation","src":"7179:279:15","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3063,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7472:22:15","nodeType":"FunctionDefinition","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"hash","nameLocation":"7503:4:15","nodeType":"VariableDeclaration","scope":3063,"src":"7495:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7495:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7494:14:15"},"returnParameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3063,"src":"7532:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7532:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7531:9:15"},"scope":3106,"src":"7463:265:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3084,"nodeType":"Block","src":"8093:116:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8137:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":3077,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"8188:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8190:6:15","memberName":"length","nodeType":"MemberAccess","src":"8188:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3075,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"8171:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2718_$","typeString":"type(library Strings)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8179:8:15","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2580,"src":"8171:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8171:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3080,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"8199:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3072,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8120:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8124:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"8120:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8120:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3071,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8110:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8110:92:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3070,"id":3083,"nodeType":"Return","src":"8103:99:15"}]},"documentation":{"id":3064,"nodeType":"StructuredDocumentation","src":"7734:274:15","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"8022:22:15","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"s","nameLocation":"8058:1:15","nodeType":"VariableDeclaration","scope":3085,"src":"8045:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3065,"name":"bytes","nodeType":"ElementaryTypeName","src":"8045:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8044:16:15"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3085,"src":"8084:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8084:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8083:9:15"},"scope":3106,"src":"8013:196:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3104,"nodeType":"Block","src":"8650:92:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":3098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8694:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":3099,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"8706:15:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3100,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"8723:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3096,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8677:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8681:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"8677:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8677:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8667:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8667:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3094,"id":3103,"nodeType":"Return","src":"8660:75:15"}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"8215:328:15","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":3105,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8557:15:15","nodeType":"FunctionDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"domainSeparator","nameLocation":"8581:15:15","nodeType":"VariableDeclaration","scope":3105,"src":"8573:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8573:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"structHash","nameLocation":"8606:10:15","nodeType":"VariableDeclaration","scope":3105,"src":"8598:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8598:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8572:45:15"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3105,"src":"8641:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8641:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8640:9:15"},"scope":3106,"src":"8548:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3107,"src":"369:8375:15","usedErrors":[]}],"src":"112:8633:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","exportedSymbols":{"ECDSA":[3106],"EIP712":[3260],"Strings":[2718]},"id":3261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3108,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":3109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3261,"sourceUnit":3107,"src":"129:21:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"152:1142:16","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"},"fullyImplemented":true,"id":3260,"linearizedBaseContracts":[3260],"name":"EIP712","nameLocation":"1313:6:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3112,"mutability":"immutable","name":"_CACHED_DOMAIN_SEPARATOR","nameLocation":"1589:24:16","nodeType":"VariableDeclaration","scope":3260,"src":"1563:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1563:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3114,"mutability":"immutable","name":"_CACHED_CHAIN_ID","nameLocation":"1645:16:16","nodeType":"VariableDeclaration","scope":3260,"src":"1619:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1619:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3116,"mutability":"immutable","name":"_CACHED_THIS","nameLocation":"1693:12:16","nodeType":"VariableDeclaration","scope":3260,"src":"1667:38:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3118,"mutability":"immutable","name":"_HASHED_NAME","nameLocation":"1738:12:16","nodeType":"VariableDeclaration","scope":3260,"src":"1712:38:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1712:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3120,"mutability":"immutable","name":"_HASHED_VERSION","nameLocation":"1782:15:16","nodeType":"VariableDeclaration","scope":3260,"src":"1756:41:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1756:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3122,"mutability":"immutable","name":"_TYPE_HASH","nameLocation":"1829:10:16","nodeType":"VariableDeclaration","scope":3260,"src":"1803:36:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1803:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":3186,"nodeType":"Block","src":"2510:547:16","statements":[{"assignments":[3131],"declarations":[{"constant":false,"id":3131,"mutability":"mutable","name":"hashedName","nameLocation":"2528:10:16","nodeType":"VariableDeclaration","scope":3186,"src":"2520:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2520:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3138,"initialValue":{"arguments":[{"arguments":[{"id":3135,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"2557:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2551:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3133,"name":"bytes","nodeType":"ElementaryTypeName","src":"2551:5:16","typeDescriptions":{}}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3132,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2541:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2541:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2520:43:16"},{"assignments":[3140],"declarations":[{"constant":false,"id":3140,"mutability":"mutable","name":"hashedVersion","nameLocation":"2581:13:16","nodeType":"VariableDeclaration","scope":3186,"src":"2573:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2573:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3147,"initialValue":{"arguments":[{"arguments":[{"id":3144,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"2613:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2607:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3142,"name":"bytes","nodeType":"ElementaryTypeName","src":"2607:5:16","typeDescriptions":{}}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3141,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2597:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2597:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2573:49:16"},{"assignments":[3149],"declarations":[{"constant":false,"id":3149,"mutability":"mutable","name":"typeHash","nameLocation":"2640:8:16","nodeType":"VariableDeclaration","scope":3186,"src":"2632:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2632:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3153,"initialValue":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2674:84:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3150,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2651:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2651:117:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2632:136:16"},{"expression":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3154,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"2778:12:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3155,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"2793:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2778:25:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3157,"nodeType":"ExpressionStatement","src":"2778:25:16"},{"expression":{"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3158,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"2813:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3159,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"2831:13:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2813:31:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3161,"nodeType":"ExpressionStatement","src":"2813:31:16"},{"expression":{"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3162,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"2854:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3163,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2873:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2879:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"2873:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2854:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3166,"nodeType":"ExpressionStatement","src":"2854:32:16"},{"expression":{"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3167,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"2896:24:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3169,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"2945:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3170,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"2955:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3171,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"2967:13:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3168,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"2923:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2923:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2896:85:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3174,"nodeType":"ExpressionStatement","src":"2896:85:16"},{"expression":{"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3175,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"2991:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3178,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3014:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3260","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3260","typeString":"contract EIP712"}],"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3006:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3176,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:16","typeDescriptions":{}}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3006:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2991:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3181,"nodeType":"ExpressionStatement","src":"2991:28:16"},{"expression":{"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3182,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"3029:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3183,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"3042:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3029:21:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3185,"nodeType":"ExpressionStatement","src":"3029:21:16"}]},"documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"1891:559:16","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3187,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"name","nameLocation":"2481:4:16","nodeType":"VariableDeclaration","scope":3187,"src":"2467:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3124,"name":"string","nodeType":"ElementaryTypeName","src":"2467:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"version","nameLocation":"2501:7:16","nodeType":"VariableDeclaration","scope":3187,"src":"2487:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3126,"name":"string","nodeType":"ElementaryTypeName","src":"2487:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2466:43:16"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[],"src":"2510:0:16"},"scope":3260,"src":"2455:602:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3215,"nodeType":"Block","src":"3205:246:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3195,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3227:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3260","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3260","typeString":"contract EIP712"}],"id":3194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3219:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:16","typeDescriptions":{}}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3197,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"3236:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3219:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3199,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3252:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3258:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"3252:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3201,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"3269:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3252:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3219:66:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3213,"nodeType":"Block","src":"3349:96:16","statements":[{"expression":{"arguments":[{"id":3208,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"3392:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3209,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"3404:12:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3210,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"3418:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3207,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"3370:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3370:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3192,"id":3212,"nodeType":"Return","src":"3363:71:16"}]},"id":3214,"nodeType":"IfStatement","src":"3215:230:16","trueBody":{"id":3206,"nodeType":"Block","src":"3287:56:16","statements":[{"expression":{"id":3204,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"3308:24:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3192,"id":3205,"nodeType":"Return","src":"3301:31:16"}]}}]},"documentation":{"id":3188,"nodeType":"StructuredDocumentation","src":"3063:75:16","text":" @dev Returns the domain separator for the current chain."},"id":3216,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3152:18:16","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[],"src":"3170:2:16"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3216,"src":"3196:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3196:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3195:9:16"},"scope":3260,"src":"3143:308:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3242,"nodeType":"Block","src":"3606:108:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3230,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"3644:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3231,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"3654:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3232,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"3664:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3233,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3677:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3683:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"3677:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3237,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3700:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3260","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3260","typeString":"contract EIP712"}],"id":3236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3692:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3235,"name":"address","nodeType":"ElementaryTypeName","src":"3692:7:16","typeDescriptions":{}}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3228,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3633:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3637:6:16","memberName":"encode","nodeType":"MemberAccess","src":"3633:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3633:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3227,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3623:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:84:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3226,"id":3241,"nodeType":"Return","src":"3616:91:16"}]},"id":3243,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3466:21:16","nodeType":"FunctionDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"typeHash","nameLocation":"3505:8:16","nodeType":"VariableDeclaration","scope":3243,"src":"3497:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3497:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"nameHash","nameLocation":"3531:8:16","nodeType":"VariableDeclaration","scope":3243,"src":"3523:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3523:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"versionHash","nameLocation":"3557:11:16","nodeType":"VariableDeclaration","scope":3243,"src":"3549:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3549:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3487:87:16"},"returnParameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3243,"src":"3597:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3597:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3596:9:16"},"scope":3260,"src":"3457:257:16","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3258,"nodeType":"Block","src":"4425:79:16","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3253,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"4464:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4464:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3255,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"4486:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3251,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"4442:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3106_$","typeString":"type(library ECDSA)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4448:15:16","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"4442:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4442:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3250,"id":3257,"nodeType":"Return","src":"4435:62:16"}]},"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"3720:614:16","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3259,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4348:16:16","nodeType":"FunctionDefinition","parameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"structHash","nameLocation":"4373:10:16","nodeType":"VariableDeclaration","scope":3259,"src":"4365:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4365:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4364:20:16"},"returnParameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3259,"src":"4416:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4416:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4415:9:16"},"scope":3260,"src":"4339:165:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3261,"src":"1295:3211:16","usedErrors":[]}],"src":"104:4403:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3764]},"id":3765,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3262,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"128:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3764,"linearizedBaseContracts":[3764],"name":"Math","nameLocation":"210:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3267,"members":[{"id":3264,"name":"Down","nameLocation":"245:4:17","nodeType":"EnumValue","src":"245:4:17"},{"id":3265,"name":"Up","nameLocation":"287:2:17","nodeType":"EnumValue","src":"287:2:17"},{"id":3266,"name":"Zero","nameLocation":"318:4:17","nodeType":"EnumValue","src":"318:4:17"}],"name":"Rounding","nameLocation":"226:8:17","nodeType":"EnumDefinition","src":"221:122:17"},{"body":{"id":3284,"nodeType":"Block","src":"480:38:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"497:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3278,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"502:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3281,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"510:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:14:17","trueExpression":{"id":3280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"506:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3276,"id":3283,"nodeType":"Return","src":"490:21:17"}]},"documentation":{"id":3268,"nodeType":"StructuredDocumentation","src":"349:59:17","text":" @dev Returns the largest of two numbers."},"id":3285,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:17","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"a","nameLocation":"434:1:17","nodeType":"VariableDeclaration","scope":3285,"src":"426:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"b","nameLocation":"445:1:17","nodeType":"VariableDeclaration","scope":3285,"src":"437:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:17"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3285,"src":"471:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3274,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:17"},"scope":3764,"src":"413:105:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3302,"nodeType":"Block","src":"656:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"673:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3296,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"677:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"673:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3299,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"685:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"673:13:17","trueExpression":{"id":3298,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"681:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3294,"id":3301,"nodeType":"Return","src":"666:20:17"}]},"documentation":{"id":3286,"nodeType":"StructuredDocumentation","src":"524:60:17","text":" @dev Returns the smallest of two numbers."},"id":3303,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"598:3:17","nodeType":"FunctionDefinition","parameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3288,"mutability":"mutable","name":"a","nameLocation":"610:1:17","nodeType":"VariableDeclaration","scope":3303,"src":"602:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3290,"mutability":"mutable","name":"b","nameLocation":"621:1:17","nodeType":"VariableDeclaration","scope":3303,"src":"613:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:17"},"returnParameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3303,"src":"647:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:9:17"},"scope":3764,"src":"589:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3325,"nodeType":"Block","src":"877:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"932:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3314,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"936:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"932:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"931:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"942:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3318,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"946:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"941:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3312,"id":3324,"nodeType":"Return","src":"924:28:17"}]},"documentation":{"id":3304,"nodeType":"StructuredDocumentation","src":"699:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3326,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"815:7:17","nodeType":"FunctionDefinition","parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"a","nameLocation":"831:1:17","nodeType":"VariableDeclaration","scope":3326,"src":"823:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"b","nameLocation":"842:1:17","nodeType":"VariableDeclaration","scope":3326,"src":"834:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"822:22:17"},"returnParameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3326,"src":"868:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"868:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"867:9:17"},"scope":3764,"src":"806:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3350,"nodeType":"Block","src":"1229:123:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3336,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"1317:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1322:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1317:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3340,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"1331:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1335:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1331:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1330:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3344,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"1340:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1330:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1344:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1317:28:17","trueExpression":{"hexValue":"30","id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1326:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3335,"id":3349,"nodeType":"Return","src":"1310:35:17"}]},"documentation":{"id":3327,"nodeType":"StructuredDocumentation","src":"965:188:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3351,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1167:7:17","nodeType":"FunctionDefinition","parameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"a","nameLocation":"1183:1:17","nodeType":"VariableDeclaration","scope":3351,"src":"1175:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"b","nameLocation":"1194:1:17","nodeType":"VariableDeclaration","scope":3351,"src":"1186:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1174:22:17"},"returnParameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3351,"src":"1220:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1219:9:17"},"scope":3764,"src":"1158:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3472,"nodeType":"Block","src":"1796:3797:17","statements":[{"id":3471,"nodeType":"UncheckedBlock","src":"1806:3781:17","statements":[{"assignments":[3364],"declarations":[{"constant":false,"id":3364,"mutability":"mutable","name":"prod0","nameLocation":"2135:5:17","nodeType":"VariableDeclaration","scope":3471,"src":"2127:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3365,"nodeType":"VariableDeclarationStatement","src":"2127:13:17"},{"assignments":[3367],"declarations":[{"constant":false,"id":3367,"mutability":"mutable","name":"prod1","nameLocation":"2207:5:17","nodeType":"VariableDeclaration","scope":3471,"src":"2199:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2199:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3368,"nodeType":"VariableDeclarationStatement","src":"2199:13:17"},{"AST":{"nodeType":"YulBlock","src":"2279:157:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2297:30:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2314:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"2317:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2324:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2320:3:17"},"nodeType":"YulFunctionCall","src":"2320:6:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2307:6:17"},"nodeType":"YulFunctionCall","src":"2307:20:17"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2301:2:17","type":""}]},{"nodeType":"YulAssignment","src":"2344:18:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2357:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"2360:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2353:3:17"},"nodeType":"YulFunctionCall","src":"2353:9:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2344:5:17"}]},{"nodeType":"YulAssignment","src":"2379:43:17","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2396:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"2400:5:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2392:3:17"},"nodeType":"YulFunctionCall","src":"2392:14:17"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2411:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"2415:5:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2408:2:17"},"nodeType":"YulFunctionCall","src":"2408:13:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2388:3:17"},"nodeType":"YulFunctionCall","src":"2388:34:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2379:5:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3364,"isOffset":false,"isSlot":false,"src":"2344:5:17","valueSize":1},{"declaration":3364,"isOffset":false,"isSlot":false,"src":"2400:5:17","valueSize":1},{"declaration":3364,"isOffset":false,"isSlot":false,"src":"2415:5:17","valueSize":1},{"declaration":3367,"isOffset":false,"isSlot":false,"src":"2379:5:17","valueSize":1},{"declaration":3354,"isOffset":false,"isSlot":false,"src":"2314:1:17","valueSize":1},{"declaration":3354,"isOffset":false,"isSlot":false,"src":"2357:1:17","valueSize":1},{"declaration":3356,"isOffset":false,"isSlot":false,"src":"2317:1:17","valueSize":1},{"declaration":3356,"isOffset":false,"isSlot":false,"src":"2360:1:17","valueSize":1}],"id":3369,"nodeType":"InlineAssembly","src":"2270:166:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3370,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"2517:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2526:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2517:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3378,"nodeType":"IfStatement","src":"2513:75:17","trueBody":{"id":3377,"nodeType":"Block","src":"2529:59:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3373,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"2554:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3374,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"2562:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2554:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3362,"id":3376,"nodeType":"Return","src":"2547:26:17"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3380,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"2698:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3381,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"2712:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2698:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2690:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2690:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3384,"nodeType":"ExpressionStatement","src":"2690:28:17"},{"assignments":[3386],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"remainder","nameLocation":"2982:9:17","nodeType":"VariableDeclaration","scope":3471,"src":"2974:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2974:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3387,"nodeType":"VariableDeclarationStatement","src":"2974:17:17"},{"AST":{"nodeType":"YulBlock","src":"3014:291:17","statements":[{"nodeType":"YulAssignment","src":"3083:38:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3103:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"3106:1:17"},{"name":"denominator","nodeType":"YulIdentifier","src":"3109:11:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3096:6:17"},"nodeType":"YulFunctionCall","src":"3096:25:17"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3083:9:17"}]},{"nodeType":"YulAssignment","src":"3203:41:17","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3216:5:17"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3226:9:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"3237:5:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3223:2:17"},"nodeType":"YulFunctionCall","src":"3223:20:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3212:3:17"},"nodeType":"YulFunctionCall","src":"3212:32:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3203:5:17"}]},{"nodeType":"YulAssignment","src":"3261:30:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3274:5:17"},{"name":"remainder","nodeType":"YulIdentifier","src":"3281:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3270:3:17"},"nodeType":"YulFunctionCall","src":"3270:21:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3261:5:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3358,"isOffset":false,"isSlot":false,"src":"3109:11:17","valueSize":1},{"declaration":3364,"isOffset":false,"isSlot":false,"src":"3237:5:17","valueSize":1},{"declaration":3364,"isOffset":false,"isSlot":false,"src":"3261:5:17","valueSize":1},{"declaration":3364,"isOffset":false,"isSlot":false,"src":"3274:5:17","valueSize":1},{"declaration":3367,"isOffset":false,"isSlot":false,"src":"3203:5:17","valueSize":1},{"declaration":3367,"isOffset":false,"isSlot":false,"src":"3216:5:17","valueSize":1},{"declaration":3386,"isOffset":false,"isSlot":false,"src":"3083:9:17","valueSize":1},{"declaration":3386,"isOffset":false,"isSlot":false,"src":"3226:9:17","valueSize":1},{"declaration":3386,"isOffset":false,"isSlot":false,"src":"3281:9:17","valueSize":1},{"declaration":3354,"isOffset":false,"isSlot":false,"src":"3103:1:17","valueSize":1},{"declaration":3356,"isOffset":false,"isSlot":false,"src":"3106:1:17","valueSize":1}],"id":3388,"nodeType":"InlineAssembly","src":"3005:300:17"},{"assignments":[3390],"declarations":[{"constant":false,"id":3390,"mutability":"mutable","name":"twos","nameLocation":"3620:4:17","nodeType":"VariableDeclaration","scope":3471,"src":"3612:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3398,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"3627:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3642:12:17","subExpression":{"id":3392,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"3643:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3657:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3642:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3641:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3612:47:17"},{"AST":{"nodeType":"YulBlock","src":"3682:362:17","statements":[{"nodeType":"YulAssignment","src":"3747:37:17","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3766:11:17"},{"name":"twos","nodeType":"YulIdentifier","src":"3779:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3762:3:17"},"nodeType":"YulFunctionCall","src":"3762:22:17"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3747:11:17"}]},{"nodeType":"YulAssignment","src":"3851:25:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3864:5:17"},{"name":"twos","nodeType":"YulIdentifier","src":"3871:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3860:3:17"},"nodeType":"YulFunctionCall","src":"3860:16:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3851:5:17"}]},{"nodeType":"YulAssignment","src":"3991:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4011:1:17","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4014:4:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4007:3:17"},"nodeType":"YulFunctionCall","src":"4007:12:17"},{"name":"twos","nodeType":"YulIdentifier","src":"4021:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4003:3:17"},"nodeType":"YulFunctionCall","src":"4003:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4028:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:17"},"nodeType":"YulFunctionCall","src":"3999:31:17"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3991:4:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3358,"isOffset":false,"isSlot":false,"src":"3747:11:17","valueSize":1},{"declaration":3358,"isOffset":false,"isSlot":false,"src":"3766:11:17","valueSize":1},{"declaration":3364,"isOffset":false,"isSlot":false,"src":"3851:5:17","valueSize":1},{"declaration":3364,"isOffset":false,"isSlot":false,"src":"3864:5:17","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"3779:4:17","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"3871:4:17","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"3991:4:17","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"4014:4:17","valueSize":1},{"declaration":3390,"isOffset":false,"isSlot":false,"src":"4021:4:17","valueSize":1}],"id":3399,"nodeType":"InlineAssembly","src":"3673:371:17"},{"expression":{"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3400,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"4110:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3401,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"4119:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3402,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"4127:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4119:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4110:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3405,"nodeType":"ExpressionStatement","src":"4110:21:17"},{"assignments":[3407],"declarations":[{"constant":false,"id":3407,"mutability":"mutable","name":"inverse","nameLocation":"4457:7:17","nodeType":"VariableDeclaration","scope":3471,"src":"4449:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"4449:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3414,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4468:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3409,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"4472:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4468:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4467:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4487:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4467:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4449:39:17"},{"expression":{"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3415,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"4705:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4716:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"4720:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3418,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"4734:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4720:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4716:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4705:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3422,"nodeType":"ExpressionStatement","src":"4705:36:17"},{"expression":{"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3423,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"4774:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3425,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"4789:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3426,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"4803:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4789:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4785:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4774:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3430,"nodeType":"ExpressionStatement","src":"4774:36:17"},{"expression":{"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3431,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"4844:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4855:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"4859:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3434,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"4873:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4859:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4855:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4844:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3438,"nodeType":"ExpressionStatement","src":"4844:36:17"},{"expression":{"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3439,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"4914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4925:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"4929:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3442,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"4943:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4929:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4914:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3446,"nodeType":"ExpressionStatement","src":"4914:36:17"},{"expression":{"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3447,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"4984:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4995:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"4999:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3450,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"5013:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4999:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4995:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4984:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3454,"nodeType":"ExpressionStatement","src":"4984:36:17"},{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3455,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"5055:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"5070:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3458,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"5084:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5070:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5066:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5055:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ExpressionStatement","src":"5055:36:17"},{"expression":{"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"5525:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3464,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"5534:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3465,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"5542:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5534:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5525:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3468,"nodeType":"ExpressionStatement","src":"5525:24:17"},{"expression":{"id":3469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"5570:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3362,"id":3470,"nodeType":"Return","src":"5563:13:17"}]}]},"documentation":{"id":3352,"nodeType":"StructuredDocumentation","src":"1358:305:17","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1677:6:17","nodeType":"FunctionDefinition","parameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"x","nameLocation":"1701:1:17","nodeType":"VariableDeclaration","scope":3473,"src":"1693:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"1693:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3356,"mutability":"mutable","name":"y","nameLocation":"1720:1:17","nodeType":"VariableDeclaration","scope":3473,"src":"1712:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1712:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3358,"mutability":"mutable","name":"denominator","nameLocation":"1739:11:17","nodeType":"VariableDeclaration","scope":3473,"src":"1731:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1731:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:73:17"},"returnParameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"result","nameLocation":"1788:6:17","nodeType":"VariableDeclaration","scope":3473,"src":"1780:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1780:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1779:16:17"},"scope":3764,"src":"1668:3925:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3516,"nodeType":"Block","src":"5873:189:17","statements":[{"assignments":[3489],"declarations":[{"constant":false,"id":3489,"mutability":"mutable","name":"result","nameLocation":"5891:6:17","nodeType":"VariableDeclaration","scope":3516,"src":"5883:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5883:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3495,"initialValue":{"arguments":[{"id":3491,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"5907:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3492,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5910:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3493,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"5913:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3490,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3473,3517],"referencedDeclaration":3473,"src":"5900:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5900:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5883:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3267","typeString":"enum Math.Rounding"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3496,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"5939:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3267","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3497,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"5951:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3267_$","typeString":"type(enum Math.Rounding)"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5960:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"5951:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3267","typeString":"enum Math.Rounding"}},"src":"5939:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3501,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"5973:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3502,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5976:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3503,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"5979:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3500,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5966:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5966:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5994:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5966:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5939:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3513,"nodeType":"IfStatement","src":"5935:98:17","trueBody":{"id":3512,"nodeType":"Block","src":"5997:36:17","statements":[{"expression":{"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"6011:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6011:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3511,"nodeType":"ExpressionStatement","src":"6011:11:17"}]}},{"expression":{"id":3514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"6049:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3487,"id":3515,"nodeType":"Return","src":"6042:13:17"}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"5599:121:17","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3517,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5734:6:17","nodeType":"FunctionDefinition","parameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"x","nameLocation":"5758:1:17","nodeType":"VariableDeclaration","scope":3517,"src":"5750:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"y","nameLocation":"5777:1:17","nodeType":"VariableDeclaration","scope":3517,"src":"5769:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5769:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"denominator","nameLocation":"5796:11:17","nodeType":"VariableDeclaration","scope":3517,"src":"5788:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"5788:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3483,"mutability":"mutable","name":"rounding","nameLocation":"5826:8:17","nodeType":"VariableDeclaration","scope":3517,"src":"5817:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3267","typeString":"enum Math.Rounding"},"typeName":{"id":3482,"nodeType":"UserDefinedTypeName","pathNode":{"id":3481,"name":"Rounding","nameLocations":["5817:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3267,"src":"5817:8:17"},"referencedDeclaration":3267,"src":"5817:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3267","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5740:100:17"},"returnParameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3517,"src":"5864:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3485,"name":"uint256","nodeType":"ElementaryTypeName","src":"5864:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5863:9:17"},"scope":3764,"src":"5725:337:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3726,"nodeType":"Block","src":"6338:2149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"6352:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6357:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6352:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3531,"nodeType":"IfStatement","src":"6348:45:17","trueBody":{"id":3530,"nodeType":"Block","src":"6360:33:17","statements":[{"expression":{"hexValue":"30","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3524,"id":3529,"nodeType":"Return","src":"6374:8:17"}]}},{"assignments":[3533],"declarations":[{"constant":false,"id":3533,"mutability":"mutable","name":"result","nameLocation":"7066:6:17","nodeType":"VariableDeclaration","scope":3726,"src":"7058:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"7058:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3535,"initialValue":{"hexValue":"31","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7075:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"7058:18:17"},{"assignments":[3537],"declarations":[{"constant":false,"id":3537,"mutability":"mutable","name":"x","nameLocation":"7094:1:17","nodeType":"VariableDeclaration","scope":3726,"src":"7086:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3539,"initialValue":{"id":3538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"7098:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7086:13:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3540,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7113:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"7113:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7124:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7113:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3554,"nodeType":"IfStatement","src":"7109:79:17","trueBody":{"id":3553,"nodeType":"Block","src":"7127:61:17","statements":[{"expression":{"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3545,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7141:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7147:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"7141:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3548,"nodeType":"ExpressionStatement","src":"7141:9:17"},{"expression":{"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3549,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"7164:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7175:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7164:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3552,"nodeType":"ExpressionStatement","src":"7164:13:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3555,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7201:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7206:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7201:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7211:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7201:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3569,"nodeType":"IfStatement","src":"7197:77:17","trueBody":{"id":3568,"nodeType":"Block","src":"7214:60:17","statements":[{"expression":{"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3560,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7228:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7234:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7228:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3563,"nodeType":"ExpressionStatement","src":"7228:8:17"},{"expression":{"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"7250:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7250:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3567,"nodeType":"ExpressionStatement","src":"7250:13:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3570,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7287:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7287:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7297:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7287:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3584,"nodeType":"IfStatement","src":"7283:77:17","trueBody":{"id":3583,"nodeType":"Block","src":"7300:60:17","statements":[{"expression":{"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3575,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7314:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7320:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7314:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3578,"nodeType":"ExpressionStatement","src":"7314:8:17"},{"expression":{"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"7336:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7347:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7336:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3582,"nodeType":"ExpressionStatement","src":"7336:13:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3585,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7373:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7378:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7373:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7383:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7373:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3599,"nodeType":"IfStatement","src":"7369:76:17","trueBody":{"id":3598,"nodeType":"Block","src":"7386:59:17","statements":[{"expression":{"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3590,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7400:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7406:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7400:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3593,"nodeType":"ExpressionStatement","src":"7400:8:17"},{"expression":{"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3594,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"7422:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7433:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7422:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3597,"nodeType":"ExpressionStatement","src":"7422:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3600,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7458:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7463:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7458:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7467:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7458:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3614,"nodeType":"IfStatement","src":"7454:74:17","trueBody":{"id":3613,"nodeType":"Block","src":"7470:58:17","statements":[{"expression":{"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3605,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7484:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7490:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7484:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3608,"nodeType":"ExpressionStatement","src":"7484:7:17"},{"expression":{"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"7505:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7516:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7505:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3612,"nodeType":"ExpressionStatement","src":"7505:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3615,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7541:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7546:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7541:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7550:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7541:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3629,"nodeType":"IfStatement","src":"7537:74:17","trueBody":{"id":3628,"nodeType":"Block","src":"7553:58:17","statements":[{"expression":{"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3620,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7567:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7573:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7567:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3623,"nodeType":"ExpressionStatement","src":"7567:7:17"},{"expression":{"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"7588:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7599:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7588:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3627,"nodeType":"ExpressionStatement","src":"7588:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7624:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7629:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7624:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7633:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7624:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3640,"nodeType":"IfStatement","src":"7620:53:17","trueBody":{"id":3639,"nodeType":"Block","src":"7636:37:17","statements":[{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"7650:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7661:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7650:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3638,"nodeType":"ExpressionStatement","src":"7650:12:17"}]}},{"id":3725,"nodeType":"UncheckedBlock","src":"8073:408:17","statements":[{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8097:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8107:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3643,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"8116:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8120:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8116:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8107:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8106:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8131:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8106:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3651,"nodeType":"ExpressionStatement","src":"8097:35:17"},{"expression":{"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8146:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8156:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"8165:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8169:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8165:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8156:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8155:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8180:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8155:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8146:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3662,"nodeType":"ExpressionStatement","src":"8146:35:17"},{"expression":{"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8195:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8205:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"8214:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8218:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8205:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8204:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8229:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8204:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8195:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3673,"nodeType":"ExpressionStatement","src":"8195:35:17"},{"expression":{"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8244:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8254:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"8263:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8267:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8263:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8254:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8253:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8278:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8253:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8244:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3684,"nodeType":"ExpressionStatement","src":"8244:35:17"},{"expression":{"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8293:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8303:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3687,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"8312:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8316:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8303:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8302:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8327:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8293:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3695,"nodeType":"ExpressionStatement","src":"8293:35:17"},{"expression":{"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8342:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8352:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"8361:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8365:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8361:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8352:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8351:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8376:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8351:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8342:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3706,"nodeType":"ExpressionStatement","src":"8342:35:17"},{"expression":{"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8391:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8401:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"8410:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8414:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8410:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8401:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8400:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8425:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8400:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8391:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3717,"nodeType":"ExpressionStatement","src":"8391:35:17"},{"expression":{"arguments":[{"id":3719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8451:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"8459:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"8463:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8459:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3718,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"8447:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8447:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3524,"id":3724,"nodeType":"Return","src":"8440:30:17"}]}]},"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"6068:208:17","text":" @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3727,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6290:4:17","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"a","nameLocation":"6303:1:17","nodeType":"VariableDeclaration","scope":3727,"src":"6295:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"6295:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6294:11:17"},"returnParameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3727,"src":"6329:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"6329:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6328:9:17"},"scope":3764,"src":"6281:2206:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3762,"nodeType":"Block","src":"8663:161:17","statements":[{"assignments":[3739],"declarations":[{"constant":false,"id":3739,"mutability":"mutable","name":"result","nameLocation":"8681:6:17","nodeType":"VariableDeclaration","scope":3762,"src":"8673:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"8673:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3743,"initialValue":{"arguments":[{"id":3741,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"8695:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3740,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3727,3763],"referencedDeclaration":3727,"src":"8690:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8690:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8673:24:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3267","typeString":"enum Math.Rounding"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3744,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"8711:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3267","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3745,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"8723:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3267_$","typeString":"type(enum Math.Rounding)"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8732:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"8723:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3267","typeString":"enum Math.Rounding"}},"src":"8711:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"8738:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"8747:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8738:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3751,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"8756:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8738:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8711:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3759,"nodeType":"IfStatement","src":"8707:88:17","trueBody":{"id":3758,"nodeType":"Block","src":"8759:36:17","statements":[{"expression":{"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3754,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"8773:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8783:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8773:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3757,"nodeType":"ExpressionStatement","src":"8773:11:17"}]}},{"expression":{"id":3760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"8811:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3737,"id":3761,"nodeType":"Return","src":"8804:13:17"}]},"documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"8493:89:17","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3763,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:17","nodeType":"FunctionDefinition","parameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"a","nameLocation":"8609:1:17","nodeType":"VariableDeclaration","scope":3763,"src":"8601:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3733,"mutability":"mutable","name":"rounding","nameLocation":"8621:8:17","nodeType":"VariableDeclaration","scope":3763,"src":"8612:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3267","typeString":"enum Math.Rounding"},"typeName":{"id":3732,"nodeType":"UserDefinedTypeName","pathNode":{"id":3731,"name":"Rounding","nameLocations":["8612:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3267,"src":"8612:8:17"},"referencedDeclaration":3267,"src":"8612:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3267","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8600:30:17"},"returnParameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3763,"src":"8654:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3735,"name":"uint256","nodeType":"ElementaryTypeName","src":"8654:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8653:9:17"},"scope":3764,"src":"8587:237:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3765,"src":"202:8624:17","usedErrors":[]}],"src":"103:8724:17"},"id":17},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5615]},"id":5616,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3766,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3767,"nodeType":"StructuredDocumentation","src":"132:709:18","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":5615,"linearizedBaseContracts":[5615],"name":"SafeCast","nameLocation":"850:8:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3791,"nodeType":"Block","src":"1254:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"1272:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1286:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3778,"name":"uint248","nodeType":"ElementaryTypeName","src":"1286:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3777,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1281:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1281:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1295:3:18","memberName":"max","nodeType":"MemberAccess","src":"1281:17:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1272:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1300:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":3775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1264:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1264:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3785,"nodeType":"ExpressionStatement","src":"1264:78:18"},{"expression":{"arguments":[{"id":3788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"1367:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1359:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3786,"name":"uint248","nodeType":"ElementaryTypeName","src":"1359:7:18","typeDescriptions":{}}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1359:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3774,"id":3790,"nodeType":"Return","src":"1352:21:18"}]},"documentation":{"id":3768,"nodeType":"StructuredDocumentation","src":"865:318:18","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":3792,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1197:9:18","nodeType":"FunctionDefinition","parameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"value","nameLocation":"1215:5:18","nodeType":"VariableDeclaration","scope":3792,"src":"1207:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1206:15:18"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3792,"src":"1245:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3772,"name":"uint248","nodeType":"ElementaryTypeName","src":"1245:7:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1244:9:18"},"scope":5615,"src":"1188:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3816,"nodeType":"Block","src":"1775:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"1793:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1807:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3803,"name":"uint240","nodeType":"ElementaryTypeName","src":"1807:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3802,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1802:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1816:3:18","memberName":"max","nodeType":"MemberAccess","src":"1802:17:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1793:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":3800,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1785:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1785:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3810,"nodeType":"ExpressionStatement","src":"1785:78:18"},{"expression":{"arguments":[{"id":3813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"1888:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1880:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3811,"name":"uint240","nodeType":"ElementaryTypeName","src":"1880:7:18","typeDescriptions":{}}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1880:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3799,"id":3815,"nodeType":"Return","src":"1873:21:18"}]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"1386:318:18","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":3817,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1718:9:18","nodeType":"FunctionDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"value","nameLocation":"1736:5:18","nodeType":"VariableDeclaration","scope":3817,"src":"1728:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1728:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:15:18"},"returnParameters":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3817,"src":"1766:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3797,"name":"uint240","nodeType":"ElementaryTypeName","src":"1766:7:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1765:9:18"},"scope":5615,"src":"1709:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3841,"nodeType":"Block","src":"2296:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"2314:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2328:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3828,"name":"uint232","nodeType":"ElementaryTypeName","src":"2328:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3827,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2323:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2323:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2337:3:18","memberName":"max","nodeType":"MemberAccess","src":"2323:17:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2314:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2342:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":3825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2306:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2306:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3835,"nodeType":"ExpressionStatement","src":"2306:78:18"},{"expression":{"arguments":[{"id":3838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"2409:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2401:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3836,"name":"uint232","nodeType":"ElementaryTypeName","src":"2401:7:18","typeDescriptions":{}}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2401:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3824,"id":3840,"nodeType":"Return","src":"2394:21:18"}]},"documentation":{"id":3818,"nodeType":"StructuredDocumentation","src":"1907:318:18","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":3842,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2239:9:18","nodeType":"FunctionDefinition","parameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"value","nameLocation":"2257:5:18","nodeType":"VariableDeclaration","scope":3842,"src":"2249:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"2249:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2248:15:18"},"returnParameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3842,"src":"2287:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3822,"name":"uint232","nodeType":"ElementaryTypeName","src":"2287:7:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2286:9:18"},"scope":5615,"src":"2230:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3866,"nodeType":"Block","src":"2817:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"2835:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3853,"name":"uint224","nodeType":"ElementaryTypeName","src":"2849:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3852,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2844:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2858:3:18","memberName":"max","nodeType":"MemberAccess","src":"2844:17:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2835:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2863:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":3850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2827:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3860,"nodeType":"ExpressionStatement","src":"2827:78:18"},{"expression":{"arguments":[{"id":3863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"2930:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2922:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3861,"name":"uint224","nodeType":"ElementaryTypeName","src":"2922:7:18","typeDescriptions":{}}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3849,"id":3865,"nodeType":"Return","src":"2915:21:18"}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"2428:318:18","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":3867,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2760:9:18","nodeType":"FunctionDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"value","nameLocation":"2778:5:18","nodeType":"VariableDeclaration","scope":3867,"src":"2770:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"2770:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2769:15:18"},"returnParameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3867,"src":"2808:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3847,"name":"uint224","nodeType":"ElementaryTypeName","src":"2808:7:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2807:9:18"},"scope":5615,"src":"2751:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3891,"nodeType":"Block","src":"3338:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"3356:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3370:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3878,"name":"uint216","nodeType":"ElementaryTypeName","src":"3370:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3877,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3365:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3379:3:18","memberName":"max","nodeType":"MemberAccess","src":"3365:17:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3356:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3384:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":3875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3348:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3885,"nodeType":"ExpressionStatement","src":"3348:78:18"},{"expression":{"arguments":[{"id":3888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"3451:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3443:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3886,"name":"uint216","nodeType":"ElementaryTypeName","src":"3443:7:18","typeDescriptions":{}}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3443:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3874,"id":3890,"nodeType":"Return","src":"3436:21:18"}]},"documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"2949:318:18","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":3892,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3281:9:18","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"value","nameLocation":"3299:5:18","nodeType":"VariableDeclaration","scope":3892,"src":"3291:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3290:15:18"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3892,"src":"3329:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3872,"name":"uint216","nodeType":"ElementaryTypeName","src":"3329:7:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3328:9:18"},"scope":5615,"src":"3272:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3916,"nodeType":"Block","src":"3859:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"3877:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3891:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3903,"name":"uint208","nodeType":"ElementaryTypeName","src":"3891:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3902,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3886:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3886:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3900:3:18","memberName":"max","nodeType":"MemberAccess","src":"3886:17:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3877:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3905:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":3900,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3869:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3869:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3910,"nodeType":"ExpressionStatement","src":"3869:78:18"},{"expression":{"arguments":[{"id":3913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"3972:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3964:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3911,"name":"uint208","nodeType":"ElementaryTypeName","src":"3964:7:18","typeDescriptions":{}}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3964:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3899,"id":3915,"nodeType":"Return","src":"3957:21:18"}]},"documentation":{"id":3893,"nodeType":"StructuredDocumentation","src":"3470:318:18","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":3917,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3802:9:18","nodeType":"FunctionDefinition","parameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"value","nameLocation":"3820:5:18","nodeType":"VariableDeclaration","scope":3917,"src":"3812:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3812:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3811:15:18"},"returnParameters":{"id":3899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3917,"src":"3850:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3897,"name":"uint208","nodeType":"ElementaryTypeName","src":"3850:7:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3849:9:18"},"scope":5615,"src":"3793:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3941,"nodeType":"Block","src":"4380:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"4398:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4412:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3928,"name":"uint200","nodeType":"ElementaryTypeName","src":"4412:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3927,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4407:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4421:3:18","memberName":"max","nodeType":"MemberAccess","src":"4407:17:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4398:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4426:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":3925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4390:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4390:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3935,"nodeType":"ExpressionStatement","src":"4390:78:18"},{"expression":{"arguments":[{"id":3938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"4493:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4485:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3936,"name":"uint200","nodeType":"ElementaryTypeName","src":"4485:7:18","typeDescriptions":{}}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3924,"id":3940,"nodeType":"Return","src":"4478:21:18"}]},"documentation":{"id":3918,"nodeType":"StructuredDocumentation","src":"3991:318:18","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":3942,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4323:9:18","nodeType":"FunctionDefinition","parameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3920,"mutability":"mutable","name":"value","nameLocation":"4341:5:18","nodeType":"VariableDeclaration","scope":3942,"src":"4333:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"4333:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4332:15:18"},"returnParameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3942,"src":"4371:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3922,"name":"uint200","nodeType":"ElementaryTypeName","src":"4371:7:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4370:9:18"},"scope":5615,"src":"4314:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3966,"nodeType":"Block","src":"4901:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"4919:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4933:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3953,"name":"uint192","nodeType":"ElementaryTypeName","src":"4933:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3952,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4928:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4928:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4942:3:18","memberName":"max","nodeType":"MemberAccess","src":"4928:17:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"4919:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4947:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":3950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4911:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4911:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3960,"nodeType":"ExpressionStatement","src":"4911:78:18"},{"expression":{"arguments":[{"id":3963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"5014:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5006:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3961,"name":"uint192","nodeType":"ElementaryTypeName","src":"5006:7:18","typeDescriptions":{}}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3949,"id":3965,"nodeType":"Return","src":"4999:21:18"}]},"documentation":{"id":3943,"nodeType":"StructuredDocumentation","src":"4512:318:18","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":3967,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4844:9:18","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"value","nameLocation":"4862:5:18","nodeType":"VariableDeclaration","scope":3967,"src":"4854:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"4854:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:15:18"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3967,"src":"4892:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3947,"name":"uint192","nodeType":"ElementaryTypeName","src":"4892:7:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4891:9:18"},"scope":5615,"src":"4835:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3991,"nodeType":"Block","src":"5422:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"5440:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5454:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3978,"name":"uint184","nodeType":"ElementaryTypeName","src":"5454:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3977,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5449:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5449:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5463:3:18","memberName":"max","nodeType":"MemberAccess","src":"5449:17:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5440:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5468:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":3975,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5432:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5432:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3985,"nodeType":"ExpressionStatement","src":"5432:78:18"},{"expression":{"arguments":[{"id":3988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"5535:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5527:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3986,"name":"uint184","nodeType":"ElementaryTypeName","src":"5527:7:18","typeDescriptions":{}}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5527:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3974,"id":3990,"nodeType":"Return","src":"5520:21:18"}]},"documentation":{"id":3968,"nodeType":"StructuredDocumentation","src":"5033:318:18","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":3992,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5365:9:18","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"value","nameLocation":"5383:5:18","nodeType":"VariableDeclaration","scope":3992,"src":"5375:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"5375:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5374:15:18"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3992,"src":"5413:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3972,"name":"uint184","nodeType":"ElementaryTypeName","src":"5413:7:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5412:9:18"},"scope":5615,"src":"5356:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4016,"nodeType":"Block","src":"5943:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"5961:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5975:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4003,"name":"uint176","nodeType":"ElementaryTypeName","src":"5975:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4002,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5970:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5970:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5984:3:18","memberName":"max","nodeType":"MemberAccess","src":"5970:17:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"5961:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5989:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4000,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5953:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5953:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4010,"nodeType":"ExpressionStatement","src":"5953:78:18"},{"expression":{"arguments":[{"id":4013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"6056:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6048:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4011,"name":"uint176","nodeType":"ElementaryTypeName","src":"6048:7:18","typeDescriptions":{}}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6048:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3999,"id":4015,"nodeType":"Return","src":"6041:21:18"}]},"documentation":{"id":3993,"nodeType":"StructuredDocumentation","src":"5554:318:18","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4017,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5886:9:18","nodeType":"FunctionDefinition","parameters":{"id":3996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3995,"mutability":"mutable","name":"value","nameLocation":"5904:5:18","nodeType":"VariableDeclaration","scope":4017,"src":"5896:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"5896:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5895:15:18"},"returnParameters":{"id":3999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4017,"src":"5934:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3997,"name":"uint176","nodeType":"ElementaryTypeName","src":"5934:7:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"5933:9:18"},"scope":5615,"src":"5877:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4041,"nodeType":"Block","src":"6464:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"6482:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6496:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4028,"name":"uint168","nodeType":"ElementaryTypeName","src":"6496:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4027,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6491:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6491:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6505:3:18","memberName":"max","nodeType":"MemberAccess","src":"6491:17:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6482:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6510:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4025,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6474:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6474:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4035,"nodeType":"ExpressionStatement","src":"6474:78:18"},{"expression":{"arguments":[{"id":4038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"6577:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6569:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4036,"name":"uint168","nodeType":"ElementaryTypeName","src":"6569:7:18","typeDescriptions":{}}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6569:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4024,"id":4040,"nodeType":"Return","src":"6562:21:18"}]},"documentation":{"id":4018,"nodeType":"StructuredDocumentation","src":"6075:318:18","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4042,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6407:9:18","nodeType":"FunctionDefinition","parameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"value","nameLocation":"6425:5:18","nodeType":"VariableDeclaration","scope":4042,"src":"6417:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"6417:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6416:15:18"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4042,"src":"6455:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4022,"name":"uint168","nodeType":"ElementaryTypeName","src":"6455:7:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6454:9:18"},"scope":5615,"src":"6398:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4066,"nodeType":"Block","src":"6985:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"7003:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7017:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4053,"name":"uint160","nodeType":"ElementaryTypeName","src":"7017:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4052,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7012:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7012:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7026:3:18","memberName":"max","nodeType":"MemberAccess","src":"7012:17:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7003:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7031:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6995:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6995:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4060,"nodeType":"ExpressionStatement","src":"6995:78:18"},{"expression":{"arguments":[{"id":4063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"7098:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7090:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4061,"name":"uint160","nodeType":"ElementaryTypeName","src":"7090:7:18","typeDescriptions":{}}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7090:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4049,"id":4065,"nodeType":"Return","src":"7083:21:18"}]},"documentation":{"id":4043,"nodeType":"StructuredDocumentation","src":"6596:318:18","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4067,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"6928:9:18","nodeType":"FunctionDefinition","parameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4045,"mutability":"mutable","name":"value","nameLocation":"6946:5:18","nodeType":"VariableDeclaration","scope":4067,"src":"6938:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"6938:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6937:15:18"},"returnParameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4067,"src":"6976:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4047,"name":"uint160","nodeType":"ElementaryTypeName","src":"6976:7:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"6975:9:18"},"scope":5615,"src":"6919:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4091,"nodeType":"Block","src":"7506:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7524:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7538:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4078,"name":"uint152","nodeType":"ElementaryTypeName","src":"7538:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4077,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7533:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7547:3:18","memberName":"max","nodeType":"MemberAccess","src":"7533:17:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7524:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7552:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4075,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7516:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7516:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4085,"nodeType":"ExpressionStatement","src":"7516:78:18"},{"expression":{"arguments":[{"id":4088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7619:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7611:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4086,"name":"uint152","nodeType":"ElementaryTypeName","src":"7611:7:18","typeDescriptions":{}}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7611:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4074,"id":4090,"nodeType":"Return","src":"7604:21:18"}]},"documentation":{"id":4068,"nodeType":"StructuredDocumentation","src":"7117:318:18","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4092,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7449:9:18","nodeType":"FunctionDefinition","parameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"value","nameLocation":"7467:5:18","nodeType":"VariableDeclaration","scope":4092,"src":"7459:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"7459:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7458:15:18"},"returnParameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4092,"src":"7497:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4072,"name":"uint152","nodeType":"ElementaryTypeName","src":"7497:7:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7496:9:18"},"scope":5615,"src":"7440:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4116,"nodeType":"Block","src":"8027:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"8045:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8059:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4103,"name":"uint144","nodeType":"ElementaryTypeName","src":"8059:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4102,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8054:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8054:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8068:3:18","memberName":"max","nodeType":"MemberAccess","src":"8054:17:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8045:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8073:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4100,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8037:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8037:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4110,"nodeType":"ExpressionStatement","src":"8037:78:18"},{"expression":{"arguments":[{"id":4113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"8140:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8132:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4111,"name":"uint144","nodeType":"ElementaryTypeName","src":"8132:7:18","typeDescriptions":{}}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4099,"id":4115,"nodeType":"Return","src":"8125:21:18"}]},"documentation":{"id":4093,"nodeType":"StructuredDocumentation","src":"7638:318:18","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4117,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"7970:9:18","nodeType":"FunctionDefinition","parameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"value","nameLocation":"7988:5:18","nodeType":"VariableDeclaration","scope":4117,"src":"7980:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"7980:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:15:18"},"returnParameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4117,"src":"8018:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4097,"name":"uint144","nodeType":"ElementaryTypeName","src":"8018:7:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8017:9:18"},"scope":5615,"src":"7961:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4141,"nodeType":"Block","src":"8548:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"8566:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8580:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4128,"name":"uint136","nodeType":"ElementaryTypeName","src":"8580:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4127,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8575:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8575:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8589:3:18","memberName":"max","nodeType":"MemberAccess","src":"8575:17:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8566:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8594:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8558:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4135,"nodeType":"ExpressionStatement","src":"8558:78:18"},{"expression":{"arguments":[{"id":4138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"8661:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8653:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4136,"name":"uint136","nodeType":"ElementaryTypeName","src":"8653:7:18","typeDescriptions":{}}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8653:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4124,"id":4140,"nodeType":"Return","src":"8646:21:18"}]},"documentation":{"id":4118,"nodeType":"StructuredDocumentation","src":"8159:318:18","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4142,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8491:9:18","nodeType":"FunctionDefinition","parameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"value","nameLocation":"8509:5:18","nodeType":"VariableDeclaration","scope":4142,"src":"8501:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"8501:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8500:15:18"},"returnParameters":{"id":4124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4142,"src":"8539:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4122,"name":"uint136","nodeType":"ElementaryTypeName","src":"8539:7:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8538:9:18"},"scope":5615,"src":"8482:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4166,"nodeType":"Block","src":"9069:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"9087:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9101:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4153,"name":"uint128","nodeType":"ElementaryTypeName","src":"9101:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9096:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9096:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9110:3:18","memberName":"max","nodeType":"MemberAccess","src":"9096:17:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9087:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9115:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":4150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9079:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9079:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4160,"nodeType":"ExpressionStatement","src":"9079:78:18"},{"expression":{"arguments":[{"id":4163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"9182:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9174:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4161,"name":"uint128","nodeType":"ElementaryTypeName","src":"9174:7:18","typeDescriptions":{}}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9174:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4149,"id":4165,"nodeType":"Return","src":"9167:21:18"}]},"documentation":{"id":4143,"nodeType":"StructuredDocumentation","src":"8680:318:18","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9012:9:18","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"value","nameLocation":"9030:5:18","nodeType":"VariableDeclaration","scope":4167,"src":"9022:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"9022:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9021:15:18"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"9060:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4147,"name":"uint128","nodeType":"ElementaryTypeName","src":"9060:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9059:9:18"},"scope":5615,"src":"9003:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4191,"nodeType":"Block","src":"9590:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"9608:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9622:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4178,"name":"uint120","nodeType":"ElementaryTypeName","src":"9622:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4177,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9617:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9617:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9631:3:18","memberName":"max","nodeType":"MemberAccess","src":"9617:17:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9608:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9636:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":4175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9600:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4185,"nodeType":"ExpressionStatement","src":"9600:78:18"},{"expression":{"arguments":[{"id":4188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"9703:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9695:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4186,"name":"uint120","nodeType":"ElementaryTypeName","src":"9695:7:18","typeDescriptions":{}}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9695:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4174,"id":4190,"nodeType":"Return","src":"9688:21:18"}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"9201:318:18","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":4192,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9533:9:18","nodeType":"FunctionDefinition","parameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"value","nameLocation":"9551:5:18","nodeType":"VariableDeclaration","scope":4192,"src":"9543:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9542:15:18"},"returnParameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4192,"src":"9581:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4172,"name":"uint120","nodeType":"ElementaryTypeName","src":"9581:7:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9580:9:18"},"scope":5615,"src":"9524:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4216,"nodeType":"Block","src":"10111:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"10129:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10143:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4203,"name":"uint112","nodeType":"ElementaryTypeName","src":"10143:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4202,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10138:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10138:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10152:3:18","memberName":"max","nodeType":"MemberAccess","src":"10138:17:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10129:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10157:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":4200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10121:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10121:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4210,"nodeType":"ExpressionStatement","src":"10121:78:18"},{"expression":{"arguments":[{"id":4213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"10224:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10216:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4211,"name":"uint112","nodeType":"ElementaryTypeName","src":"10216:7:18","typeDescriptions":{}}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10216:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4199,"id":4215,"nodeType":"Return","src":"10209:21:18"}]},"documentation":{"id":4193,"nodeType":"StructuredDocumentation","src":"9722:318:18","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4217,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10054:9:18","nodeType":"FunctionDefinition","parameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"value","nameLocation":"10072:5:18","nodeType":"VariableDeclaration","scope":4217,"src":"10064:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"10064:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10063:15:18"},"returnParameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4217,"src":"10102:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4197,"name":"uint112","nodeType":"ElementaryTypeName","src":"10102:7:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10101:9:18"},"scope":5615,"src":"10045:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"10632:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"10650:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10664:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4228,"name":"uint104","nodeType":"ElementaryTypeName","src":"10664:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4227,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10659:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10659:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10673:3:18","memberName":"max","nodeType":"MemberAccess","src":"10659:17:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10650:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10678:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10642:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10642:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4235,"nodeType":"ExpressionStatement","src":"10642:78:18"},{"expression":{"arguments":[{"id":4238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"10745:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10737:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4236,"name":"uint104","nodeType":"ElementaryTypeName","src":"10737:7:18","typeDescriptions":{}}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10737:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4224,"id":4240,"nodeType":"Return","src":"10730:21:18"}]},"documentation":{"id":4218,"nodeType":"StructuredDocumentation","src":"10243:318:18","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10575:9:18","nodeType":"FunctionDefinition","parameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"value","nameLocation":"10593:5:18","nodeType":"VariableDeclaration","scope":4242,"src":"10585:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10584:15:18"},"returnParameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4242,"src":"10623:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4222,"name":"uint104","nodeType":"ElementaryTypeName","src":"10623:7:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10622:9:18"},"scope":5615,"src":"10566:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4266,"nodeType":"Block","src":"11147:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"11165:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11179:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4253,"name":"uint96","nodeType":"ElementaryTypeName","src":"11179:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4252,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11174:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11174:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11187:3:18","memberName":"max","nodeType":"MemberAccess","src":"11174:16:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11165:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11192:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11157:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11157:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4260,"nodeType":"ExpressionStatement","src":"11157:76:18"},{"expression":{"arguments":[{"id":4263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"11257:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11250:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4261,"name":"uint96","nodeType":"ElementaryTypeName","src":"11250:6:18","typeDescriptions":{}}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11250:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4249,"id":4265,"nodeType":"Return","src":"11243:20:18"}]},"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"10764:314:18","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":4267,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11092:8:18","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"value","nameLocation":"11109:5:18","nodeType":"VariableDeclaration","scope":4267,"src":"11101:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"11101:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11100:15:18"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4267,"src":"11139:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4247,"name":"uint96","nodeType":"ElementaryTypeName","src":"11139:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11138:8:18"},"scope":5615,"src":"11083:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4291,"nodeType":"Block","src":"11659:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"11677:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11691:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4278,"name":"uint88","nodeType":"ElementaryTypeName","src":"11691:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4277,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11686:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11686:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11699:3:18","memberName":"max","nodeType":"MemberAccess","src":"11686:16:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11677:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11704:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":4275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11669:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11669:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4285,"nodeType":"ExpressionStatement","src":"11669:76:18"},{"expression":{"arguments":[{"id":4288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"11769:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11762:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4286,"name":"uint88","nodeType":"ElementaryTypeName","src":"11762:6:18","typeDescriptions":{}}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11762:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4274,"id":4290,"nodeType":"Return","src":"11755:20:18"}]},"documentation":{"id":4268,"nodeType":"StructuredDocumentation","src":"11276:314:18","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":4292,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11604:8:18","nodeType":"FunctionDefinition","parameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"value","nameLocation":"11621:5:18","nodeType":"VariableDeclaration","scope":4292,"src":"11613:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"11613:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11612:15:18"},"returnParameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4292,"src":"11651:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4272,"name":"uint88","nodeType":"ElementaryTypeName","src":"11651:6:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11650:8:18"},"scope":5615,"src":"11595:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4316,"nodeType":"Block","src":"12171:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"12189:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12203:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4303,"name":"uint80","nodeType":"ElementaryTypeName","src":"12203:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12198:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12198:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12211:3:18","memberName":"max","nodeType":"MemberAccess","src":"12198:16:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12189:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12216:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":4300,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12181:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12181:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4310,"nodeType":"ExpressionStatement","src":"12181:76:18"},{"expression":{"arguments":[{"id":4313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"12281:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12274:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4311,"name":"uint80","nodeType":"ElementaryTypeName","src":"12274:6:18","typeDescriptions":{}}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12274:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4299,"id":4315,"nodeType":"Return","src":"12267:20:18"}]},"documentation":{"id":4293,"nodeType":"StructuredDocumentation","src":"11788:314:18","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":4317,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12116:8:18","nodeType":"FunctionDefinition","parameters":{"id":4296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"value","nameLocation":"12133:5:18","nodeType":"VariableDeclaration","scope":4317,"src":"12125:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4294,"name":"uint256","nodeType":"ElementaryTypeName","src":"12125:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12124:15:18"},"returnParameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4317,"src":"12163:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4297,"name":"uint80","nodeType":"ElementaryTypeName","src":"12163:6:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12162:8:18"},"scope":5615,"src":"12107:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4341,"nodeType":"Block","src":"12683:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"12701:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12715:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4328,"name":"uint72","nodeType":"ElementaryTypeName","src":"12715:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4327,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12710:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12710:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12723:3:18","memberName":"max","nodeType":"MemberAccess","src":"12710:16:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12701:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12728:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":4325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12693:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12693:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4335,"nodeType":"ExpressionStatement","src":"12693:76:18"},{"expression":{"arguments":[{"id":4338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"12793:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12786:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4336,"name":"uint72","nodeType":"ElementaryTypeName","src":"12786:6:18","typeDescriptions":{}}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12786:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4324,"id":4340,"nodeType":"Return","src":"12779:20:18"}]},"documentation":{"id":4318,"nodeType":"StructuredDocumentation","src":"12300:314:18","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":4342,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12628:8:18","nodeType":"FunctionDefinition","parameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"value","nameLocation":"12645:5:18","nodeType":"VariableDeclaration","scope":4342,"src":"12637:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"12637:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12636:15:18"},"returnParameters":{"id":4324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4342,"src":"12675:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4322,"name":"uint72","nodeType":"ElementaryTypeName","src":"12675:6:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12674:8:18"},"scope":5615,"src":"12619:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4366,"nodeType":"Block","src":"13195:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"13213:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13227:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4353,"name":"uint64","nodeType":"ElementaryTypeName","src":"13227:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13222:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13222:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13235:3:18","memberName":"max","nodeType":"MemberAccess","src":"13222:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13213:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13240:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":4350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13205:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13205:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4360,"nodeType":"ExpressionStatement","src":"13205:76:18"},{"expression":{"arguments":[{"id":4363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"13305:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13298:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4361,"name":"uint64","nodeType":"ElementaryTypeName","src":"13298:6:18","typeDescriptions":{}}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13298:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4349,"id":4365,"nodeType":"Return","src":"13291:20:18"}]},"documentation":{"id":4343,"nodeType":"StructuredDocumentation","src":"12812:314:18","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13140:8:18","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"value","nameLocation":"13157:5:18","nodeType":"VariableDeclaration","scope":4367,"src":"13149:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"13149:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13148:15:18"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4367,"src":"13187:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4347,"name":"uint64","nodeType":"ElementaryTypeName","src":"13187:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13186:8:18"},"scope":5615,"src":"13131:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4391,"nodeType":"Block","src":"13707:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"13725:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13739:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4378,"name":"uint56","nodeType":"ElementaryTypeName","src":"13739:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13734:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13734:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13747:3:18","memberName":"max","nodeType":"MemberAccess","src":"13734:16:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13725:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13752:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":4375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13717:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13717:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4385,"nodeType":"ExpressionStatement","src":"13717:76:18"},{"expression":{"arguments":[{"id":4388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"13817:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13810:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4386,"name":"uint56","nodeType":"ElementaryTypeName","src":"13810:6:18","typeDescriptions":{}}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13810:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4374,"id":4390,"nodeType":"Return","src":"13803:20:18"}]},"documentation":{"id":4368,"nodeType":"StructuredDocumentation","src":"13324:314:18","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":4392,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13652:8:18","nodeType":"FunctionDefinition","parameters":{"id":4371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"value","nameLocation":"13669:5:18","nodeType":"VariableDeclaration","scope":4392,"src":"13661:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"13661:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13660:15:18"},"returnParameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4392,"src":"13699:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4372,"name":"uint56","nodeType":"ElementaryTypeName","src":"13699:6:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13698:8:18"},"scope":5615,"src":"13643:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"14219:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"14237:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14251:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4403,"name":"uint48","nodeType":"ElementaryTypeName","src":"14251:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4402,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14246:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14246:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14259:3:18","memberName":"max","nodeType":"MemberAccess","src":"14246:16:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14237:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14264:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":4400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14229:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14229:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4410,"nodeType":"ExpressionStatement","src":"14229:76:18"},{"expression":{"arguments":[{"id":4413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"14329:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14322:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4411,"name":"uint48","nodeType":"ElementaryTypeName","src":"14322:6:18","typeDescriptions":{}}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14322:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4399,"id":4415,"nodeType":"Return","src":"14315:20:18"}]},"documentation":{"id":4393,"nodeType":"StructuredDocumentation","src":"13836:314:18","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14164:8:18","nodeType":"FunctionDefinition","parameters":{"id":4396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4395,"mutability":"mutable","name":"value","nameLocation":"14181:5:18","nodeType":"VariableDeclaration","scope":4417,"src":"14173:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4394,"name":"uint256","nodeType":"ElementaryTypeName","src":"14173:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14172:15:18"},"returnParameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4417,"src":"14211:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4397,"name":"uint48","nodeType":"ElementaryTypeName","src":"14211:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14210:8:18"},"scope":5615,"src":"14155:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4441,"nodeType":"Block","src":"14731:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"14749:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14763:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4428,"name":"uint40","nodeType":"ElementaryTypeName","src":"14763:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4427,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14758:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14758:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14771:3:18","memberName":"max","nodeType":"MemberAccess","src":"14758:16:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14749:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14776:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":4425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14741:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14741:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4435,"nodeType":"ExpressionStatement","src":"14741:76:18"},{"expression":{"arguments":[{"id":4438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"14841:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14834:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4436,"name":"uint40","nodeType":"ElementaryTypeName","src":"14834:6:18","typeDescriptions":{}}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14834:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4424,"id":4440,"nodeType":"Return","src":"14827:20:18"}]},"documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"14348:314:18","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":4442,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14676:8:18","nodeType":"FunctionDefinition","parameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"value","nameLocation":"14693:5:18","nodeType":"VariableDeclaration","scope":4442,"src":"14685:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"14685:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14684:15:18"},"returnParameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4442,"src":"14723:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4422,"name":"uint40","nodeType":"ElementaryTypeName","src":"14723:6:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14722:8:18"},"scope":5615,"src":"14667:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4466,"nodeType":"Block","src":"15243:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"15261:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15275:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4453,"name":"uint32","nodeType":"ElementaryTypeName","src":"15275:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4452,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15270:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15270:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15283:3:18","memberName":"max","nodeType":"MemberAccess","src":"15270:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15261:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15288:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":4450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15253:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15253:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4460,"nodeType":"ExpressionStatement","src":"15253:76:18"},{"expression":{"arguments":[{"id":4463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"15353:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15346:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4461,"name":"uint32","nodeType":"ElementaryTypeName","src":"15346:6:18","typeDescriptions":{}}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15346:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4449,"id":4465,"nodeType":"Return","src":"15339:20:18"}]},"documentation":{"id":4443,"nodeType":"StructuredDocumentation","src":"14860:314:18","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":4467,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15188:8:18","nodeType":"FunctionDefinition","parameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"value","nameLocation":"15205:5:18","nodeType":"VariableDeclaration","scope":4467,"src":"15197:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"15197:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15196:15:18"},"returnParameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4467,"src":"15235:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4447,"name":"uint32","nodeType":"ElementaryTypeName","src":"15235:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15234:8:18"},"scope":5615,"src":"15179:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4491,"nodeType":"Block","src":"15755:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"15773:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15787:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4478,"name":"uint24","nodeType":"ElementaryTypeName","src":"15787:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4477,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15782:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15782:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15795:3:18","memberName":"max","nodeType":"MemberAccess","src":"15782:16:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15773:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15800:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":4475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15765:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15765:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4485,"nodeType":"ExpressionStatement","src":"15765:76:18"},{"expression":{"arguments":[{"id":4488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"15865:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15858:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4486,"name":"uint24","nodeType":"ElementaryTypeName","src":"15858:6:18","typeDescriptions":{}}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15858:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4474,"id":4490,"nodeType":"Return","src":"15851:20:18"}]},"documentation":{"id":4468,"nodeType":"StructuredDocumentation","src":"15372:314:18","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":4492,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15700:8:18","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"value","nameLocation":"15717:5:18","nodeType":"VariableDeclaration","scope":4492,"src":"15709:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"15709:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15708:15:18"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4492,"src":"15747:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4472,"name":"uint24","nodeType":"ElementaryTypeName","src":"15747:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15746:8:18"},"scope":5615,"src":"15691:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4516,"nodeType":"Block","src":"16267:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"16285:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16299:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4503,"name":"uint16","nodeType":"ElementaryTypeName","src":"16299:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4502,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16294:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16294:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16307:3:18","memberName":"max","nodeType":"MemberAccess","src":"16294:16:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16285:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16312:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":4500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16277:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16277:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4510,"nodeType":"ExpressionStatement","src":"16277:76:18"},{"expression":{"arguments":[{"id":4513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"16377:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16370:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4511,"name":"uint16","nodeType":"ElementaryTypeName","src":"16370:6:18","typeDescriptions":{}}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16370:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4499,"id":4515,"nodeType":"Return","src":"16363:20:18"}]},"documentation":{"id":4493,"nodeType":"StructuredDocumentation","src":"15884:314:18","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":4517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16212:8:18","nodeType":"FunctionDefinition","parameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"value","nameLocation":"16229:5:18","nodeType":"VariableDeclaration","scope":4517,"src":"16221:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"16221:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16220:15:18"},"returnParameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4517,"src":"16259:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4497,"name":"uint16","nodeType":"ElementaryTypeName","src":"16259:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16258:8:18"},"scope":5615,"src":"16203:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4541,"nodeType":"Block","src":"16773:120:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"16791:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16805:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4528,"name":"uint8","nodeType":"ElementaryTypeName","src":"16805:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4527,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16800:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16800:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16812:3:18","memberName":"max","nodeType":"MemberAccess","src":"16800:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16791:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16817:39:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":4525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16783:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16783:74:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4535,"nodeType":"ExpressionStatement","src":"16783:74:18"},{"expression":{"arguments":[{"id":4538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"16880:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16874:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4536,"name":"uint8","nodeType":"ElementaryTypeName","src":"16874:5:18","typeDescriptions":{}}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16874:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4524,"id":4540,"nodeType":"Return","src":"16867:19:18"}]},"documentation":{"id":4518,"nodeType":"StructuredDocumentation","src":"16396:310:18","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":4542,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16720:7:18","nodeType":"FunctionDefinition","parameters":{"id":4521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4520,"mutability":"mutable","name":"value","nameLocation":"16736:5:18","nodeType":"VariableDeclaration","scope":4542,"src":"16728:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4519,"name":"uint256","nodeType":"ElementaryTypeName","src":"16728:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16727:15:18"},"returnParameters":{"id":4524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4542,"src":"16766:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4522,"name":"uint8","nodeType":"ElementaryTypeName","src":"16766:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16765:7:18"},"scope":5615,"src":"16711:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4562,"nodeType":"Block","src":"17167:103:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"17185:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17194:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17185:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17197:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":4550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17177:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17177:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4556,"nodeType":"ExpressionStatement","src":"17177:55:18"},{"expression":{"arguments":[{"id":4559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"17257:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17249:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"17249:7:18","typeDescriptions":{}}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17249:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4549,"id":4561,"nodeType":"Return","src":"17242:21:18"}]},"documentation":{"id":4543,"nodeType":"StructuredDocumentation","src":"16899:198:18","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":4563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17111:9:18","nodeType":"FunctionDefinition","parameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"value","nameLocation":"17128:5:18","nodeType":"VariableDeclaration","scope":4563,"src":"17121:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4544,"name":"int256","nodeType":"ElementaryTypeName","src":"17121:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17120:14:18"},"returnParameters":{"id":4549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4563,"src":"17158:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4547,"name":"uint256","nodeType":"ElementaryTypeName","src":"17158:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17157:9:18"},"scope":5615,"src":"17102:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4595,"nodeType":"Block","src":"17694:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"17712:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17726:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4574,"name":"int248","nodeType":"ElementaryTypeName","src":"17726:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":4573,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17721:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17721:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17734:3:18","memberName":"min","nodeType":"MemberAccess","src":"17721:16:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17712:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"17741:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17755:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4581,"name":"int248","nodeType":"ElementaryTypeName","src":"17755:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":4580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17750:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17750:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17763:3:18","memberName":"max","nodeType":"MemberAccess","src":"17750:16:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17741:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17712:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17768:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17704:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17704:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4589,"nodeType":"ExpressionStatement","src":"17704:106:18"},{"expression":{"arguments":[{"id":4592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"17834:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17827:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4590,"name":"int248","nodeType":"ElementaryTypeName","src":"17827:6:18","typeDescriptions":{}}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17827:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"functionReturnParameters":4570,"id":4594,"nodeType":"Return","src":"17820:20:18"}]},"documentation":{"id":4564,"nodeType":"StructuredDocumentation","src":"17276:350:18","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4596,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17640:8:18","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4566,"mutability":"mutable","name":"value","nameLocation":"17656:5:18","nodeType":"VariableDeclaration","scope":4596,"src":"17649:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4565,"name":"int256","nodeType":"ElementaryTypeName","src":"17649:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17648:14:18"},"returnParameters":{"id":4570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4596,"src":"17686:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4568,"name":"int248","nodeType":"ElementaryTypeName","src":"17686:6:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17685:8:18"},"scope":5615,"src":"17631:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4628,"nodeType":"Block","src":"18271:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"18289:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18303:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4607,"name":"int240","nodeType":"ElementaryTypeName","src":"18303:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":4606,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18298:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18298:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18311:3:18","memberName":"min","nodeType":"MemberAccess","src":"18298:16:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18289:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"18318:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18332:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4614,"name":"int240","nodeType":"ElementaryTypeName","src":"18332:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":4613,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18327:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18327:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18340:3:18","memberName":"max","nodeType":"MemberAccess","src":"18327:16:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18289:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18345:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18281:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18281:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4622,"nodeType":"ExpressionStatement","src":"18281:106:18"},{"expression":{"arguments":[{"id":4625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"18411:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18404:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4623,"name":"int240","nodeType":"ElementaryTypeName","src":"18404:6:18","typeDescriptions":{}}},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18404:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"functionReturnParameters":4603,"id":4627,"nodeType":"Return","src":"18397:20:18"}]},"documentation":{"id":4597,"nodeType":"StructuredDocumentation","src":"17853:350:18","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4629,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18217:8:18","nodeType":"FunctionDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"value","nameLocation":"18233:5:18","nodeType":"VariableDeclaration","scope":4629,"src":"18226:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4598,"name":"int256","nodeType":"ElementaryTypeName","src":"18226:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18225:14:18"},"returnParameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4629,"src":"18263:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4601,"name":"int240","nodeType":"ElementaryTypeName","src":"18263:6:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18262:8:18"},"scope":5615,"src":"18208:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4661,"nodeType":"Block","src":"18848:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"18866:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18880:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4640,"name":"int232","nodeType":"ElementaryTypeName","src":"18880:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":4639,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18875:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18875:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18888:3:18","memberName":"min","nodeType":"MemberAccess","src":"18875:16:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18866:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"18895:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18909:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4647,"name":"int232","nodeType":"ElementaryTypeName","src":"18909:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":4646,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18904:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18904:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18917:3:18","memberName":"max","nodeType":"MemberAccess","src":"18904:16:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18895:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18866:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18922:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18858:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18858:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4655,"nodeType":"ExpressionStatement","src":"18858:106:18"},{"expression":{"arguments":[{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"18988:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18981:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4656,"name":"int232","nodeType":"ElementaryTypeName","src":"18981:6:18","typeDescriptions":{}}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18981:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"functionReturnParameters":4636,"id":4660,"nodeType":"Return","src":"18974:20:18"}]},"documentation":{"id":4630,"nodeType":"StructuredDocumentation","src":"18430:350:18","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4662,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18794:8:18","nodeType":"FunctionDefinition","parameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4632,"mutability":"mutable","name":"value","nameLocation":"18810:5:18","nodeType":"VariableDeclaration","scope":4662,"src":"18803:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4631,"name":"int256","nodeType":"ElementaryTypeName","src":"18803:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18802:14:18"},"returnParameters":{"id":4636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4662,"src":"18840:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4634,"name":"int232","nodeType":"ElementaryTypeName","src":"18840:6:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18839:8:18"},"scope":5615,"src":"18785:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4694,"nodeType":"Block","src":"19425:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"19443:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19457:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4673,"name":"int224","nodeType":"ElementaryTypeName","src":"19457:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":4672,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19452:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19452:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19465:3:18","memberName":"min","nodeType":"MemberAccess","src":"19452:16:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19443:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"19472:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19486:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4680,"name":"int224","nodeType":"ElementaryTypeName","src":"19486:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":4679,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19481:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19481:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19494:3:18","memberName":"max","nodeType":"MemberAccess","src":"19481:16:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19472:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19443:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19499:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19435:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19435:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4688,"nodeType":"ExpressionStatement","src":"19435:106:18"},{"expression":{"arguments":[{"id":4691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"19565:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19558:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4689,"name":"int224","nodeType":"ElementaryTypeName","src":"19558:6:18","typeDescriptions":{}}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19558:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"functionReturnParameters":4669,"id":4693,"nodeType":"Return","src":"19551:20:18"}]},"documentation":{"id":4663,"nodeType":"StructuredDocumentation","src":"19007:350:18","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":4695,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19371:8:18","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"value","nameLocation":"19387:5:18","nodeType":"VariableDeclaration","scope":4695,"src":"19380:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4664,"name":"int256","nodeType":"ElementaryTypeName","src":"19380:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19379:14:18"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4695,"src":"19417:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4667,"name":"int224","nodeType":"ElementaryTypeName","src":"19417:6:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19416:8:18"},"scope":5615,"src":"19362:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4727,"nodeType":"Block","src":"20002:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"20020:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20034:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4706,"name":"int216","nodeType":"ElementaryTypeName","src":"20034:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":4705,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20029:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20029:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20042:3:18","memberName":"min","nodeType":"MemberAccess","src":"20029:16:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20020:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"20049:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20063:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4713,"name":"int216","nodeType":"ElementaryTypeName","src":"20063:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":4712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20058:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20058:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20071:3:18","memberName":"max","nodeType":"MemberAccess","src":"20058:16:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20049:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20020:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20076:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4703,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20012:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20012:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4721,"nodeType":"ExpressionStatement","src":"20012:106:18"},{"expression":{"arguments":[{"id":4724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"20142:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20135:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4722,"name":"int216","nodeType":"ElementaryTypeName","src":"20135:6:18","typeDescriptions":{}}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20135:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"functionReturnParameters":4702,"id":4726,"nodeType":"Return","src":"20128:20:18"}]},"documentation":{"id":4696,"nodeType":"StructuredDocumentation","src":"19584:350:18","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4728,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19948:8:18","nodeType":"FunctionDefinition","parameters":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4698,"mutability":"mutable","name":"value","nameLocation":"19964:5:18","nodeType":"VariableDeclaration","scope":4728,"src":"19957:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4697,"name":"int256","nodeType":"ElementaryTypeName","src":"19957:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19956:14:18"},"returnParameters":{"id":4702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4728,"src":"19994:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4700,"name":"int216","nodeType":"ElementaryTypeName","src":"19994:6:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19993:8:18"},"scope":5615,"src":"19939:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4760,"nodeType":"Block","src":"20579:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"20597:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20611:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4739,"name":"int208","nodeType":"ElementaryTypeName","src":"20611:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":4738,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20606:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20606:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20619:3:18","memberName":"min","nodeType":"MemberAccess","src":"20606:16:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20597:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"20626:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20640:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4746,"name":"int208","nodeType":"ElementaryTypeName","src":"20640:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":4745,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20635:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20635:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20648:3:18","memberName":"max","nodeType":"MemberAccess","src":"20635:16:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20626:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20597:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20653:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4736,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20589:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20589:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4754,"nodeType":"ExpressionStatement","src":"20589:106:18"},{"expression":{"arguments":[{"id":4757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"20719:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20712:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4755,"name":"int208","nodeType":"ElementaryTypeName","src":"20712:6:18","typeDescriptions":{}}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20712:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"functionReturnParameters":4735,"id":4759,"nodeType":"Return","src":"20705:20:18"}]},"documentation":{"id":4729,"nodeType":"StructuredDocumentation","src":"20161:350:18","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4761,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20525:8:18","nodeType":"FunctionDefinition","parameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"value","nameLocation":"20541:5:18","nodeType":"VariableDeclaration","scope":4761,"src":"20534:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4730,"name":"int256","nodeType":"ElementaryTypeName","src":"20534:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20533:14:18"},"returnParameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4761,"src":"20571:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4733,"name":"int208","nodeType":"ElementaryTypeName","src":"20571:6:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20570:8:18"},"scope":5615,"src":"20516:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4793,"nodeType":"Block","src":"21156:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"21174:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21188:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4772,"name":"int200","nodeType":"ElementaryTypeName","src":"21188:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":4771,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21183:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21183:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21196:3:18","memberName":"min","nodeType":"MemberAccess","src":"21183:16:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21174:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"21203:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21217:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4779,"name":"int200","nodeType":"ElementaryTypeName","src":"21217:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":4778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21212:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21212:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21225:3:18","memberName":"max","nodeType":"MemberAccess","src":"21212:16:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21203:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21174:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21230:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4769,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21166:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21166:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4787,"nodeType":"ExpressionStatement","src":"21166:106:18"},{"expression":{"arguments":[{"id":4790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"21296:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21289:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4788,"name":"int200","nodeType":"ElementaryTypeName","src":"21289:6:18","typeDescriptions":{}}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21289:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"functionReturnParameters":4768,"id":4792,"nodeType":"Return","src":"21282:20:18"}]},"documentation":{"id":4762,"nodeType":"StructuredDocumentation","src":"20738:350:18","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4794,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21102:8:18","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4764,"mutability":"mutable","name":"value","nameLocation":"21118:5:18","nodeType":"VariableDeclaration","scope":4794,"src":"21111:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4763,"name":"int256","nodeType":"ElementaryTypeName","src":"21111:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21110:14:18"},"returnParameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4794,"src":"21148:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4766,"name":"int200","nodeType":"ElementaryTypeName","src":"21148:6:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21147:8:18"},"scope":5615,"src":"21093:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4826,"nodeType":"Block","src":"21733:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"21751:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21765:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4805,"name":"int192","nodeType":"ElementaryTypeName","src":"21765:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":4804,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21760:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21760:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21773:3:18","memberName":"min","nodeType":"MemberAccess","src":"21760:16:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21751:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"21780:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21794:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4812,"name":"int192","nodeType":"ElementaryTypeName","src":"21794:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":4811,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21789:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21789:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21802:3:18","memberName":"max","nodeType":"MemberAccess","src":"21789:16:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21780:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21751:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21807:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21743:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21743:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4820,"nodeType":"ExpressionStatement","src":"21743:106:18"},{"expression":{"arguments":[{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"21873:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21866:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4821,"name":"int192","nodeType":"ElementaryTypeName","src":"21866:6:18","typeDescriptions":{}}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21866:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"functionReturnParameters":4801,"id":4825,"nodeType":"Return","src":"21859:20:18"}]},"documentation":{"id":4795,"nodeType":"StructuredDocumentation","src":"21315:350:18","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4827,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21679:8:18","nodeType":"FunctionDefinition","parameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"value","nameLocation":"21695:5:18","nodeType":"VariableDeclaration","scope":4827,"src":"21688:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4796,"name":"int256","nodeType":"ElementaryTypeName","src":"21688:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21687:14:18"},"returnParameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4827,"src":"21725:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4799,"name":"int192","nodeType":"ElementaryTypeName","src":"21725:6:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21724:8:18"},"scope":5615,"src":"21670:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4859,"nodeType":"Block","src":"22310:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"22328:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22342:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4838,"name":"int184","nodeType":"ElementaryTypeName","src":"22342:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":4837,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22337:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22337:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22350:3:18","memberName":"min","nodeType":"MemberAccess","src":"22337:16:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22328:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"22357:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22371:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4845,"name":"int184","nodeType":"ElementaryTypeName","src":"22371:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":4844,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22366:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22366:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22379:3:18","memberName":"max","nodeType":"MemberAccess","src":"22366:16:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22357:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22328:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22384:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22320:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22320:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4853,"nodeType":"ExpressionStatement","src":"22320:106:18"},{"expression":{"arguments":[{"id":4856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"22450:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22443:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4854,"name":"int184","nodeType":"ElementaryTypeName","src":"22443:6:18","typeDescriptions":{}}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22443:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"functionReturnParameters":4834,"id":4858,"nodeType":"Return","src":"22436:20:18"}]},"documentation":{"id":4828,"nodeType":"StructuredDocumentation","src":"21892:350:18","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4860,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22256:8:18","nodeType":"FunctionDefinition","parameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"value","nameLocation":"22272:5:18","nodeType":"VariableDeclaration","scope":4860,"src":"22265:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4829,"name":"int256","nodeType":"ElementaryTypeName","src":"22265:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22264:14:18"},"returnParameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4860,"src":"22302:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4832,"name":"int184","nodeType":"ElementaryTypeName","src":"22302:6:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22301:8:18"},"scope":5615,"src":"22247:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4892,"nodeType":"Block","src":"22887:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"22905:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22919:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4871,"name":"int176","nodeType":"ElementaryTypeName","src":"22919:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":4870,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22914:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22914:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22927:3:18","memberName":"min","nodeType":"MemberAccess","src":"22914:16:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22905:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"22934:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22948:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4878,"name":"int176","nodeType":"ElementaryTypeName","src":"22948:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":4877,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22943:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22943:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22956:3:18","memberName":"max","nodeType":"MemberAccess","src":"22943:16:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22934:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22905:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22961:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4868,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22897:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22897:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4886,"nodeType":"ExpressionStatement","src":"22897:106:18"},{"expression":{"arguments":[{"id":4889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"23027:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23020:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4887,"name":"int176","nodeType":"ElementaryTypeName","src":"23020:6:18","typeDescriptions":{}}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23020:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"functionReturnParameters":4867,"id":4891,"nodeType":"Return","src":"23013:20:18"}]},"documentation":{"id":4861,"nodeType":"StructuredDocumentation","src":"22469:350:18","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4893,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22833:8:18","nodeType":"FunctionDefinition","parameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"value","nameLocation":"22849:5:18","nodeType":"VariableDeclaration","scope":4893,"src":"22842:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4862,"name":"int256","nodeType":"ElementaryTypeName","src":"22842:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22841:14:18"},"returnParameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4893,"src":"22879:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4865,"name":"int176","nodeType":"ElementaryTypeName","src":"22879:6:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22878:8:18"},"scope":5615,"src":"22824:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4925,"nodeType":"Block","src":"23464:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"23482:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23496:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4904,"name":"int168","nodeType":"ElementaryTypeName","src":"23496:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":4903,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23491:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23491:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23504:3:18","memberName":"min","nodeType":"MemberAccess","src":"23491:16:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23482:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"23511:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23525:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4911,"name":"int168","nodeType":"ElementaryTypeName","src":"23525:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":4910,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23520:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23520:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23533:3:18","memberName":"max","nodeType":"MemberAccess","src":"23520:16:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23511:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23482:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23538:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4901,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23474:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23474:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4919,"nodeType":"ExpressionStatement","src":"23474:106:18"},{"expression":{"arguments":[{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"23604:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23597:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4920,"name":"int168","nodeType":"ElementaryTypeName","src":"23597:6:18","typeDescriptions":{}}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23597:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"functionReturnParameters":4900,"id":4924,"nodeType":"Return","src":"23590:20:18"}]},"documentation":{"id":4894,"nodeType":"StructuredDocumentation","src":"23046:350:18","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4926,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23410:8:18","nodeType":"FunctionDefinition","parameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"value","nameLocation":"23426:5:18","nodeType":"VariableDeclaration","scope":4926,"src":"23419:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4895,"name":"int256","nodeType":"ElementaryTypeName","src":"23419:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23418:14:18"},"returnParameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4926,"src":"23456:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4898,"name":"int168","nodeType":"ElementaryTypeName","src":"23456:6:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23455:8:18"},"scope":5615,"src":"23401:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4958,"nodeType":"Block","src":"24041:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"24059:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24073:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4937,"name":"int160","nodeType":"ElementaryTypeName","src":"24073:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":4936,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24068:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24068:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24081:3:18","memberName":"min","nodeType":"MemberAccess","src":"24068:16:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24059:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"24088:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24102:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4944,"name":"int160","nodeType":"ElementaryTypeName","src":"24102:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":4943,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24097:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24097:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24110:3:18","memberName":"max","nodeType":"MemberAccess","src":"24097:16:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24088:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24059:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24115:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24051:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24051:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4952,"nodeType":"ExpressionStatement","src":"24051:106:18"},{"expression":{"arguments":[{"id":4955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"24181:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24174:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4953,"name":"int160","nodeType":"ElementaryTypeName","src":"24174:6:18","typeDescriptions":{}}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24174:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"functionReturnParameters":4933,"id":4957,"nodeType":"Return","src":"24167:20:18"}]},"documentation":{"id":4927,"nodeType":"StructuredDocumentation","src":"23623:350:18","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4959,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23987:8:18","nodeType":"FunctionDefinition","parameters":{"id":4930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4929,"mutability":"mutable","name":"value","nameLocation":"24003:5:18","nodeType":"VariableDeclaration","scope":4959,"src":"23996:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4928,"name":"int256","nodeType":"ElementaryTypeName","src":"23996:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23995:14:18"},"returnParameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4959,"src":"24033:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4931,"name":"int160","nodeType":"ElementaryTypeName","src":"24033:6:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"24032:8:18"},"scope":5615,"src":"23978:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4991,"nodeType":"Block","src":"24618:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"24636:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24650:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4970,"name":"int152","nodeType":"ElementaryTypeName","src":"24650:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":4969,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24645:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24645:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24658:3:18","memberName":"min","nodeType":"MemberAccess","src":"24645:16:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24636:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"24665:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24679:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4977,"name":"int152","nodeType":"ElementaryTypeName","src":"24679:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":4976,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24674:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24674:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24687:3:18","memberName":"max","nodeType":"MemberAccess","src":"24674:16:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24665:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24636:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24692:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24628:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24628:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4985,"nodeType":"ExpressionStatement","src":"24628:106:18"},{"expression":{"arguments":[{"id":4988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"24758:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24751:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4986,"name":"int152","nodeType":"ElementaryTypeName","src":"24751:6:18","typeDescriptions":{}}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24751:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"functionReturnParameters":4966,"id":4990,"nodeType":"Return","src":"24744:20:18"}]},"documentation":{"id":4960,"nodeType":"StructuredDocumentation","src":"24200:350:18","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4992,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24564:8:18","nodeType":"FunctionDefinition","parameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"value","nameLocation":"24580:5:18","nodeType":"VariableDeclaration","scope":4992,"src":"24573:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4961,"name":"int256","nodeType":"ElementaryTypeName","src":"24573:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24572:14:18"},"returnParameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4992,"src":"24610:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4964,"name":"int152","nodeType":"ElementaryTypeName","src":"24610:6:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24609:8:18"},"scope":5615,"src":"24555:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5024,"nodeType":"Block","src":"25195:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"25213:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25227:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5003,"name":"int144","nodeType":"ElementaryTypeName","src":"25227:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":5002,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25222:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25222:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25235:3:18","memberName":"min","nodeType":"MemberAccess","src":"25222:16:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25213:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"25242:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25256:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5010,"name":"int144","nodeType":"ElementaryTypeName","src":"25256:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":5009,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25251:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25251:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25264:3:18","memberName":"max","nodeType":"MemberAccess","src":"25251:16:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25242:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25213:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25269:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5000,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25205:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25205:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5018,"nodeType":"ExpressionStatement","src":"25205:106:18"},{"expression":{"arguments":[{"id":5021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"25335:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25328:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5019,"name":"int144","nodeType":"ElementaryTypeName","src":"25328:6:18","typeDescriptions":{}}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25328:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"functionReturnParameters":4999,"id":5023,"nodeType":"Return","src":"25321:20:18"}]},"documentation":{"id":4993,"nodeType":"StructuredDocumentation","src":"24777:350:18","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5025,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25141:8:18","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"value","nameLocation":"25157:5:18","nodeType":"VariableDeclaration","scope":5025,"src":"25150:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4994,"name":"int256","nodeType":"ElementaryTypeName","src":"25150:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25149:14:18"},"returnParameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5025,"src":"25187:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4997,"name":"int144","nodeType":"ElementaryTypeName","src":"25187:6:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25186:8:18"},"scope":5615,"src":"25132:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5057,"nodeType":"Block","src":"25772:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"25790:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25804:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5036,"name":"int136","nodeType":"ElementaryTypeName","src":"25804:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":5035,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25799:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25799:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25812:3:18","memberName":"min","nodeType":"MemberAccess","src":"25799:16:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25790:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"25819:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25833:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5043,"name":"int136","nodeType":"ElementaryTypeName","src":"25833:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":5042,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25828:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25828:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25841:3:18","memberName":"max","nodeType":"MemberAccess","src":"25828:16:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25819:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25790:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25846:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25782:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25782:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5051,"nodeType":"ExpressionStatement","src":"25782:106:18"},{"expression":{"arguments":[{"id":5054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"25912:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25905:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5052,"name":"int136","nodeType":"ElementaryTypeName","src":"25905:6:18","typeDescriptions":{}}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25905:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"functionReturnParameters":5032,"id":5056,"nodeType":"Return","src":"25898:20:18"}]},"documentation":{"id":5026,"nodeType":"StructuredDocumentation","src":"25354:350:18","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25718:8:18","nodeType":"FunctionDefinition","parameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5028,"mutability":"mutable","name":"value","nameLocation":"25734:5:18","nodeType":"VariableDeclaration","scope":5058,"src":"25727:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5027,"name":"int256","nodeType":"ElementaryTypeName","src":"25727:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25726:14:18"},"returnParameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5058,"src":"25764:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5030,"name":"int136","nodeType":"ElementaryTypeName","src":"25764:6:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25763:8:18"},"scope":5615,"src":"25709:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5090,"nodeType":"Block","src":"26349:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"26367:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26381:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5069,"name":"int128","nodeType":"ElementaryTypeName","src":"26381:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":5068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26376:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26376:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26389:3:18","memberName":"min","nodeType":"MemberAccess","src":"26376:16:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26367:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"26396:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26410:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5076,"name":"int128","nodeType":"ElementaryTypeName","src":"26410:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":5075,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26405:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26405:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26418:3:18","memberName":"max","nodeType":"MemberAccess","src":"26405:16:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26396:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26367:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26423:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26359:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26359:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5084,"nodeType":"ExpressionStatement","src":"26359:106:18"},{"expression":{"arguments":[{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"26489:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26482:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5085,"name":"int128","nodeType":"ElementaryTypeName","src":"26482:6:18","typeDescriptions":{}}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26482:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":5065,"id":5089,"nodeType":"Return","src":"26475:20:18"}]},"documentation":{"id":5059,"nodeType":"StructuredDocumentation","src":"25931:350:18","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":5091,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26295:8:18","nodeType":"FunctionDefinition","parameters":{"id":5062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5061,"mutability":"mutable","name":"value","nameLocation":"26311:5:18","nodeType":"VariableDeclaration","scope":5091,"src":"26304:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5060,"name":"int256","nodeType":"ElementaryTypeName","src":"26304:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26303:14:18"},"returnParameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5091,"src":"26341:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5063,"name":"int128","nodeType":"ElementaryTypeName","src":"26341:6:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26340:8:18"},"scope":5615,"src":"26286:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5123,"nodeType":"Block","src":"26926:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"26944:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26958:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5102,"name":"int120","nodeType":"ElementaryTypeName","src":"26958:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":5101,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26953:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26953:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26966:3:18","memberName":"min","nodeType":"MemberAccess","src":"26953:16:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26944:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"26973:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26987:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5109,"name":"int120","nodeType":"ElementaryTypeName","src":"26987:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":5108,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26982:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26982:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26995:3:18","memberName":"max","nodeType":"MemberAccess","src":"26982:16:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26973:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26944:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27000:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5099,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26936:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26936:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5117,"nodeType":"ExpressionStatement","src":"26936:106:18"},{"expression":{"arguments":[{"id":5120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"27066:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27059:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5118,"name":"int120","nodeType":"ElementaryTypeName","src":"27059:6:18","typeDescriptions":{}}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27059:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"functionReturnParameters":5098,"id":5122,"nodeType":"Return","src":"27052:20:18"}]},"documentation":{"id":5092,"nodeType":"StructuredDocumentation","src":"26508:350:18","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5124,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26872:8:18","nodeType":"FunctionDefinition","parameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"value","nameLocation":"26888:5:18","nodeType":"VariableDeclaration","scope":5124,"src":"26881:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5093,"name":"int256","nodeType":"ElementaryTypeName","src":"26881:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26880:14:18"},"returnParameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5124,"src":"26918:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5096,"name":"int120","nodeType":"ElementaryTypeName","src":"26918:6:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26917:8:18"},"scope":5615,"src":"26863:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5156,"nodeType":"Block","src":"27503:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"27521:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27535:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5135,"name":"int112","nodeType":"ElementaryTypeName","src":"27535:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":5134,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27530:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27530:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27543:3:18","memberName":"min","nodeType":"MemberAccess","src":"27530:16:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27521:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"27550:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27564:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5142,"name":"int112","nodeType":"ElementaryTypeName","src":"27564:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":5141,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27559:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27559:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27572:3:18","memberName":"max","nodeType":"MemberAccess","src":"27559:16:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27550:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27521:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27577:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27513:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27513:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5150,"nodeType":"ExpressionStatement","src":"27513:106:18"},{"expression":{"arguments":[{"id":5153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"27643:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27636:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5151,"name":"int112","nodeType":"ElementaryTypeName","src":"27636:6:18","typeDescriptions":{}}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27636:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"functionReturnParameters":5131,"id":5155,"nodeType":"Return","src":"27629:20:18"}]},"documentation":{"id":5125,"nodeType":"StructuredDocumentation","src":"27085:350:18","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5157,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27449:8:18","nodeType":"FunctionDefinition","parameters":{"id":5128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5127,"mutability":"mutable","name":"value","nameLocation":"27465:5:18","nodeType":"VariableDeclaration","scope":5157,"src":"27458:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5126,"name":"int256","nodeType":"ElementaryTypeName","src":"27458:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27457:14:18"},"returnParameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5157,"src":"27495:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5129,"name":"int112","nodeType":"ElementaryTypeName","src":"27495:6:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27494:8:18"},"scope":5615,"src":"27440:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5189,"nodeType":"Block","src":"28080:153:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"28098:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28112:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5168,"name":"int104","nodeType":"ElementaryTypeName","src":"28112:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":5167,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28107:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28107:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28120:3:18","memberName":"min","nodeType":"MemberAccess","src":"28107:16:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28098:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"28127:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28141:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5175,"name":"int104","nodeType":"ElementaryTypeName","src":"28141:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":5174,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28136:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28136:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28149:3:18","memberName":"max","nodeType":"MemberAccess","src":"28136:16:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28127:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28098:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28154:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28090:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28090:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5183,"nodeType":"ExpressionStatement","src":"28090:106:18"},{"expression":{"arguments":[{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"28220:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28213:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5184,"name":"int104","nodeType":"ElementaryTypeName","src":"28213:6:18","typeDescriptions":{}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28213:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"functionReturnParameters":5164,"id":5188,"nodeType":"Return","src":"28206:20:18"}]},"documentation":{"id":5158,"nodeType":"StructuredDocumentation","src":"27662:350:18","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5190,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"28026:8:18","nodeType":"FunctionDefinition","parameters":{"id":5161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5160,"mutability":"mutable","name":"value","nameLocation":"28042:5:18","nodeType":"VariableDeclaration","scope":5190,"src":"28035:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5159,"name":"int256","nodeType":"ElementaryTypeName","src":"28035:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28034:14:18"},"returnParameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5190,"src":"28072:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5162,"name":"int104","nodeType":"ElementaryTypeName","src":"28072:6:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"28071:8:18"},"scope":5615,"src":"28017:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5222,"nodeType":"Block","src":"28650:149:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"28668:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28682:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5201,"name":"int96","nodeType":"ElementaryTypeName","src":"28682:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":5200,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28677:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28677:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28689:3:18","memberName":"min","nodeType":"MemberAccess","src":"28677:15:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28668:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"28696:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28710:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5208,"name":"int96","nodeType":"ElementaryTypeName","src":"28710:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":5207,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28705:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28705:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28717:3:18","memberName":"max","nodeType":"MemberAccess","src":"28705:15:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28696:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28668:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28722:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28660:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28660:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5216,"nodeType":"ExpressionStatement","src":"28660:103:18"},{"expression":{"arguments":[{"id":5219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"28786:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28780:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5217,"name":"int96","nodeType":"ElementaryTypeName","src":"28780:5:18","typeDescriptions":{}}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28780:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"functionReturnParameters":5197,"id":5221,"nodeType":"Return","src":"28773:19:18"}]},"documentation":{"id":5191,"nodeType":"StructuredDocumentation","src":"28239:345:18","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":5223,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28598:7:18","nodeType":"FunctionDefinition","parameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5193,"mutability":"mutable","name":"value","nameLocation":"28613:5:18","nodeType":"VariableDeclaration","scope":5223,"src":"28606:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5192,"name":"int256","nodeType":"ElementaryTypeName","src":"28606:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28605:14:18"},"returnParameters":{"id":5197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5223,"src":"28643:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5195,"name":"int96","nodeType":"ElementaryTypeName","src":"28643:5:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28642:7:18"},"scope":5615,"src":"28589:210:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5255,"nodeType":"Block","src":"29216:149:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"29234:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29248:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5234,"name":"int88","nodeType":"ElementaryTypeName","src":"29248:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":5233,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29243:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29243:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29255:3:18","memberName":"min","nodeType":"MemberAccess","src":"29243:15:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29234:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"29262:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29276:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5241,"name":"int88","nodeType":"ElementaryTypeName","src":"29276:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":5240,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29271:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29271:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29283:3:18","memberName":"max","nodeType":"MemberAccess","src":"29271:15:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29262:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29234:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29288:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29226:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29226:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5249,"nodeType":"ExpressionStatement","src":"29226:103:18"},{"expression":{"arguments":[{"id":5252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"29352:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29346:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5250,"name":"int88","nodeType":"ElementaryTypeName","src":"29346:5:18","typeDescriptions":{}}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29346:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"functionReturnParameters":5230,"id":5254,"nodeType":"Return","src":"29339:19:18"}]},"documentation":{"id":5224,"nodeType":"StructuredDocumentation","src":"28805:345:18","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5256,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"29164:7:18","nodeType":"FunctionDefinition","parameters":{"id":5227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5226,"mutability":"mutable","name":"value","nameLocation":"29179:5:18","nodeType":"VariableDeclaration","scope":5256,"src":"29172:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5225,"name":"int256","nodeType":"ElementaryTypeName","src":"29172:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29171:14:18"},"returnParameters":{"id":5230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5256,"src":"29209:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5228,"name":"int88","nodeType":"ElementaryTypeName","src":"29209:5:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"29208:7:18"},"scope":5615,"src":"29155:210:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5288,"nodeType":"Block","src":"29782:149:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"29800:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29814:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5267,"name":"int80","nodeType":"ElementaryTypeName","src":"29814:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":5266,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29809:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29809:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29821:3:18","memberName":"min","nodeType":"MemberAccess","src":"29809:15:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29800:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"29828:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29842:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5274,"name":"int80","nodeType":"ElementaryTypeName","src":"29842:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":5273,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29837:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29837:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29849:3:18","memberName":"max","nodeType":"MemberAccess","src":"29837:15:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29828:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29800:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29854:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5264,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29792:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29792:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5282,"nodeType":"ExpressionStatement","src":"29792:103:18"},{"expression":{"arguments":[{"id":5285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"29918:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29912:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5283,"name":"int80","nodeType":"ElementaryTypeName","src":"29912:5:18","typeDescriptions":{}}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29912:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"functionReturnParameters":5263,"id":5287,"nodeType":"Return","src":"29905:19:18"}]},"documentation":{"id":5257,"nodeType":"StructuredDocumentation","src":"29371:345:18","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5289,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29730:7:18","nodeType":"FunctionDefinition","parameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"value","nameLocation":"29745:5:18","nodeType":"VariableDeclaration","scope":5289,"src":"29738:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5258,"name":"int256","nodeType":"ElementaryTypeName","src":"29738:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29737:14:18"},"returnParameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5289,"src":"29775:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5261,"name":"int80","nodeType":"ElementaryTypeName","src":"29775:5:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29774:7:18"},"scope":5615,"src":"29721:210:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5321,"nodeType":"Block","src":"30348:149:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"30366:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30380:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5300,"name":"int72","nodeType":"ElementaryTypeName","src":"30380:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":5299,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30375:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30375:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30387:3:18","memberName":"min","nodeType":"MemberAccess","src":"30375:15:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30366:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"30394:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30408:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5307,"name":"int72","nodeType":"ElementaryTypeName","src":"30408:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":5306,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30403:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30403:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30415:3:18","memberName":"max","nodeType":"MemberAccess","src":"30403:15:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30394:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30366:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30420:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30358:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30358:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5315,"nodeType":"ExpressionStatement","src":"30358:103:18"},{"expression":{"arguments":[{"id":5318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"30484:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30478:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5316,"name":"int72","nodeType":"ElementaryTypeName","src":"30478:5:18","typeDescriptions":{}}},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30478:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"functionReturnParameters":5296,"id":5320,"nodeType":"Return","src":"30471:19:18"}]},"documentation":{"id":5290,"nodeType":"StructuredDocumentation","src":"29937:345:18","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5322,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30296:7:18","nodeType":"FunctionDefinition","parameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"value","nameLocation":"30311:5:18","nodeType":"VariableDeclaration","scope":5322,"src":"30304:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5291,"name":"int256","nodeType":"ElementaryTypeName","src":"30304:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30303:14:18"},"returnParameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5322,"src":"30341:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5294,"name":"int72","nodeType":"ElementaryTypeName","src":"30341:5:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30340:7:18"},"scope":5615,"src":"30287:210:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5354,"nodeType":"Block","src":"30914:149:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"30932:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30946:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5333,"name":"int64","nodeType":"ElementaryTypeName","src":"30946:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":5332,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30941:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30941:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30953:3:18","memberName":"min","nodeType":"MemberAccess","src":"30941:15:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30932:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"30960:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30974:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5340,"name":"int64","nodeType":"ElementaryTypeName","src":"30974:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":5339,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30969:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30969:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30981:3:18","memberName":"max","nodeType":"MemberAccess","src":"30969:15:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30960:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30932:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30986:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5330,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30924:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30924:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5348,"nodeType":"ExpressionStatement","src":"30924:103:18"},{"expression":{"arguments":[{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"31050:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31044:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5349,"name":"int64","nodeType":"ElementaryTypeName","src":"31044:5:18","typeDescriptions":{}}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31044:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"functionReturnParameters":5329,"id":5353,"nodeType":"Return","src":"31037:19:18"}]},"documentation":{"id":5323,"nodeType":"StructuredDocumentation","src":"30503:345:18","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":5355,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30862:7:18","nodeType":"FunctionDefinition","parameters":{"id":5326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"value","nameLocation":"30877:5:18","nodeType":"VariableDeclaration","scope":5355,"src":"30870:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5324,"name":"int256","nodeType":"ElementaryTypeName","src":"30870:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30869:14:18"},"returnParameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5355,"src":"30907:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5327,"name":"int64","nodeType":"ElementaryTypeName","src":"30907:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30906:7:18"},"scope":5615,"src":"30853:210:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5387,"nodeType":"Block","src":"31480:149:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"31498:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31512:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5366,"name":"int56","nodeType":"ElementaryTypeName","src":"31512:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":5365,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31507:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31507:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31519:3:18","memberName":"min","nodeType":"MemberAccess","src":"31507:15:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31498:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"31526:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31540:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5373,"name":"int56","nodeType":"ElementaryTypeName","src":"31540:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":5372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31535:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31535:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31547:3:18","memberName":"max","nodeType":"MemberAccess","src":"31535:15:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31526:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31498:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31552:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31490:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31490:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5381,"nodeType":"ExpressionStatement","src":"31490:103:18"},{"expression":{"arguments":[{"id":5384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"31616:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31610:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5382,"name":"int56","nodeType":"ElementaryTypeName","src":"31610:5:18","typeDescriptions":{}}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31610:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"functionReturnParameters":5362,"id":5386,"nodeType":"Return","src":"31603:19:18"}]},"documentation":{"id":5356,"nodeType":"StructuredDocumentation","src":"31069:345:18","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5388,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31428:7:18","nodeType":"FunctionDefinition","parameters":{"id":5359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"mutability":"mutable","name":"value","nameLocation":"31443:5:18","nodeType":"VariableDeclaration","scope":5388,"src":"31436:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5357,"name":"int256","nodeType":"ElementaryTypeName","src":"31436:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31435:14:18"},"returnParameters":{"id":5362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5388,"src":"31473:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5360,"name":"int56","nodeType":"ElementaryTypeName","src":"31473:5:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31472:7:18"},"scope":5615,"src":"31419:210:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5420,"nodeType":"Block","src":"32046:149:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"32064:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32078:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5399,"name":"int48","nodeType":"ElementaryTypeName","src":"32078:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":5398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32073:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32073:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32085:3:18","memberName":"min","nodeType":"MemberAccess","src":"32073:15:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32064:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"32092:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32106:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5406,"name":"int48","nodeType":"ElementaryTypeName","src":"32106:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":5405,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32101:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32101:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32113:3:18","memberName":"max","nodeType":"MemberAccess","src":"32101:15:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32092:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32064:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32118:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32056:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32056:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5414,"nodeType":"ExpressionStatement","src":"32056:103:18"},{"expression":{"arguments":[{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"32182:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32176:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5415,"name":"int48","nodeType":"ElementaryTypeName","src":"32176:5:18","typeDescriptions":{}}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32176:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"functionReturnParameters":5395,"id":5419,"nodeType":"Return","src":"32169:19:18"}]},"documentation":{"id":5389,"nodeType":"StructuredDocumentation","src":"31635:345:18","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5421,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31994:7:18","nodeType":"FunctionDefinition","parameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"value","nameLocation":"32009:5:18","nodeType":"VariableDeclaration","scope":5421,"src":"32002:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5390,"name":"int256","nodeType":"ElementaryTypeName","src":"32002:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32001:14:18"},"returnParameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5421,"src":"32039:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5393,"name":"int48","nodeType":"ElementaryTypeName","src":"32039:5:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"32038:7:18"},"scope":5615,"src":"31985:210:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5453,"nodeType":"Block","src":"32612:149:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"32630:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32644:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5432,"name":"int40","nodeType":"ElementaryTypeName","src":"32644:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":5431,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32639:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32639:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32651:3:18","memberName":"min","nodeType":"MemberAccess","src":"32639:15:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32630:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"32658:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32672:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5439,"name":"int40","nodeType":"ElementaryTypeName","src":"32672:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":5438,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32667:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32667:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32679:3:18","memberName":"max","nodeType":"MemberAccess","src":"32667:15:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32658:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32630:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32684:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32622:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32622:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5447,"nodeType":"ExpressionStatement","src":"32622:103:18"},{"expression":{"arguments":[{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"32748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32742:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5448,"name":"int40","nodeType":"ElementaryTypeName","src":"32742:5:18","typeDescriptions":{}}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32742:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"functionReturnParameters":5428,"id":5452,"nodeType":"Return","src":"32735:19:18"}]},"documentation":{"id":5422,"nodeType":"StructuredDocumentation","src":"32201:345:18","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5454,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32560:7:18","nodeType":"FunctionDefinition","parameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"value","nameLocation":"32575:5:18","nodeType":"VariableDeclaration","scope":5454,"src":"32568:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5423,"name":"int256","nodeType":"ElementaryTypeName","src":"32568:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32567:14:18"},"returnParameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5454,"src":"32605:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5426,"name":"int40","nodeType":"ElementaryTypeName","src":"32605:5:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32604:7:18"},"scope":5615,"src":"32551:210:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5486,"nodeType":"Block","src":"33178:149:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"33196:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33210:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5465,"name":"int32","nodeType":"ElementaryTypeName","src":"33210:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":5464,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33205:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33205:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33217:3:18","memberName":"min","nodeType":"MemberAccess","src":"33205:15:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33196:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"33224:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33238:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5472,"name":"int32","nodeType":"ElementaryTypeName","src":"33238:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":5471,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33233:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33233:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":5475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33245:3:18","memberName":"max","nodeType":"MemberAccess","src":"33233:15:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33224:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33196:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33250:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33188:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33188:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5480,"nodeType":"ExpressionStatement","src":"33188:103:18"},{"expression":{"arguments":[{"id":5483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"33314:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33308:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5481,"name":"int32","nodeType":"ElementaryTypeName","src":"33308:5:18","typeDescriptions":{}}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33308:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"functionReturnParameters":5461,"id":5485,"nodeType":"Return","src":"33301:19:18"}]},"documentation":{"id":5455,"nodeType":"StructuredDocumentation","src":"32767:345:18","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":5487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"33126:7:18","nodeType":"FunctionDefinition","parameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"value","nameLocation":"33141:5:18","nodeType":"VariableDeclaration","scope":5487,"src":"33134:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5456,"name":"int256","nodeType":"ElementaryTypeName","src":"33134:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33133:14:18"},"returnParameters":{"id":5461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5487,"src":"33171:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5459,"name":"int32","nodeType":"ElementaryTypeName","src":"33171:5:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"33170:7:18"},"scope":5615,"src":"33117:210:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5519,"nodeType":"Block","src":"33744:149:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"33762:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33776:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5498,"name":"int24","nodeType":"ElementaryTypeName","src":"33776:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":5497,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33771:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33771:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33783:3:18","memberName":"min","nodeType":"MemberAccess","src":"33771:15:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33762:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"33790:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33804:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5505,"name":"int24","nodeType":"ElementaryTypeName","src":"33804:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":5504,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33799:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33799:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33811:3:18","memberName":"max","nodeType":"MemberAccess","src":"33799:15:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33790:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33762:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33816:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33754:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33754:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5513,"nodeType":"ExpressionStatement","src":"33754:103:18"},{"expression":{"arguments":[{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"33880:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33874:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5514,"name":"int24","nodeType":"ElementaryTypeName","src":"33874:5:18","typeDescriptions":{}}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33874:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"functionReturnParameters":5494,"id":5518,"nodeType":"Return","src":"33867:19:18"}]},"documentation":{"id":5488,"nodeType":"StructuredDocumentation","src":"33333:345:18","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5520,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33692:7:18","nodeType":"FunctionDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"value","nameLocation":"33707:5:18","nodeType":"VariableDeclaration","scope":5520,"src":"33700:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5489,"name":"int256","nodeType":"ElementaryTypeName","src":"33700:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33699:14:18"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5520,"src":"33737:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5492,"name":"int24","nodeType":"ElementaryTypeName","src":"33737:5:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33736:7:18"},"scope":5615,"src":"33683:210:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5552,"nodeType":"Block","src":"34310:149:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"34328:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34342:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5531,"name":"int16","nodeType":"ElementaryTypeName","src":"34342:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":5530,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34337:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34337:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34349:3:18","memberName":"min","nodeType":"MemberAccess","src":"34337:15:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34328:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"34356:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34370:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5538,"name":"int16","nodeType":"ElementaryTypeName","src":"34370:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":5537,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34365:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34365:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":5541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34377:3:18","memberName":"max","nodeType":"MemberAccess","src":"34365:15:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34356:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34328:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34382:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34320:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34320:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5546,"nodeType":"ExpressionStatement","src":"34320:103:18"},{"expression":{"arguments":[{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"34446:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34440:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5547,"name":"int16","nodeType":"ElementaryTypeName","src":"34440:5:18","typeDescriptions":{}}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34440:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"functionReturnParameters":5527,"id":5551,"nodeType":"Return","src":"34433:19:18"}]},"documentation":{"id":5521,"nodeType":"StructuredDocumentation","src":"33899:345:18","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":5553,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"34258:7:18","nodeType":"FunctionDefinition","parameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"value","nameLocation":"34273:5:18","nodeType":"VariableDeclaration","scope":5553,"src":"34266:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5522,"name":"int256","nodeType":"ElementaryTypeName","src":"34266:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34265:14:18"},"returnParameters":{"id":5527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5553,"src":"34303:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5525,"name":"int16","nodeType":"ElementaryTypeName","src":"34303:5:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"34302:7:18"},"scope":5615,"src":"34249:210:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5585,"nodeType":"Block","src":"34869:145:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"34887:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34901:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5564,"name":"int8","nodeType":"ElementaryTypeName","src":"34901:4:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":5563,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34896:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34896:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34907:3:18","memberName":"min","nodeType":"MemberAccess","src":"34896:14:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34887:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"34914:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34928:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5571,"name":"int8","nodeType":"ElementaryTypeName","src":"34928:4:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":5570,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34923:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34923:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34934:3:18","memberName":"max","nodeType":"MemberAccess","src":"34923:14:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34914:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34887:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34939:39:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5561,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34879:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34879:100:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5579,"nodeType":"ExpressionStatement","src":"34879:100:18"},{"expression":{"arguments":[{"id":5582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"35001:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34996:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5580,"name":"int8","nodeType":"ElementaryTypeName","src":"34996:4:18","typeDescriptions":{}}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34996:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"functionReturnParameters":5560,"id":5584,"nodeType":"Return","src":"34989:18:18"}]},"documentation":{"id":5554,"nodeType":"StructuredDocumentation","src":"34465:340:18","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":5586,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34819:6:18","nodeType":"FunctionDefinition","parameters":{"id":5557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"value","nameLocation":"34833:5:18","nodeType":"VariableDeclaration","scope":5586,"src":"34826:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5555,"name":"int256","nodeType":"ElementaryTypeName","src":"34826:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34825:14:18"},"returnParameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5586,"src":"34863:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5558,"name":"int8","nodeType":"ElementaryTypeName","src":"34863:4:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34862:6:18"},"scope":5615,"src":"34810:204:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5613,"nodeType":"Block","src":"35292:233:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"35409:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35431:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5599,"name":"int256","nodeType":"ElementaryTypeName","src":"35431:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5598,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"35426:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35426:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35439:3:18","memberName":"max","nodeType":"MemberAccess","src":"35426:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35418:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5596,"name":"uint256","nodeType":"ElementaryTypeName","src":"35418:7:18","typeDescriptions":{}}},"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35418:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35409:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"35445:42:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":5594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"35401:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35401:87:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5607,"nodeType":"ExpressionStatement","src":"35401:87:18"},{"expression":{"arguments":[{"id":5610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"35512:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35505:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5608,"name":"int256","nodeType":"ElementaryTypeName","src":"35505:6:18","typeDescriptions":{}}},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35505:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5593,"id":5612,"nodeType":"Return","src":"35498:20:18"}]},"documentation":{"id":5587,"nodeType":"StructuredDocumentation","src":"35020:203:18","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":5614,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"35237:8:18","nodeType":"FunctionDefinition","parameters":{"id":5590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"value","nameLocation":"35254:5:18","nodeType":"VariableDeclaration","scope":5614,"src":"35246:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5588,"name":"uint256","nodeType":"ElementaryTypeName","src":"35246:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35245:15:18"},"returnParameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5614,"src":"35284:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5591,"name":"int256","nodeType":"ElementaryTypeName","src":"35284:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35283:8:18"},"scope":5615,"src":"35228:297:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5616,"src":"842:34685:18","usedErrors":[]}],"src":"107:35421:18"},"id":18},"contracts/MockStaking.sol":{"ast":{"absolutePath":"contracts/MockStaking.sol","exportedSymbols":{"Address":[2396],"Context":[2418],"Counters":[2492],"CyberArenaStaking":[6026],"ECDSA":[3106],"EIP712":[3260],"ERC20":[816],"ERC20Permit":[1784],"ERC20Votes":[1531],"ERC20VotesComp":[1587],"IERC20":[894],"IERC20Metadata":[1612],"IERC20Permit":[1820],"IVotes":[190],"Math":[3764],"MockStaking":[5663],"Ownable":[112],"ReentrancyGuard":[230],"SafeCast":[5615],"SafeERC20":[2101],"Strings":[2718]},"id":5664,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":5617,"literals":["solidity","^","0.8",".11"],"nodeType":"PragmaDirective","src":"64:24:19"},{"absolutePath":"contracts/Staking.sol","file":"./Staking.sol","id":5618,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5664,"sourceUnit":6027,"src":"90:23:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5620,"name":"CyberArenaStaking","nameLocations":["224:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":6026,"src":"224:17:19"},"id":5621,"nodeType":"InheritanceSpecifier","src":"224:17:19"}],"canonicalName":"MockStaking","contractDependencies":[],"contractKind":"contract","documentation":{"id":5619,"nodeType":"StructuredDocumentation","src":"115:84:19","text":" @title MockStaking\n WARNING: use only for testing and debugging purpose"},"fullyImplemented":true,"id":5663,"linearizedBaseContracts":[5663,6026,230,112,816,1612,894,2418],"name":"MockStaking","nameLocation":"209:11:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":5624,"mutability":"mutable","name":"mockTime","nameLocation":"256:8:19","nodeType":"VariableDeclaration","scope":5663,"src":"248:20:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"248:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"267:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"body":{"id":5642,"nodeType":"Block","src":"470:7:19","statements":[]},"id":5643,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5636,"name":"_stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"418:13:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},{"id":5637,"name":"_penaltyDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"433:12:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5638,"name":"_penaltyBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"447:10:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5639,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"459:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5640,"kind":"baseConstructorSpecifier","modifierName":{"id":5635,"name":"CyberArenaStaking","nameLocations":["400:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":6026,"src":"400:17:19"},"nodeType":"ModifierInvocation","src":"400:69:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"_stakingToken","nameLocation":"302:13:19","nodeType":"VariableDeclaration","scope":5643,"src":"295:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},"typeName":{"id":5626,"nodeType":"UserDefinedTypeName","pathNode":{"id":5625,"name":"IERC20","nameLocations":["295:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"295:6:19"},"referencedDeclaration":894,"src":"295:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5629,"mutability":"mutable","name":"_penaltyDays","nameLocation":"332:12:19","nodeType":"VariableDeclaration","scope":5643,"src":"325:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5628,"name":"uint16","nodeType":"ElementaryTypeName","src":"325:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5631,"mutability":"mutable","name":"_penaltyBP","nameLocation":"361:10:19","nodeType":"VariableDeclaration","scope":5643,"src":"354:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5630,"name":"uint16","nodeType":"ElementaryTypeName","src":"354:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5633,"mutability":"mutable","name":"_treasury","nameLocation":"389:9:19","nodeType":"VariableDeclaration","scope":5643,"src":"381:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5632,"name":"address","nodeType":"ElementaryTypeName","src":"381:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"286:113:19"},"returnParameters":{"id":5641,"nodeType":"ParameterList","parameters":[],"src":"470:0:19"},"scope":5663,"src":"275:202:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5652,"nodeType":"Block","src":"538:33:19","statements":[{"expression":{"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5648,"name":"mockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"548:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5649,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"559:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"548:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5651,"nodeType":"ExpressionStatement","src":"548:16:19"}]},"functionSelector":"22f8e566","id":5653,"implemented":true,"kind":"function","modifiers":[],"name":"setCurrentTime","nameLocation":"492:14:19","nodeType":"FunctionDefinition","parameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"_time","nameLocation":"515:5:19","nodeType":"VariableDeclaration","scope":5653,"src":"507:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5644,"name":"uint256","nodeType":"ElementaryTypeName","src":"507:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"506:15:19"},"returnParameters":{"id":5647,"nodeType":"ParameterList","parameters":[],"src":"538:0:19"},"scope":5663,"src":"483:88:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6025],"body":{"id":5661,"nodeType":"Block","src":"690:32:19","statements":[{"expression":{"id":5659,"name":"mockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"707:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5658,"id":5660,"nodeType":"Return","src":"700:15:19"}]},"id":5662,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentTime","nameLocation":"586:14:19","nodeType":"FunctionDefinition","overrides":{"id":5655,"nodeType":"OverrideSpecifier","overrides":[],"src":"644:8:19"},"parameters":{"id":5654,"nodeType":"ParameterList","parameters":[],"src":"600:2:19"},"returnParameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5662,"src":"682:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5656,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"681:9:19"},"scope":5663,"src":"577:145:19","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":5664,"src":"200:524:19","usedErrors":[]}],"src":"64:660:19"},"id":19},"contracts/Staking.sol":{"ast":{"absolutePath":"contracts/Staking.sol","exportedSymbols":{"Address":[2396],"Context":[2418],"Counters":[2492],"CyberArenaStaking":[6026],"ECDSA":[3106],"EIP712":[3260],"ERC20":[816],"ERC20Permit":[1784],"ERC20Votes":[1531],"ERC20VotesComp":[1587],"IERC20":[894],"IERC20Metadata":[1612],"IERC20Permit":[1820],"IVotes":[190],"Math":[3764],"Ownable":[112],"ReentrancyGuard":[230],"SafeCast":[5615],"SafeERC20":[2101],"Strings":[2718]},"id":6027,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5665,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":5666,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":2102,"src":"57:65:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol","id":5667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":1588,"src":"123:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":5668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":231,"src":"199:62:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":113,"src":"262:52:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5670,"name":"ERC20","nameLocations":["346:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":816,"src":"346:5:20"},"id":5671,"nodeType":"InheritanceSpecifier","src":"346:5:20"},{"baseName":{"id":5672,"name":"Ownable","nameLocations":["353:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"353:7:20"},"id":5673,"nodeType":"InheritanceSpecifier","src":"353:7:20"},{"baseName":{"id":5674,"name":"ReentrancyGuard","nameLocations":["362:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":230,"src":"362:15:20"},"id":5675,"nodeType":"InheritanceSpecifier","src":"362:15:20"}],"canonicalName":"CyberArenaStaking","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6026,"linearizedBaseContracts":[6026,230,112,816,1612,894,2418],"name":"CyberArenaStaking","nameLocation":"325:17:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5679,"libraryName":{"id":5676,"name":"SafeERC20","nameLocations":["390:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2101,"src":"390:9:20"},"nodeType":"UsingForDirective","src":"384:27:20","typeName":{"id":5678,"nodeType":"UserDefinedTypeName","pathNode":{"id":5677,"name":"IERC20","nameLocations":["404:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"404:6:20"},"referencedDeclaration":894,"src":"404:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}}},{"constant":false,"documentation":{"id":5680,"nodeType":"StructuredDocumentation","src":"417:22:20","text":"@dev Staking token"},"functionSelector":"72f702f3","id":5683,"mutability":"mutable","name":"stakingToken","nameLocation":"458:12:20","nodeType":"VariableDeclaration","scope":6026,"src":"444:26:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},"typeName":{"id":5682,"nodeType":"UserDefinedTypeName","pathNode":{"id":5681,"name":"IERC20","nameLocations":["444:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"444:6:20"},"referencedDeclaration":894,"src":"444:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"documentation":{"id":5684,"nodeType":"StructuredDocumentation","src":"477:46:20","text":"@dev Info about each stake by user address"},"functionSelector":"c8b6cbf7","id":5690,"mutability":"mutable","name":"stakers","nameLocation":"563:7:20","nodeType":"VariableDeclaration","scope":6026,"src":"528:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Stake_$5715_storage_$dyn_storage_$","typeString":"mapping(address => struct CyberArenaStaking.Stake[])"},"typeName":{"id":5689,"keyType":{"id":5685,"name":"address","nodeType":"ElementaryTypeName","src":"536:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"528:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Stake_$5715_storage_$dyn_storage_$","typeString":"mapping(address => struct CyberArenaStaking.Stake[])"},"valueType":{"baseType":{"id":5687,"nodeType":"UserDefinedTypeName","pathNode":{"id":5686,"name":"Stake","nameLocations":["547:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5715,"src":"547:5:20"},"referencedDeclaration":5715,"src":"547:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake"}},"id":5688,"nodeType":"ArrayTypeName","src":"547:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$5715_storage_$dyn_storage_ptr","typeString":"struct CyberArenaStaking.Stake[]"}}},"visibility":"public"},{"constant":false,"documentation":{"id":5691,"nodeType":"StructuredDocumentation","src":"577:27:20","text":"@dev Penalty days value"},"functionSelector":"ee2b44e4","id":5693,"mutability":"mutable","name":"penaltyDays","nameLocation":"623:11:20","nodeType":"VariableDeclaration","scope":6026,"src":"609:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5692,"name":"uint16","nodeType":"ElementaryTypeName","src":"609:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"constant":false,"documentation":{"id":5694,"nodeType":"StructuredDocumentation","src":"641:34:20","text":"@dev Penalty base points value"},"functionSelector":"a5582c3e","id":5696,"mutability":"mutable","name":"penaltyBP","nameLocation":"694:9:20","nodeType":"VariableDeclaration","scope":6026,"src":"680:23:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5695,"name":"uint16","nodeType":"ElementaryTypeName","src":"680:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"constant":false,"documentation":{"id":5697,"nodeType":"StructuredDocumentation","src":"710:68:20","text":"@dev The address to which the penalty tokens will be transferred"},"functionSelector":"61d027b3","id":5699,"mutability":"mutable","name":"treasury","nameLocation":"798:8:20","nodeType":"VariableDeclaration","scope":6026,"src":"783:23:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5698,"name":"address","nodeType":"ElementaryTypeName","src":"783:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":5700,"nodeType":"StructuredDocumentation","src":"813:21:20","text":"@dev Total shares"},"functionSelector":"3a98ef39","id":5702,"mutability":"mutable","name":"totalShares","nameLocation":"854:11:20","nodeType":"VariableDeclaration","scope":6026,"src":"839:26:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5701,"name":"uint192","nodeType":"ElementaryTypeName","src":"839:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"public"},{"canonicalName":"CyberArenaStaking.Stake","id":5715,"members":[{"constant":false,"id":5704,"mutability":"mutable","name":"unstaked","nameLocation":"900:8:20","nodeType":"VariableDeclaration","scope":5715,"src":"895:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5703,"name":"bool","nodeType":"ElementaryTypeName","src":"895:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5706,"mutability":"mutable","name":"amount","nameLocation":"926:6:20","nodeType":"VariableDeclaration","scope":5715,"src":"918:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5705,"name":"uint128","nodeType":"ElementaryTypeName","src":"918:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5708,"mutability":"mutable","name":"stakedTimestamp","nameLocation":"949:15:20","nodeType":"VariableDeclaration","scope":5715,"src":"942:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5707,"name":"uint48","nodeType":"ElementaryTypeName","src":"942:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":5710,"mutability":"mutable","name":"penaltyDays","nameLocation":"981:11:20","nodeType":"VariableDeclaration","scope":5715,"src":"974:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5709,"name":"uint16","nodeType":"ElementaryTypeName","src":"974:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5712,"mutability":"mutable","name":"penaltyBP","nameLocation":"1009:9:20","nodeType":"VariableDeclaration","scope":5715,"src":"1002:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5711,"name":"uint16","nodeType":"ElementaryTypeName","src":"1002:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5714,"mutability":"mutable","name":"shares","nameLocation":"1036:6:20","nodeType":"VariableDeclaration","scope":5715,"src":"1028:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5713,"name":"uint192","nodeType":"ElementaryTypeName","src":"1028:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"name":"Stake","nameLocation":"879:5:20","nodeType":"StructDefinition","scope":6026,"src":"872:177:20","visibility":"public"},{"anonymous":false,"eventSelector":"49df4ae990079b53e42ad090f1fc5b7311dd70675bccd49294082a2ed78d6194","id":5719,"name":"SetPenaltyBP","nameLocation":"1061:12:20","nodeType":"EventDefinition","parameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5717,"indexed":false,"mutability":"mutable","name":"penaltyBP","nameLocation":"1081:9:20","nodeType":"VariableDeclaration","scope":5719,"src":"1074:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5716,"name":"uint16","nodeType":"ElementaryTypeName","src":"1074:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1073:18:20"},"src":"1055:37:20"},{"anonymous":false,"eventSelector":"cb7ef3e545f5cdb893f5c568ba710fe08f336375a2d9fd66e161033f8fc09ef3","id":5723,"name":"SetTreasury","nameLocation":"1103:11:20","nodeType":"EventDefinition","parameters":{"id":5722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5721,"indexed":false,"mutability":"mutable","name":"treasury","nameLocation":"1123:8:20","nodeType":"VariableDeclaration","scope":5723,"src":"1115:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5720,"name":"address","nodeType":"ElementaryTypeName","src":"1115:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1114:18:20"},"src":"1097:36:20"},{"body":{"id":5783,"nodeType":"Block","src":"1630:349:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5747,"name":"_stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"1657:13:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}],"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1649:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5745,"name":"address","nodeType":"ElementaryTypeName","src":"1649:7:20","typeDescriptions":{}}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1683:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1675:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5749,"name":"address","nodeType":"ElementaryTypeName","src":"1675:7:20","typeDescriptions":{}}},"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1675:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1649:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43796265724172656e615374616b696e673a207374616b696e6720746f6b656e20697320746865207a65726f2061646472657373","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:54:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c","typeString":"literal_string \"CyberArenaStaking: staking token is the zero address\""},"value":"CyberArenaStaking: staking token is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c","typeString":"literal_string \"CyberArenaStaking: staking token is the zero address\""}],"id":5744,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1641:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:101:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5756,"nodeType":"ExpressionStatement","src":"1641:101:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5758,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"1760:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1773:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5759,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:20","typeDescriptions":{}}},"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1760:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43796265724172656e615374616b696e673a20747265617375727920697320746865207a65726f2061646472657373","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1785:49:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","typeString":"literal_string \"CyberArenaStaking: treasury is the zero address\""},"value":"CyberArenaStaking: treasury is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","typeString":"literal_string \"CyberArenaStaking: treasury is the zero address\""}],"id":5757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1752:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:83:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5766,"nodeType":"ExpressionStatement","src":"1752:83:20"},{"expression":{"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5767,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"1846:12:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5768,"name":"_stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"1861:13:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"src":"1846:28:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":5770,"nodeType":"ExpressionStatement","src":"1846:28:20"},{"expression":{"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5771,"name":"penaltyDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"1884:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5772,"name":"_penaltyDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"1898:12:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"1884:26:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":5774,"nodeType":"ExpressionStatement","src":"1884:26:20"},{"expression":{"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5775,"name":"penaltyBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"1920:9:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5776,"name":"_penaltyBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"1932:10:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"1920:22:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":5778,"nodeType":"ExpressionStatement","src":"1920:22:20"},{"expression":{"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5779,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"1952:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5780,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"1963:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1952:20:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5782,"nodeType":"ExpressionStatement","src":"1952:20:20"}]},"documentation":{"id":5724,"nodeType":"StructuredDocumentation","src":"1139:269:20","text":" @notice Initializer\n @param _stakingToken Staking token address\n @param _penaltyDays Penalty days value\n @param _penaltyBP Penalty base points value\n @param _treasury The address to which the penalty tokens will be transferred"},"id":5784,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"5374616b656420434154","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1559:12:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4cf3feffcaeebc031df64c66a448845ad50c22df1abafd77a2c582e333ca172c","typeString":"literal_string \"Staked CAT\""},"value":"Staked CAT"},{"hexValue":"7374434154","id":5737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1573:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d456962cf67d5c8b88983f36a453bbc353cd2171c03084c86211b3226c9c6fb","typeString":"literal_string \"stCAT\""},"value":"stCAT"}],"id":5738,"kind":"baseConstructorSpecifier","modifierName":{"id":5735,"name":"ERC20","nameLocations":["1553:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":816,"src":"1553:5:20"},"nodeType":"ModifierInvocation","src":"1553:28:20"},{"arguments":[],"id":5740,"kind":"baseConstructorSpecifier","modifierName":{"id":5739,"name":"Ownable","nameLocations":["1590:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"1590:7:20"},"nodeType":"ModifierInvocation","src":"1590:9:20"},{"arguments":[],"id":5742,"kind":"baseConstructorSpecifier","modifierName":{"id":5741,"name":"ReentrancyGuard","nameLocations":["1608:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":230,"src":"1608:15:20"},"nodeType":"ModifierInvocation","src":"1608:17:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"_stakingToken","nameLocation":"1441:13:20","nodeType":"VariableDeclaration","scope":5784,"src":"1434:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"},"typeName":{"id":5726,"nodeType":"UserDefinedTypeName","pathNode":{"id":5725,"name":"IERC20","nameLocations":["1434:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"1434:6:20"},"referencedDeclaration":894,"src":"1434:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5729,"mutability":"mutable","name":"_penaltyDays","nameLocation":"1471:12:20","nodeType":"VariableDeclaration","scope":5784,"src":"1464:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5728,"name":"uint16","nodeType":"ElementaryTypeName","src":"1464:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5731,"mutability":"mutable","name":"_penaltyBP","nameLocation":"1500:10:20","nodeType":"VariableDeclaration","scope":5784,"src":"1493:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5730,"name":"uint16","nodeType":"ElementaryTypeName","src":"1493:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5733,"mutability":"mutable","name":"_treasury","nameLocation":"1528:9:20","nodeType":"VariableDeclaration","scope":5784,"src":"1520:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5732,"name":"address","nodeType":"ElementaryTypeName","src":"1520:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1424:119:20"},"returnParameters":{"id":5743,"nodeType":"ParameterList","parameters":[],"src":"1630:0:20"},"scope":6026,"src":"1413:566:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5833,"nodeType":"Block","src":"2129:350:20","statements":[{"expression":{"arguments":[{"expression":{"id":5795,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2169:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2173:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2169:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5799,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2189:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_CyberArenaStaking_$6026","typeString":"contract CyberArenaStaking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CyberArenaStaking_$6026","typeString":"contract CyberArenaStaking"}],"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5797,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:20","typeDescriptions":{}}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5801,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"2196:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":5792,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"2139:12:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2152:16:20","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1878,"src":"2139:29:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$894_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$894_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2139:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5803,"nodeType":"ExpressionStatement","src":"2139:65:20"},{"expression":{"arguments":[{"expression":{"id":5805,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2221:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2225:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2221:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5807,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"2233:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":5804,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2215:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2215:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5809,"nodeType":"ExpressionStatement","src":"2215:26:20"},{"expression":{"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5810,"name":"totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"2252:11:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5811,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"2267:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2252:22:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"id":5813,"nodeType":"ExpressionStatement","src":"2252:22:20"},{"expression":{"arguments":[{"arguments":[{"hexValue":"66616c7365","id":5820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2328:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":5821,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"2347:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5824,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"2375:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2375:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2368:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5822,"name":"uint48","nodeType":"ElementaryTypeName","src":"2368:6:20","typeDescriptions":{}}},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2368:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":5827,"name":"penaltyDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"2406:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5828,"name":"penaltyBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"2431:9:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5829,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"2454:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":5819,"name":"Stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"2309:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Stake_$5715_storage_ptr_$","typeString":"type(struct CyberArenaStaking.Stake storage pointer)"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:162:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_memory_ptr","typeString":"struct CyberArenaStaking.Stake memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Stake_$5715_memory_ptr","typeString":"struct CyberArenaStaking.Stake memory"}],"expression":{"baseExpression":{"id":5814,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"2284:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Stake_$5715_storage_$dyn_storage_$","typeString":"mapping(address => struct CyberArenaStaking.Stake storage ref[] storage ref)"}},"id":5817,"indexExpression":{"expression":{"id":5815,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2292:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2296:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2292:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2284:19:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$5715_storage_$dyn_storage","typeString":"struct CyberArenaStaking.Stake storage ref[] storage ref"}},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2304:4:20","memberName":"push","nodeType":"MemberAccess","src":"2284:24:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$5715_storage_$dyn_storage_ptr_$_t_struct$_Stake_$5715_storage_$returns$__$bound_to$_t_array$_t_struct$_Stake_$5715_storage_$dyn_storage_ptr_$","typeString":"function (struct CyberArenaStaking.Stake storage ref[] storage pointer,struct CyberArenaStaking.Stake storage ref)"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2284:188:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5832,"nodeType":"ExpressionStatement","src":"2284:188:20"}]},"documentation":{"id":5785,"nodeType":"StructuredDocumentation","src":"1985:85:20","text":" @notice Stake staking tokens\n @param _amount amount to stake"},"functionSelector":"88fe2be8","id":5834,"implemented":true,"kind":"function","modifiers":[{"id":5790,"kind":"modifierInvocation","modifierName":{"id":5789,"name":"nonReentrant","nameLocations":["2116:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"2116:12:20"},"nodeType":"ModifierInvocation","src":"2116:12:20"}],"name":"stake","nameLocation":"2084:5:20","nodeType":"FunctionDefinition","parameters":{"id":5788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5787,"mutability":"mutable","name":"_amount","nameLocation":"2098:7:20","nodeType":"VariableDeclaration","scope":5834,"src":"2090:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5786,"name":"uint128","nodeType":"ElementaryTypeName","src":"2090:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2089:17:20"},"returnParameters":{"id":5791,"nodeType":"ParameterList","parameters":[],"src":"2129:0:20"},"scope":6026,"src":"2075:404:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5935,"nodeType":"Block","src":"2721:789:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5843,"name":"_stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"2739:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":5844,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"2753:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Stake_$5715_storage_$dyn_storage_$","typeString":"mapping(address => struct CyberArenaStaking.Stake storage ref[] storage ref)"}},"id":5847,"indexExpression":{"expression":{"id":5845,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2761:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2765:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2761:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2753:19:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$5715_storage_$dyn_storage","typeString":"struct CyberArenaStaking.Stake storage ref[] storage ref"}},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2773:6:20","memberName":"length","nodeType":"MemberAccess","src":"2753:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2739:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43796265724172656e615374616b696e673a20696e76616c696420696e646578","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2781:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79","typeString":"literal_string \"CyberArenaStaking: invalid index\""},"value":"CyberArenaStaking: invalid index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79","typeString":"literal_string \"CyberArenaStaking: invalid index\""}],"id":5842,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2731:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2731:85:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5852,"nodeType":"ExpressionStatement","src":"2731:85:20"},{"assignments":[5855],"declarations":[{"constant":false,"id":5855,"mutability":"mutable","name":"stakeRef","nameLocation":"2840:8:20","nodeType":"VariableDeclaration","scope":5935,"src":"2826:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake"},"typeName":{"id":5854,"nodeType":"UserDefinedTypeName","pathNode":{"id":5853,"name":"Stake","nameLocations":["2826:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5715,"src":"2826:5:20"},"referencedDeclaration":5715,"src":"2826:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake"}},"visibility":"internal"}],"id":5862,"initialValue":{"baseExpression":{"baseExpression":{"id":5856,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"2851:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Stake_$5715_storage_$dyn_storage_$","typeString":"mapping(address => struct CyberArenaStaking.Stake storage ref[] storage ref)"}},"id":5859,"indexExpression":{"expression":{"id":5857,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2859:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2863:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2859:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2851:19:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Stake_$5715_storage_$dyn_storage","typeString":"struct CyberArenaStaking.Stake storage ref[] storage ref"}},"id":5861,"indexExpression":{"id":5860,"name":"_stakeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"2871:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2851:32:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage","typeString":"struct CyberArenaStaking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2826:57:20"},{"expression":{"arguments":[{"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2901:18:20","subExpression":{"expression":{"id":5864,"name":"stakeRef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"2902:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake storage pointer"}},"id":5865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2911:8:20","memberName":"unstaked","nodeType":"MemberAccess","referencedDeclaration":5704,"src":"2902:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43796265724172656e615374616b696e673a20756e7374616b656420616c7265616479","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2921:37:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336","typeString":"literal_string \"CyberArenaStaking: unstaked already\""},"value":"CyberArenaStaking: unstaked already"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336","typeString":"literal_string \"CyberArenaStaking: unstaked already\""}],"id":5863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2893:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2893:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5869,"nodeType":"ExpressionStatement","src":"2893:66:20"},{"expression":{"arguments":[{"expression":{"id":5871,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2976:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2980:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2976:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5873,"name":"stakeRef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"2988:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake storage pointer"}},"id":5874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2997:6:20","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5706,"src":"2988:15:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":5870,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"2970:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5876,"nodeType":"ExpressionStatement","src":"2970:34:20"},{"expression":{"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5877,"name":"totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"3014:11:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":5878,"name":"stakeRef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3029:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake storage pointer"}},"id":5879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3038:6:20","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":5714,"src":"3029:15:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"3014:30:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"id":5881,"nodeType":"ExpressionStatement","src":"3014:30:20"},{"expression":{"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5882,"name":"stakeRef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3054:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake storage pointer"}},"id":5884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3063:8:20","memberName":"unstaked","nodeType":"MemberAccess","referencedDeclaration":5704,"src":"3054:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3074:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3054:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5887,"nodeType":"ExpressionStatement","src":"3054:24:20"},{"assignments":[5889],"declarations":[{"constant":false,"id":5889,"mutability":"mutable","name":"penaltyAmount","nameLocation":"3161:13:20","nodeType":"VariableDeclaration","scope":5935,"src":"3153:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5888,"name":"uint256","nodeType":"ElementaryTypeName","src":"3153:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5891,"initialValue":{"hexValue":"30","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3177:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3153:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5892,"name":"stakeRef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3192:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake storage pointer"}},"id":5893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3201:15:20","memberName":"stakedTimestamp","nodeType":"MemberAccess","referencedDeclaration":5708,"src":"3192:24:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":5896,"name":"stakeRef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3226:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake storage pointer"}},"id":5897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3235:11:20","memberName":"penaltyDays","nodeType":"MemberAccess","referencedDeclaration":5710,"src":"3226:20:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":5895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3219:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5894,"name":"uint48","nodeType":"ElementaryTypeName","src":"3219:6:20","typeDescriptions":{}}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3836343030","id":5899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3250:5:20","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"86400"},"src":"3219:36:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3192:63:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5902,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"3258:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3192:82:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5923,"nodeType":"IfStatement","src":"3188:235:20","trueBody":{"id":5922,"nodeType":"Block","src":"3276:147:20","statements":[{"expression":{"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5905,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"3290:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5906,"name":"stakeRef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3306:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake storage pointer"}},"id":5907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3315:6:20","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5706,"src":"3306:15:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5908,"name":"stakeRef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3324:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake storage pointer"}},"id":5909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3333:9:20","memberName":"penaltyBP","nodeType":"MemberAccess","referencedDeclaration":5712,"src":"3324:18:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"3306:36:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"316534","id":5911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3345:3:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"1e4"},"src":"3306:42:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"3290:58:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5914,"nodeType":"ExpressionStatement","src":"3290:58:20"},{"expression":{"arguments":[{"id":5918,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"3388:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5919,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"3398:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5915,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"3362:12:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:12:20","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"3362:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$894_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$894_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3362:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5921,"nodeType":"ExpressionStatement","src":"3362:50:20"}]}},{"expression":{"arguments":[{"expression":{"id":5927,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3459:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3463:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3459:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5929,"name":"stakeRef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3471:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$5715_storage_ptr","typeString":"struct CyberArenaStaking.Stake storage pointer"}},"id":5930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3480:6:20","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5706,"src":"3471:15:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5931,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"3489:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3471:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5924,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"3433:12:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$894","typeString":"contract IERC20"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3446:12:20","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"3433:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$894_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$894_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5934,"nodeType":"ExpressionStatement","src":"3433:70:20"}]},"documentation":{"id":5835,"nodeType":"StructuredDocumentation","src":"2485:171:20","text":" @notice Unstake staking tokens\n @notice If penalty period is not over grab penalty\n @param _stakeIndex Stake index in array of user's stakes"},"functionSelector":"2e17de78","id":5936,"implemented":true,"kind":"function","modifiers":[{"id":5840,"kind":"modifierInvocation","modifierName":{"id":5839,"name":"nonReentrant","nameLocations":["2708:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"2708:12:20"},"nodeType":"ModifierInvocation","src":"2708:12:20"}],"name":"unstake","nameLocation":"2670:7:20","nodeType":"FunctionDefinition","parameters":{"id":5838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5837,"mutability":"mutable","name":"_stakeIndex","nameLocation":"2686:11:20","nodeType":"VariableDeclaration","scope":5936,"src":"2678:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5836,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2677:21:20"},"returnParameters":{"id":5841,"nodeType":"ParameterList","parameters":[],"src":"2721:0:20"},"scope":6026,"src":"2661:849:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5948,"nodeType":"Block","src":"3715:43:20","statements":[{"expression":{"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5944,"name":"penaltyDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"3725:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5945,"name":"_penaltyDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"3739:12:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"3725:26:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":5947,"nodeType":"ExpressionStatement","src":"3725:26:20"}]},"documentation":{"id":5937,"nodeType":"StructuredDocumentation","src":"3541:105:20","text":" @notice Set a new penalty days value\n @param _penaltyDays New penalty days value"},"functionSelector":"2932e77a","id":5949,"implemented":true,"kind":"function","modifiers":[{"id":5942,"kind":"modifierInvocation","modifierName":{"id":5941,"name":"onlyOwner","nameLocations":["3705:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3705:9:20"},"nodeType":"ModifierInvocation","src":"3705:9:20"}],"name":"setPenaltyDays","nameLocation":"3660:14:20","nodeType":"FunctionDefinition","parameters":{"id":5940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5939,"mutability":"mutable","name":"_penaltyDays","nameLocation":"3682:12:20","nodeType":"VariableDeclaration","scope":5949,"src":"3675:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5938,"name":"uint16","nodeType":"ElementaryTypeName","src":"3675:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3674:21:20"},"returnParameters":{"id":5943,"nodeType":"ParameterList","parameters":[],"src":"3715:0:20"},"scope":6026,"src":"3651:107:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5972,"nodeType":"Block","src":"3946:151:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5958,"name":"_penaltyBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"3964:10:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"316534","id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3978:3:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"1e4"},"src":"3964:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e673a2070656e616c74792042502065786365656473206c696d6974","id":5961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3983:35:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7","typeString":"literal_string \"Staking: penalty BP exceeds limit\""},"value":"Staking: penalty BP exceeds limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7","typeString":"literal_string \"Staking: penalty BP exceeds limit\""}],"id":5957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3956:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3956:63:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5963,"nodeType":"ExpressionStatement","src":"3956:63:20"},{"expression":{"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5964,"name":"penaltyBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"4029:9:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5965,"name":"_penaltyBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"4041:10:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"4029:22:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":5967,"nodeType":"ExpressionStatement","src":"4029:22:20"},{"eventCall":{"arguments":[{"id":5969,"name":"_penaltyBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"4079:10:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":5968,"name":"SetPenaltyBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"4066:12:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16)"}},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4066:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5971,"nodeType":"EmitStatement","src":"4061:29:20"}]},"documentation":{"id":5950,"nodeType":"StructuredDocumentation","src":"3764:117:20","text":" @notice Set a new penalty base points value\n @param _penaltyBP New penalty base points value"},"functionSelector":"bacb4c57","id":5973,"implemented":true,"kind":"function","modifiers":[{"id":5955,"kind":"modifierInvocation","modifierName":{"id":5954,"name":"onlyOwner","nameLocations":["3936:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3936:9:20"},"nodeType":"ModifierInvocation","src":"3936:9:20"}],"name":"setPenaltyBP","nameLocation":"3895:12:20","nodeType":"FunctionDefinition","parameters":{"id":5953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5952,"mutability":"mutable","name":"_penaltyBP","nameLocation":"3915:10:20","nodeType":"VariableDeclaration","scope":5973,"src":"3908:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5951,"name":"uint16","nodeType":"ElementaryTypeName","src":"3908:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3907:19:20"},"returnParameters":{"id":5956,"nodeType":"ParameterList","parameters":[],"src":"3946:0:20"},"scope":6026,"src":"3886:211:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5999,"nodeType":"Block","src":"4265:168:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5982,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"4283:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4304:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4296:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5983,"name":"address","nodeType":"ElementaryTypeName","src":"4296:7:20","typeDescriptions":{}}},"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4296:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4283:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43796265724172656e615374616b696e673a20747265617375727920697320746865207a65726f2061646472657373","id":5988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4308:49:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","typeString":"literal_string \"CyberArenaStaking: treasury is the zero address\""},"value":"CyberArenaStaking: treasury is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","typeString":"literal_string \"CyberArenaStaking: treasury is the zero address\""}],"id":5981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4275:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:83:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5990,"nodeType":"ExpressionStatement","src":"4275:83:20"},{"expression":{"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5991,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"4368:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5992,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"4379:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4368:20:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5994,"nodeType":"ExpressionStatement","src":"4368:20:20"},{"eventCall":{"arguments":[{"id":5996,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"4416:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5995,"name":"SetTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"4404:11:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4404:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5998,"nodeType":"EmitStatement","src":"4399:27:20"}]},"documentation":{"id":5974,"nodeType":"StructuredDocumentation","src":"4103:98:20","text":" @notice Set a new penalty treasury\n @param _treasury New treasury address"},"functionSelector":"f0f44260","id":6000,"implemented":true,"kind":"function","modifiers":[{"id":5979,"kind":"modifierInvocation","modifierName":{"id":5978,"name":"onlyOwner","nameLocations":["4255:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4255:9:20"},"nodeType":"ModifierInvocation","src":"4255:9:20"}],"name":"setTreasury","nameLocation":"4215:11:20","nodeType":"FunctionDefinition","parameters":{"id":5977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5976,"mutability":"mutable","name":"_treasury","nameLocation":"4235:9:20","nodeType":"VariableDeclaration","scope":6000,"src":"4227:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5975,"name":"address","nodeType":"ElementaryTypeName","src":"4227:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4226:19:20"},"returnParameters":{"id":5980,"nodeType":"ParameterList","parameters":[],"src":"4265:0:20"},"scope":6026,"src":"4206:227:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[577],"body":{"id":6015,"nodeType":"Block","src":"4575:62:20","statements":[{"expression":{"arguments":[{"hexValue":"43796265724172656e615374616b696e673a204e4f4e5f5452414e5346455241424c45","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4592:37:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f","typeString":"literal_string \"CyberArenaStaking: NON_TRANSFERABLE\""},"value":"CyberArenaStaking: NON_TRANSFERABLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f","typeString":"literal_string \"CyberArenaStaking: NON_TRANSFERABLE\""}],"id":6011,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4585:6:20","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6014,"nodeType":"ExpressionStatement","src":"4585:45:20"}]},"documentation":{"id":6001,"nodeType":"StructuredDocumentation","src":"4462:26:20","text":"@dev disable transfers"},"id":6016,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"4502:9:20","nodeType":"FunctionDefinition","overrides":{"id":6009,"nodeType":"OverrideSpecifier","overrides":[],"src":"4566:8:20"},"parameters":{"id":6008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"_from","nameLocation":"4520:5:20","nodeType":"VariableDeclaration","scope":6016,"src":"4512:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6002,"name":"address","nodeType":"ElementaryTypeName","src":"4512:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6005,"mutability":"mutable","name":"_to","nameLocation":"4535:3:20","nodeType":"VariableDeclaration","scope":6016,"src":"4527:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6004,"name":"address","nodeType":"ElementaryTypeName","src":"4527:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6007,"mutability":"mutable","name":"_amount","nameLocation":"4548:7:20","nodeType":"VariableDeclaration","scope":6016,"src":"4540:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6006,"name":"uint256","nodeType":"ElementaryTypeName","src":"4540:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4511:45:20"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[],"src":"4575:0:20"},"scope":6026,"src":"4493:144:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6024,"nodeType":"Block","src":"4739:39:20","statements":[{"expression":{"expression":{"id":6021,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4756:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"4756:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6020,"id":6023,"nodeType":"Return","src":"4749:22:20"}]},"id":6025,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentTime","nameLocation":"4652:14:20","nodeType":"FunctionDefinition","parameters":{"id":6017,"nodeType":"ParameterList","parameters":[],"src":"4666:2:20"},"returnParameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6025,"src":"4731:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6018,"name":"uint256","nodeType":"ElementaryTypeName","src":"4731:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4730:9:20"},"scope":6026,"src":"4643:135:20","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":6027,"src":"316:4464:20","usedErrors":[]}],"src":"32:4748:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_275":{"entryPoint":null,"id":275,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"423:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:21"},"nodeType":"YulFunctionCall","src":"433:12:21"},"nodeType":"YulExpressionStatement","src":"433:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:21"},{"body":{"nodeType":"YulBlock","src":"546:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:21"},"nodeType":"YulFunctionCall","src":"556:12:21"},"nodeType":"YulExpressionStatement","src":"556:12:21"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:21"},{"body":{"nodeType":"YulBlock","src":"628:54:21","statements":[{"nodeType":"YulAssignment","src":"638:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:21"},"nodeType":"YulFunctionCall","src":"652:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:21"},"nodeType":"YulFunctionCall","src":"668:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:21"},"nodeType":"YulFunctionCall","src":"648:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:21","type":""}],"src":"580:102:21"},{"body":{"nodeType":"YulBlock","src":"716:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:21"},"nodeType":"YulFunctionCall","src":"726:88:21"},"nodeType":"YulExpressionStatement","src":"726:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:21"},"nodeType":"YulFunctionCall","src":"823:15:21"},"nodeType":"YulExpressionStatement","src":"823:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:21"},"nodeType":"YulFunctionCall","src":"847:15:21"},"nodeType":"YulExpressionStatement","src":"847:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:21"},{"body":{"nodeType":"YulBlock","src":"917:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:21"},"nodeType":"YulFunctionCall","src":"957:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:21"},"nodeType":"YulFunctionCall","src":"945:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:21"},"nodeType":"YulFunctionCall","src":"1098:18:21"},"nodeType":"YulExpressionStatement","src":"1098:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:21"},"nodeType":"YulFunctionCall","src":"1036:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:21"},"nodeType":"YulFunctionCall","src":"1072:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:21"},"nodeType":"YulFunctionCall","src":"1033:62:21"},"nodeType":"YulIf","src":"1030:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:21"},"nodeType":"YulFunctionCall","src":"1127:22:21"},"nodeType":"YulExpressionStatement","src":"1127:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:21","type":""}],"src":"874:281:21"},{"body":{"nodeType":"YulBlock","src":"1202:88:21","statements":[{"nodeType":"YulAssignment","src":"1212:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:21"},"nodeType":"YulFunctionCall","src":"1222:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:21"},"nodeType":"YulFunctionCall","src":"1251:33:21"},"nodeType":"YulExpressionStatement","src":"1251:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:21","type":""}],"src":"1161:129:21"},{"body":{"nodeType":"YulBlock","src":"1363:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:21"},"nodeType":"YulFunctionCall","src":"1470:18:21"},"nodeType":"YulExpressionStatement","src":"1470:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:21"},"nodeType":"YulFunctionCall","src":"1437:30:21"},"nodeType":"YulIf","src":"1434:56:21"},{"nodeType":"YulAssignment","src":"1500:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:21"},"nodeType":"YulFunctionCall","src":"1508:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:21"}]},{"nodeType":"YulAssignment","src":"1574:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:21"},"nodeType":"YulFunctionCall","src":"1582:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:21","type":""}],"src":"1296:308:21"},{"body":{"nodeType":"YulBlock","src":"1672:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:21"},"nodeType":"YulFunctionCall","src":"1772:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:21"},"nodeType":"YulFunctionCall","src":"1791:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:21"},"nodeType":"YulFunctionCall","src":"1785:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:21"},"nodeType":"YulFunctionCall","src":"1765:39:21"},"nodeType":"YulExpressionStatement","src":"1765:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:21"},"nodeType":"YulFunctionCall","src":"1709:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:21","statements":[{"nodeType":"YulAssignment","src":"1725:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:21"},"nodeType":"YulFunctionCall","src":"1730:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:21","statements":[]},"src":"1701:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:21"},"nodeType":"YulFunctionCall","src":"1830:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:21"},"nodeType":"YulFunctionCall","src":"1823:27:21"},"nodeType":"YulExpressionStatement","src":"1823:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:21","type":""}],"src":"1610:246:21"},{"body":{"nodeType":"YulBlock","src":"1957:339:21","statements":[{"nodeType":"YulAssignment","src":"1967:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:21"},"nodeType":"YulFunctionCall","src":"1992:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:21"},"nodeType":"YulFunctionCall","src":"1976:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:21"},"nodeType":"YulFunctionCall","src":"2051:21:21"},"nodeType":"YulExpressionStatement","src":"2051:21:21"},{"nodeType":"YulVariableDeclaration","src":"2081:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:21"},"nodeType":"YulFunctionCall","src":"2092:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:21"},"nodeType":"YulFunctionCall","src":"2148:79:21"},"nodeType":"YulExpressionStatement","src":"2148:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:21"},"nodeType":"YulFunctionCall","src":"2123:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:21"},"nodeType":"YulFunctionCall","src":"2120:25:21"},"nodeType":"YulIf","src":"2117:112:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:21"},"nodeType":"YulFunctionCall","src":"2238:52:21"},"nodeType":"YulExpressionStatement","src":"2238:52:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:21","type":""}],"src":"1862:434:21"},{"body":{"nodeType":"YulBlock","src":"2389:282:21","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:21"},"nodeType":"YulFunctionCall","src":"2440:79:21"},"nodeType":"YulExpressionStatement","src":"2440:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:21"},"nodeType":"YulFunctionCall","src":"2413:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:21"},"nodeType":"YulFunctionCall","src":"2409:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:21"},"nodeType":"YulFunctionCall","src":"2402:35:21"},"nodeType":"YulIf","src":"2399:122:21"},{"nodeType":"YulVariableDeclaration","src":"2530:27:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:21"},"nodeType":"YulFunctionCall","src":"2544:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:21"},"nodeType":"YulFunctionCall","src":"2634:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:21"},"nodeType":"YulFunctionCall","src":"2575:90:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:21","type":""}],"src":"2316:355:21"},{"body":{"nodeType":"YulBlock","src":"2791:739:21","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:21"},"nodeType":"YulFunctionCall","src":"2839:79:21"},"nodeType":"YulExpressionStatement","src":"2839:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:21"},"nodeType":"YulFunctionCall","src":"2808:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:21"},"nodeType":"YulFunctionCall","src":"2804:32:21"},"nodeType":"YulIf","src":"2801:119:21"},{"nodeType":"YulBlock","src":"2930:291:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:21"},"nodeType":"YulFunctionCall","src":"2965:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:21"},"nodeType":"YulFunctionCall","src":"2959:24:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:21"},"nodeType":"YulFunctionCall","src":"3032:79:21"},"nodeType":"YulExpressionStatement","src":"3032:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:21"},"nodeType":"YulFunctionCall","src":"2999:30:21"},"nodeType":"YulIf","src":"2996:117:21"},{"nodeType":"YulAssignment","src":"3127:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:21"},"nodeType":"YulFunctionCall","src":"3179:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:21"},"nodeType":"YulFunctionCall","src":"3137:74:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:21"}]}]},{"nodeType":"YulBlock","src":"3231:292:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:21"},"nodeType":"YulFunctionCall","src":"3266:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:21"},"nodeType":"YulFunctionCall","src":"3260:25:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:21"},"nodeType":"YulFunctionCall","src":"3334:79:21"},"nodeType":"YulExpressionStatement","src":"3334:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:21"},"nodeType":"YulFunctionCall","src":"3301:30:21"},"nodeType":"YulIf","src":"3298:117:21"},{"nodeType":"YulAssignment","src":"3429:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:21"},"nodeType":"YulFunctionCall","src":"3481:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:21"},"nodeType":"YulFunctionCall","src":"3439:74:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:21","type":""}],"src":"2677:853:21"},{"body":{"nodeType":"YulBlock","src":"3595:40:21","statements":[{"nodeType":"YulAssignment","src":"3606:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:21"},"nodeType":"YulFunctionCall","src":"3616:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:21","type":""}],"src":"3536:99:21"},{"body":{"nodeType":"YulBlock","src":"3669:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:21"},"nodeType":"YulFunctionCall","src":"3679:88:21"},"nodeType":"YulExpressionStatement","src":"3679:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:21"},"nodeType":"YulFunctionCall","src":"3776:15:21"},"nodeType":"YulExpressionStatement","src":"3776:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:21"},"nodeType":"YulFunctionCall","src":"3800:15:21"},"nodeType":"YulExpressionStatement","src":"3800:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:21"},{"body":{"nodeType":"YulBlock","src":"3878:269:21","statements":[{"nodeType":"YulAssignment","src":"3888:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:21"},"nodeType":"YulFunctionCall","src":"3898:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:21"},"nodeType":"YulFunctionCall","src":"3945:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:21","statements":[{"nodeType":"YulAssignment","src":"4010:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:21"},"nodeType":"YulFunctionCall","src":"4020:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:21"},"nodeType":"YulFunctionCall","src":"3969:26:21"},"nodeType":"YulIf","src":"3966:81:21"},{"body":{"nodeType":"YulBlock","src":"4099:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:21"},"nodeType":"YulFunctionCall","src":"4113:18:21"},"nodeType":"YulExpressionStatement","src":"4113:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:21"},"nodeType":"YulFunctionCall","src":"4083:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:21"},"nodeType":"YulFunctionCall","src":"4060:38:21"},"nodeType":"YulIf","src":"4057:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:21","type":""}],"src":"3827:320:21"},{"body":{"nodeType":"YulBlock","src":"4207:87:21","statements":[{"nodeType":"YulAssignment","src":"4217:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:21"},"nodeType":"YulFunctionCall","src":"4238:14:21"},"nodeType":"YulExpressionStatement","src":"4238:14:21"},{"nodeType":"YulAssignment","src":"4261:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:21"},"nodeType":"YulFunctionCall","src":"4269:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:21","type":""}],"src":"4153:141:21"},{"body":{"nodeType":"YulBlock","src":"4344:49:21","statements":[{"nodeType":"YulAssignment","src":"4354:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:21"},"nodeType":"YulFunctionCall","src":"4368:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:21"},"nodeType":"YulFunctionCall","src":"4364:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:21","type":""}],"src":"4300:93:21"},{"body":{"nodeType":"YulBlock","src":"4452:54:21","statements":[{"nodeType":"YulAssignment","src":"4462:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:21"},"nodeType":"YulFunctionCall","src":"4483:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:21","type":""}],"src":"4399:107:21"},{"body":{"nodeType":"YulBlock","src":"4588:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:21"},"nodeType":"YulFunctionCall","src":"4615:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:21"},"nodeType":"YulFunctionCall","src":"4654:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:21","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:21"},"nodeType":"YulFunctionCall","src":"4772:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:21"}]},{"nodeType":"YulAssignment","src":"4820:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:21"},"nodeType":"YulFunctionCall","src":"4840:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:21"},"nodeType":"YulFunctionCall","src":"4829:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:21"}]},{"nodeType":"YulAssignment","src":"4859:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:21"},"nodeType":"YulFunctionCall","src":"4879:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:21"},"nodeType":"YulFunctionCall","src":"4869:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:21","type":""}],"src":"4512:393:21"},{"body":{"nodeType":"YulBlock","src":"4956:32:21","statements":[{"nodeType":"YulAssignment","src":"4966:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:21","type":""}],"src":"4911:77:21"},{"body":{"nodeType":"YulBlock","src":"5026:28:21","statements":[{"nodeType":"YulAssignment","src":"5036:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:21","type":""}],"src":"4994:60:21"},{"body":{"nodeType":"YulBlock","src":"5120:82:21","statements":[{"nodeType":"YulAssignment","src":"5130:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:21"},"nodeType":"YulFunctionCall","src":"5170:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:21"},"nodeType":"YulFunctionCall","src":"5161:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:21"},"nodeType":"YulFunctionCall","src":"5143:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:21","type":""}],"src":"5060:142:21"},{"body":{"nodeType":"YulBlock","src":"5255:28:21","statements":[{"nodeType":"YulAssignment","src":"5265:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:21","type":""}],"src":"5208:75:21"},{"body":{"nodeType":"YulBlock","src":"5365:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:21"},"nodeType":"YulFunctionCall","src":"5399:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:21"},"nodeType":"YulFunctionCall","src":"5488:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:21"},"nodeType":"YulFunctionCall","src":"5509:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:21"},"nodeType":"YulFunctionCall","src":"5460:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:21"},"nodeType":"YulFunctionCall","src":"5447:105:21"},"nodeType":"YulExpressionStatement","src":"5447:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:21","type":""}],"src":"5289:269:21"},{"body":{"nodeType":"YulBlock","src":"5613:24:21","statements":[{"nodeType":"YulAssignment","src":"5623:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:21","type":""}],"src":"5564:73:21"},{"body":{"nodeType":"YulBlock","src":"5696:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:21"},"nodeType":"YulFunctionCall","src":"5720:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:21"},"nodeType":"YulFunctionCall","src":"5761:65:21"},"nodeType":"YulExpressionStatement","src":"5761:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:21","type":""}],"src":"5643:189:21"},{"body":{"nodeType":"YulBlock","src":"5888:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:21"},"nodeType":"YulFunctionCall","src":"5969:39:21"},"nodeType":"YulExpressionStatement","src":"5969:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:21"},"nodeType":"YulFunctionCall","src":"5905:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:21","statements":[{"nodeType":"YulAssignment","src":"5922:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:21"},"nodeType":"YulFunctionCall","src":"5931:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:21","statements":[]},"src":"5898:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:21","type":""}],"src":"5838:186:21"},{"body":{"nodeType":"YulBlock","src":"6109:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:21"},"nodeType":"YulFunctionCall","src":"6165:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:21"},"nodeType":"YulFunctionCall","src":"6249:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:21"},"nodeType":"YulFunctionCall","src":"6235:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:21","statements":[{"nodeType":"YulAssignment","src":"6438:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:21"},"nodeType":"YulFunctionCall","src":"6417:18:21"},"nodeType":"YulIf","src":"6414:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:21"},"nodeType":"YulFunctionCall","src":"6532:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:21"},"nodeType":"YulFunctionCall","src":"6518:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:21"},"nodeType":"YulFunctionCall","src":"6476:80:21"},"nodeType":"YulExpressionStatement","src":"6476:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:21"},"nodeType":"YulFunctionCall","src":"6123:11:21"},"nodeType":"YulIf","src":"6120:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:21","type":""}],"src":"6030:543:21"},{"body":{"nodeType":"YulBlock","src":"6642:54:21","statements":[{"nodeType":"YulAssignment","src":"6652:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:21"},"nodeType":"YulFunctionCall","src":"6673:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:21","type":""}],"src":"6579:117:21"},{"body":{"nodeType":"YulBlock","src":"6753:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:21"},"nodeType":"YulFunctionCall","src":"6808:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:21"},"nodeType":"YulFunctionCall","src":"6823:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:21"},"nodeType":"YulFunctionCall","src":"6779:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:21"},"nodeType":"YulFunctionCall","src":"6775:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:21","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:21"},"nodeType":"YulFunctionCall","src":"6850:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:21","type":""}],"src":"6702:169:21"},{"body":{"nodeType":"YulBlock","src":"6957:214:21","statements":[{"nodeType":"YulAssignment","src":"7090:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:21"},"nodeType":"YulFunctionCall","src":"7098:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:21"}]},{"nodeType":"YulAssignment","src":"7136:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:21"},"nodeType":"YulFunctionCall","src":"7153:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:21"},"nodeType":"YulFunctionCall","src":"7144:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:21","type":""}],"src":"6876:295:21"},{"body":{"nodeType":"YulBlock","src":"7268:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:21"},"nodeType":"YulFunctionCall","src":"7293:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:21"},"nodeType":"YulFunctionCall","src":"7417:18:21"},"nodeType":"YulExpressionStatement","src":"7417:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:21"},"nodeType":"YulFunctionCall","src":"7384:30:21"},"nodeType":"YulIf","src":"7381:56:21"},{"nodeType":"YulVariableDeclaration","src":"7447:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:21"},"nodeType":"YulFunctionCall","src":"7487:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:21"},"nodeType":"YulFunctionCall","src":"7461:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:21"},"nodeType":"YulFunctionCall","src":"7546:67:21"},"nodeType":"YulExpressionStatement","src":"7546:67:21"},{"nodeType":"YulVariableDeclaration","src":"7623:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:21","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:21"},"nodeType":"YulFunctionCall","src":"7756:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:21"},"nodeType":"YulFunctionCall","src":"7744:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:21"},"nodeType":"YulFunctionCall","src":"7794:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:21"},"nodeType":"YulFunctionCall","src":"7951:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:21"},"nodeType":"YulFunctionCall","src":"7945:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:21"},"nodeType":"YulFunctionCall","src":"7930:42:21"},"nodeType":"YulExpressionStatement","src":"7930:42:21"},{"nodeType":"YulAssignment","src":"7989:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:21"},"nodeType":"YulFunctionCall","src":"7999:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:21"}]},{"nodeType":"YulAssignment","src":"8030:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:21"},"nodeType":"YulFunctionCall","src":"8043:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:21"},"nodeType":"YulFunctionCall","src":"7875:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:21","statements":[{"nodeType":"YulAssignment","src":"7892:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:21"},"nodeType":"YulFunctionCall","src":"7897:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:21","statements":[]},"src":"7867:208:21"},{"body":{"nodeType":"YulBlock","src":"8111:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:21"},"nodeType":"YulFunctionCall","src":"8152:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:21"},"nodeType":"YulFunctionCall","src":"8146:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:21"},"nodeType":"YulFunctionCall","src":"8234:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:21"},"nodeType":"YulFunctionCall","src":"8204:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:21"},"nodeType":"YulFunctionCall","src":"8189:64:21"},"nodeType":"YulExpressionStatement","src":"8189:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:21"},"nodeType":"YulFunctionCall","src":"8091:19:21"},"nodeType":"YulIf","src":"8088:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:21"},"nodeType":"YulFunctionCall","src":"8297:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:21"},"nodeType":"YulFunctionCall","src":"8293:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:21"},"nodeType":"YulFunctionCall","src":"8280:36:21"},"nodeType":"YulExpressionStatement","src":"8280:36:21"}]},"nodeType":"YulCase","src":"7708:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:21","statements":[{"nodeType":"YulAssignment","src":"8412:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:21"},"nodeType":"YulFunctionCall","src":"8427:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:21"},"nodeType":"YulFunctionCall","src":"8421:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:21"},"nodeType":"YulIf","src":"8384:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:21"},"nodeType":"YulFunctionCall","src":"8487:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:21"},"nodeType":"YulFunctionCall","src":"8474:81:21"},"nodeType":"YulExpressionStatement","src":"8474:81:21"}]},"nodeType":"YulCase","src":"8335:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:21"},"nodeType":"YulFunctionCall","src":"7685:14:21"},"nodeType":"YulSwitch","src":"7678:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:21","type":""}],"src":"7176:1395:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017f5380380620017f58339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61123880620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b15565b60405180910390f35b6100e660048036038101906100e19190610bd0565b610308565b6040516100f39190610c2b565b60405180910390f35b61010461032b565b6040516101119190610c55565b60405180910390f35b610134600480360381019061012f9190610c70565b610335565b6040516101419190610c2b565b60405180910390f35b610152610364565b60405161015f9190610cdf565b60405180910390f35b610182600480360381019061017d9190610bd0565b61036d565b60405161018f9190610c2b565b60405180910390f35b6101b260048036038101906101ad9190610cfa565b6103a4565b6040516101bf9190610c55565b60405180910390f35b6101d06103ec565b6040516101dd9190610b15565b60405180910390f35b61020060048036038101906101fb9190610bd0565b61047e565b60405161020d9190610c2b565b60405180910390f35b610230600480360381019061022b9190610bd0565b6104f5565b60405161023d9190610c2b565b60405180910390f35b610260600480360381019061025b9190610d27565b610518565b60405161026d9190610c55565b60405180910390f35b60606003805461028590610d96565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d96565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610df6565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d96565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d96565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e9c565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f2e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fc0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c55565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df9061102c565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611150565b60405180910390fd5b6108e5838383610a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111e2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fe9190610df6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a629190610c55565b60405180910390a3610a75848484610a80565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abf578082015181840152602081019050610aa4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ae782610a85565b610af18185610a90565b9350610b01818560208601610aa1565b610b0a81610acb565b840191505092915050565b60006020820190508181036000830152610b2f8184610adc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6782610b3c565b9050919050565b610b7781610b5c565b8114610b8257600080fd5b50565b600081359050610b9481610b6e565b92915050565b6000819050919050565b610bad81610b9a565b8114610bb857600080fd5b50565b600081359050610bca81610ba4565b92915050565b60008060408385031215610be757610be6610b37565b5b6000610bf585828601610b85565b9250506020610c0685828601610bbb565b9150509250929050565b60008115159050919050565b610c2581610c10565b82525050565b6000602082019050610c406000830184610c1c565b92915050565b610c4f81610b9a565b82525050565b6000602082019050610c6a6000830184610c46565b92915050565b600080600060608486031215610c8957610c88610b37565b5b6000610c9786828701610b85565b9350506020610ca886828701610b85565b9250506040610cb986828701610bbb565b9150509250925092565b600060ff82169050919050565b610cd981610cc3565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600060208284031215610d1057610d0f610b37565b5b6000610d1e84828501610b85565b91505092915050565b60008060408385031215610d3e57610d3d610b37565b5b6000610d4c85828601610b85565b9250506020610d5d85828601610b85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dae57607f821691505b602082108103610dc157610dc0610d67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0182610b9a565b9150610e0c83610b9a565b9250828201905080821115610e2457610e23610dc7565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e86602583610a90565b9150610e9182610e2a565b604082019050919050565b60006020820190508181036000830152610eb581610e79565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f18602483610a90565b9150610f2382610ebc565b604082019050919050565b60006020820190508181036000830152610f4781610f0b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610faa602283610a90565b9150610fb582610f4e565b604082019050919050565b60006020820190508181036000830152610fd981610f9d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611016601d83610a90565b915061102182610fe0565b602082019050919050565b6000602082019050818103600083015261104581611009565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110a8602583610a90565b91506110b38261104c565b604082019050919050565b600060208201905081810360008301526110d78161109b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061113a602383610a90565b9150611145826110de565b604082019050919050565b600060208201905081810360008301526111698161112d565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111cc602683610a90565b91506111d782611170565b604082019050919050565b600060208201905081810360008301526111fb816111bf565b905091905056fea26469706673582212205fb237804e7579b215535d14fb2e49217ca9ad4074854c7a352db392e1008e9964736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17F5 CODESIZE SUB DUP1 PUSH3 0x17F5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1238 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA75 DUP5 DUP5 DUP5 PUSH2 0xA80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE7 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xAF1 DUP2 DUP6 PUSH2 0xA90 JUMP JUMPDEST SWAP4 POP PUSH2 0xB01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0xB0A DUP2 PUSH2 0xACB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 DUP5 PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB67 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB77 DUP2 PUSH2 0xB5C JUMP JUMPDEST DUP2 EQ PUSH2 0xB82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB94 DUP2 PUSH2 0xB6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP2 EQ PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCA DUP2 PUSH2 0xBA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH2 0xBE6 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF5 DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC06 DUP6 DUP3 DUP7 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xC10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4F DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC97 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA8 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB9 DUP7 DUP3 DUP8 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD9 DUP2 PUSH2 0xCC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1E DUP5 DUP3 DUP6 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3E JUMPI PUSH2 0xD3D PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD4C DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD5D DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDAE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0xD67 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE01 DUP3 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xE0C DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0xDC7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE86 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xE91 DUP3 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB5 DUP2 PUSH2 0xE79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF18 PUSH1 0x24 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xF23 DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF47 DUP2 PUSH2 0xF0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAA PUSH1 0x22 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB5 DUP3 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD9 DUP2 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1016 PUSH1 0x1D DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1021 DUP3 PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1045 DUP2 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A8 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B3 DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D7 DUP2 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113A PUSH1 0x23 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1145 DUP3 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1169 DUP2 PUSH2 0x112D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CC PUSH1 0x26 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D7 DUP3 PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11FB DUP2 PUSH2 0x11BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xB2 CALLDATACOPY DUP1 0x4E PUSH22 0x79B215535D14FB2E49217CA9AD4074854C7A352DB392 0xE1 STOP DUP15 SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1403:11214:3:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2052:5;2044;:13;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;:::i;:::-;;1978:113;;1403:11214;;7:75:21;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1403:11214:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_815":{"entryPoint":2688,"id":815,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":1447,"id":750,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_804":{"entryPoint":2683,"id":804,"parameterSlots":3,"returnSlots":0},"@_msgSender_2408":{"entryPoint":1439,"id":2408,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_793":{"entryPoint":1904,"id":793,"parameterSlots":3,"returnSlots":0},"@_transfer_577":{"entryPoint":2044,"id":577,"parameterSlots":3,"returnSlots":0},"@allowance_372":{"entryPoint":1304,"id":372,"parameterSlots":2,"returnSlots":1},"@approve_397":{"entryPoint":776,"id":397,"parameterSlots":2,"returnSlots":1},"@balanceOf_329":{"entryPoint":932,"id":329,"parameterSlots":1,"returnSlots":1},"@decimals_305":{"entryPoint":868,"id":305,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_500":{"entryPoint":1150,"id":500,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_459":{"entryPoint":877,"id":459,"parameterSlots":2,"returnSlots":1},"@name_285":{"entryPoint":630,"id":285,"parameterSlots":0,"returnSlots":1},"@symbol_295":{"entryPoint":1004,"id":295,"parameterSlots":0,"returnSlots":1},"@totalSupply_315":{"entryPoint":811,"id":315,"parameterSlots":0,"returnSlots":1},"@transferFrom_430":{"entryPoint":821,"id":430,"parameterSlots":3,"returnSlots":1},"@transfer_354":{"entryPoint":1269,"id":354,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3367,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3184,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3024,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3100,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4397,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3997,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4105,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4251,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3705,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3142,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3280,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3115,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4432,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4032,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4140,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4578,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4286,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3886,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3740,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3295,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2693,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2704,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3574,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2908,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3088,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2876,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2970,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3267,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2721,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3478,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3527,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3431,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2871,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2763,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4318,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3918,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4064,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4464,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4172,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3772,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3626,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2926,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2980,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:21","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:21","statements":[{"nodeType":"YulAssignment","src":"77:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:21"},"nodeType":"YulFunctionCall","src":"87:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:21","type":""}],"src":"7:99:21"},{"body":{"nodeType":"YulBlock","src":"208:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:21"},"nodeType":"YulFunctionCall","src":"218:19:21"},"nodeType":"YulExpressionStatement","src":"218:19:21"},{"nodeType":"YulAssignment","src":"246:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:21"},"nodeType":"YulFunctionCall","src":"261:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:21","type":""}],"src":"112:169:21"},{"body":{"nodeType":"YulBlock","src":"349:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:21"},"nodeType":"YulFunctionCall","src":"449:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:21"},"nodeType":"YulFunctionCall","src":"468:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:21"},"nodeType":"YulFunctionCall","src":"462:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:21"},"nodeType":"YulFunctionCall","src":"442:39:21"},"nodeType":"YulExpressionStatement","src":"442:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:21"},"nodeType":"YulFunctionCall","src":"386:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:21","statements":[{"nodeType":"YulAssignment","src":"402:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:21"},"nodeType":"YulFunctionCall","src":"407:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:21","statements":[]},"src":"378:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:21"},"nodeType":"YulFunctionCall","src":"507:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:21"},"nodeType":"YulFunctionCall","src":"500:27:21"},"nodeType":"YulExpressionStatement","src":"500:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:21","type":""}],"src":"287:246:21"},{"body":{"nodeType":"YulBlock","src":"587:54:21","statements":[{"nodeType":"YulAssignment","src":"597:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:21"},"nodeType":"YulFunctionCall","src":"611:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:21"},"nodeType":"YulFunctionCall","src":"627:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:21"},"nodeType":"YulFunctionCall","src":"607:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:21","type":""}],"src":"539:102:21"},{"body":{"nodeType":"YulBlock","src":"739:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:21"},"nodeType":"YulFunctionCall","src":"763:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:21","type":""}]},{"nodeType":"YulAssignment","src":"811:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:21"},"nodeType":"YulFunctionCall","src":"818:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:21"},"nodeType":"YulFunctionCall","src":"933:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:21"},"nodeType":"YulFunctionCall","src":"898:65:21"},"nodeType":"YulExpressionStatement","src":"898:65:21"},{"nodeType":"YulAssignment","src":"972:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:21"},"nodeType":"YulFunctionCall","src":"988:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:21"},"nodeType":"YulFunctionCall","src":"979:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:21","type":""}],"src":"647:377:21"},{"body":{"nodeType":"YulBlock","src":"1148:195:21","statements":[{"nodeType":"YulAssignment","src":"1158:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:21"},"nodeType":"YulFunctionCall","src":"1166:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:21"},"nodeType":"YulFunctionCall","src":"1201:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:21"},"nodeType":"YulFunctionCall","src":"1220:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:21"},"nodeType":"YulFunctionCall","src":"1194:47:21"},"nodeType":"YulExpressionStatement","src":"1194:47:21"},{"nodeType":"YulAssignment","src":"1250:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:21"},"nodeType":"YulFunctionCall","src":"1258:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:21","type":""}],"src":"1030:313:21"},{"body":{"nodeType":"YulBlock","src":"1389:35:21","statements":[{"nodeType":"YulAssignment","src":"1399:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:21"},"nodeType":"YulFunctionCall","src":"1409:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:21","type":""}],"src":"1349:75:21"},{"body":{"nodeType":"YulBlock","src":"1519:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:21"},"nodeType":"YulFunctionCall","src":"1529:12:21"},"nodeType":"YulExpressionStatement","src":"1529:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:21"},{"body":{"nodeType":"YulBlock","src":"1642:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:21"},"nodeType":"YulFunctionCall","src":"1652:12:21"},"nodeType":"YulExpressionStatement","src":"1652:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:21"},{"body":{"nodeType":"YulBlock","src":"1721:81:21","statements":[{"nodeType":"YulAssignment","src":"1731:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:21"},"nodeType":"YulFunctionCall","src":"1742:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:21","type":""}],"src":"1676:126:21"},{"body":{"nodeType":"YulBlock","src":"1853:51:21","statements":[{"nodeType":"YulAssignment","src":"1863:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:21"},"nodeType":"YulFunctionCall","src":"1874:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:21","type":""}],"src":"1808:96:21"},{"body":{"nodeType":"YulBlock","src":"1953:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:21"},"nodeType":"YulFunctionCall","src":"2012:12:21"},"nodeType":"YulExpressionStatement","src":"2012:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:21"},"nodeType":"YulFunctionCall","src":"1983:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:21"},"nodeType":"YulFunctionCall","src":"1973:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:21"},"nodeType":"YulFunctionCall","src":"1966:43:21"},"nodeType":"YulIf","src":"1963:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:21","type":""}],"src":"1910:122:21"},{"body":{"nodeType":"YulBlock","src":"2090:87:21","statements":[{"nodeType":"YulAssignment","src":"2100:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:21"},"nodeType":"YulFunctionCall","src":"2109:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:21"},"nodeType":"YulFunctionCall","src":"2138:33:21"},"nodeType":"YulExpressionStatement","src":"2138:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:21","type":""}],"src":"2038:139:21"},{"body":{"nodeType":"YulBlock","src":"2228:32:21","statements":[{"nodeType":"YulAssignment","src":"2238:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:21","type":""}],"src":"2183:77:21"},{"body":{"nodeType":"YulBlock","src":"2309:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:21"},"nodeType":"YulFunctionCall","src":"2368:12:21"},"nodeType":"YulExpressionStatement","src":"2368:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:21"},"nodeType":"YulFunctionCall","src":"2339:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:21"},"nodeType":"YulFunctionCall","src":"2329:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:21"},"nodeType":"YulFunctionCall","src":"2322:43:21"},"nodeType":"YulIf","src":"2319:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:21","type":""}],"src":"2266:122:21"},{"body":{"nodeType":"YulBlock","src":"2446:87:21","statements":[{"nodeType":"YulAssignment","src":"2456:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:21"},"nodeType":"YulFunctionCall","src":"2465:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:21"},"nodeType":"YulFunctionCall","src":"2494:33:21"},"nodeType":"YulExpressionStatement","src":"2494:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:21","type":""}],"src":"2394:139:21"},{"body":{"nodeType":"YulBlock","src":"2622:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:21"},"nodeType":"YulFunctionCall","src":"2670:79:21"},"nodeType":"YulExpressionStatement","src":"2670:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:21"},"nodeType":"YulFunctionCall","src":"2639:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:21"},"nodeType":"YulFunctionCall","src":"2635:32:21"},"nodeType":"YulIf","src":"2632:119:21"},{"nodeType":"YulBlock","src":"2761:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:21"},"nodeType":"YulFunctionCall","src":"2836:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:21"},"nodeType":"YulFunctionCall","src":"2815:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:21"}]}]},{"nodeType":"YulBlock","src":"2888:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:21"},"nodeType":"YulFunctionCall","src":"2964:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:21"},"nodeType":"YulFunctionCall","src":"2943:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:21","type":""}],"src":"2539:474:21"},{"body":{"nodeType":"YulBlock","src":"3061:48:21","statements":[{"nodeType":"YulAssignment","src":"3071:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:21"},"nodeType":"YulFunctionCall","src":"3089:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:21"},"nodeType":"YulFunctionCall","src":"3082:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:21","type":""}],"src":"3019:90:21"},{"body":{"nodeType":"YulBlock","src":"3174:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:21"},"nodeType":"YulFunctionCall","src":"3196:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:21"},"nodeType":"YulFunctionCall","src":"3184:34:21"},"nodeType":"YulExpressionStatement","src":"3184:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:21","type":""}],"src":"3115:109:21"},{"body":{"nodeType":"YulBlock","src":"3322:118:21","statements":[{"nodeType":"YulAssignment","src":"3332:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:21"},"nodeType":"YulFunctionCall","src":"3340:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:21"},"nodeType":"YulFunctionCall","src":"3415:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:21"},"nodeType":"YulFunctionCall","src":"3368:65:21"},"nodeType":"YulExpressionStatement","src":"3368:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:21","type":""}],"src":"3230:210:21"},{"body":{"nodeType":"YulBlock","src":"3511:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:21"},"nodeType":"YulFunctionCall","src":"3533:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:21"},"nodeType":"YulFunctionCall","src":"3521:37:21"},"nodeType":"YulExpressionStatement","src":"3521:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:21","type":""}],"src":"3446:118:21"},{"body":{"nodeType":"YulBlock","src":"3668:124:21","statements":[{"nodeType":"YulAssignment","src":"3678:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:21"},"nodeType":"YulFunctionCall","src":"3686:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:21"},"nodeType":"YulFunctionCall","src":"3767:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:21"},"nodeType":"YulFunctionCall","src":"3714:71:21"},"nodeType":"YulExpressionStatement","src":"3714:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:21","type":""}],"src":"3570:222:21"},{"body":{"nodeType":"YulBlock","src":"3898:519:21","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:21"},"nodeType":"YulFunctionCall","src":"3946:79:21"},"nodeType":"YulExpressionStatement","src":"3946:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:21"},"nodeType":"YulFunctionCall","src":"3915:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:21"},"nodeType":"YulFunctionCall","src":"3911:32:21"},"nodeType":"YulIf","src":"3908:119:21"},{"nodeType":"YulBlock","src":"4037:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:21"},"nodeType":"YulFunctionCall","src":"4112:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:21"},"nodeType":"YulFunctionCall","src":"4091:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:21"}]}]},{"nodeType":"YulBlock","src":"4164:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:21"},"nodeType":"YulFunctionCall","src":"4240:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:21"},"nodeType":"YulFunctionCall","src":"4219:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:21"}]}]},{"nodeType":"YulBlock","src":"4292:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:21"},"nodeType":"YulFunctionCall","src":"4368:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:21"},"nodeType":"YulFunctionCall","src":"4347:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:21","type":""}],"src":"3798:619:21"},{"body":{"nodeType":"YulBlock","src":"4466:43:21","statements":[{"nodeType":"YulAssignment","src":"4476:27:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:21"},"nodeType":"YulFunctionCall","src":"4487:16:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:21"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:21","type":""}],"src":"4423:86:21"},{"body":{"nodeType":"YulBlock","src":"4576:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:21"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:21"},"nodeType":"YulFunctionCall","src":"4598:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:21"},"nodeType":"YulFunctionCall","src":"4586:35:21"},"nodeType":"YulExpressionStatement","src":"4586:35:21"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:21","type":""}],"src":"4515:112:21"},{"body":{"nodeType":"YulBlock","src":"4727:120:21","statements":[{"nodeType":"YulAssignment","src":"4737:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:21"},"nodeType":"YulFunctionCall","src":"4745:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:21"},"nodeType":"YulFunctionCall","src":"4822:17:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:21"},"nodeType":"YulFunctionCall","src":"4773:67:21"},"nodeType":"YulExpressionStatement","src":"4773:67:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:21","type":""}],"src":"4633:214:21"},{"body":{"nodeType":"YulBlock","src":"4919:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:21"},"nodeType":"YulFunctionCall","src":"4967:79:21"},"nodeType":"YulExpressionStatement","src":"4967:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:21"},"nodeType":"YulFunctionCall","src":"4936:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:21"},"nodeType":"YulFunctionCall","src":"4932:32:21"},"nodeType":"YulIf","src":"4929:119:21"},{"nodeType":"YulBlock","src":"5058:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:21"},"nodeType":"YulFunctionCall","src":"5133:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:21"},"nodeType":"YulFunctionCall","src":"5112:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:21","type":""}],"src":"4853:329:21"},{"body":{"nodeType":"YulBlock","src":"5271:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:21"},"nodeType":"YulFunctionCall","src":"5319:79:21"},"nodeType":"YulExpressionStatement","src":"5319:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:21"},"nodeType":"YulFunctionCall","src":"5288:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:21"},"nodeType":"YulFunctionCall","src":"5284:32:21"},"nodeType":"YulIf","src":"5281:119:21"},{"nodeType":"YulBlock","src":"5410:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:21"},"nodeType":"YulFunctionCall","src":"5485:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:21"},"nodeType":"YulFunctionCall","src":"5464:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:21"}]}]},{"nodeType":"YulBlock","src":"5537:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:21"},"nodeType":"YulFunctionCall","src":"5613:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:21"},"nodeType":"YulFunctionCall","src":"5592:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:21","type":""}],"src":"5188:474:21"},{"body":{"nodeType":"YulBlock","src":"5696:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:21"},"nodeType":"YulFunctionCall","src":"5706:88:21"},"nodeType":"YulExpressionStatement","src":"5706:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:21"},"nodeType":"YulFunctionCall","src":"5803:15:21"},"nodeType":"YulExpressionStatement","src":"5803:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:21"},"nodeType":"YulFunctionCall","src":"5827:15:21"},"nodeType":"YulExpressionStatement","src":"5827:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:21"},{"body":{"nodeType":"YulBlock","src":"5905:269:21","statements":[{"nodeType":"YulAssignment","src":"5915:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:21"},"nodeType":"YulFunctionCall","src":"5925:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:21"},"nodeType":"YulFunctionCall","src":"5972:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:21","statements":[{"nodeType":"YulAssignment","src":"6037:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:21"},"nodeType":"YulFunctionCall","src":"6047:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:21"},"nodeType":"YulFunctionCall","src":"5996:26:21"},"nodeType":"YulIf","src":"5993:81:21"},{"body":{"nodeType":"YulBlock","src":"6126:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:21"},"nodeType":"YulFunctionCall","src":"6140:18:21"},"nodeType":"YulExpressionStatement","src":"6140:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:21"},"nodeType":"YulFunctionCall","src":"6110:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:21"},"nodeType":"YulFunctionCall","src":"6087:38:21"},"nodeType":"YulIf","src":"6084:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:21","type":""}],"src":"5854:320:21"},{"body":{"nodeType":"YulBlock","src":"6208:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:21"},"nodeType":"YulFunctionCall","src":"6218:88:21"},"nodeType":"YulExpressionStatement","src":"6218:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:21"},"nodeType":"YulFunctionCall","src":"6315:15:21"},"nodeType":"YulExpressionStatement","src":"6315:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:21"},"nodeType":"YulFunctionCall","src":"6339:15:21"},"nodeType":"YulExpressionStatement","src":"6339:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:21"},{"body":{"nodeType":"YulBlock","src":"6410:147:21","statements":[{"nodeType":"YulAssignment","src":"6420:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:21"},"nodeType":"YulFunctionCall","src":"6425:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:21"}]},{"nodeType":"YulAssignment","src":"6454:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:21"},"nodeType":"YulFunctionCall","src":"6459:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:21"}]},{"nodeType":"YulAssignment","src":"6488:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:21"},"nodeType":"YulFunctionCall","src":"6495:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:21"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:21"},"nodeType":"YulFunctionCall","src":"6530:18:21"},"nodeType":"YulExpressionStatement","src":"6530:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:21"},"nodeType":"YulFunctionCall","src":"6517:10:21"},"nodeType":"YulIf","src":"6514:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:21","type":""}],"src":"6366:191:21"},{"body":{"nodeType":"YulBlock","src":"6669:118:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:21"},"nodeType":"YulFunctionCall","src":"6687:14:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:21"},"nodeType":"YulFunctionCall","src":"6680:58:21"},"nodeType":"YulExpressionStatement","src":"6680:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:21"},"nodeType":"YulFunctionCall","src":"6755:15:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:21"},"nodeType":"YulFunctionCall","src":"6748:32:21"},"nodeType":"YulExpressionStatement","src":"6748:32:21"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:21","type":""}],"src":"6563:224:21"},{"body":{"nodeType":"YulBlock","src":"6939:220:21","statements":[{"nodeType":"YulAssignment","src":"6949:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:21","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:21"},"nodeType":"YulFunctionCall","src":"6956:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:21"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:21"},"nodeType":"YulFunctionCall","src":"7032:93:21"},"nodeType":"YulExpressionStatement","src":"7032:93:21"},{"nodeType":"YulAssignment","src":"7134:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:21"},"nodeType":"YulFunctionCall","src":"7141:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:21"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:21","type":""}],"src":"6793:366:21"},{"body":{"nodeType":"YulBlock","src":"7336:248:21","statements":[{"nodeType":"YulAssignment","src":"7346:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:21"},"nodeType":"YulFunctionCall","src":"7354:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:21"},"nodeType":"YulFunctionCall","src":"7389:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:21"},"nodeType":"YulFunctionCall","src":"7408:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:21"},"nodeType":"YulFunctionCall","src":"7382:47:21"},"nodeType":"YulExpressionStatement","src":"7382:47:21"},{"nodeType":"YulAssignment","src":"7438:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:21"},"nodeType":"YulFunctionCall","src":"7446:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:21","type":""}],"src":"7165:419:21"},{"body":{"nodeType":"YulBlock","src":"7696:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:21"},"nodeType":"YulFunctionCall","src":"7714:14:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:21"},"nodeType":"YulFunctionCall","src":"7707:58:21"},"nodeType":"YulExpressionStatement","src":"7707:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:21"},"nodeType":"YulFunctionCall","src":"7782:15:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:21"},"nodeType":"YulFunctionCall","src":"7775:31:21"},"nodeType":"YulExpressionStatement","src":"7775:31:21"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:21","type":""}],"src":"7590:223:21"},{"body":{"nodeType":"YulBlock","src":"7965:220:21","statements":[{"nodeType":"YulAssignment","src":"7975:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:21","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:21"},"nodeType":"YulFunctionCall","src":"7982:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:21"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:21"},"nodeType":"YulFunctionCall","src":"8058:93:21"},"nodeType":"YulExpressionStatement","src":"8058:93:21"},{"nodeType":"YulAssignment","src":"8160:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:21"},"nodeType":"YulFunctionCall","src":"8167:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:21"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:21","type":""}],"src":"7819:366:21"},{"body":{"nodeType":"YulBlock","src":"8362:248:21","statements":[{"nodeType":"YulAssignment","src":"8372:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:21"},"nodeType":"YulFunctionCall","src":"8380:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:21"},"nodeType":"YulFunctionCall","src":"8415:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:21"},"nodeType":"YulFunctionCall","src":"8434:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:21"},"nodeType":"YulFunctionCall","src":"8408:47:21"},"nodeType":"YulExpressionStatement","src":"8408:47:21"},{"nodeType":"YulAssignment","src":"8464:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:21"},"nodeType":"YulFunctionCall","src":"8472:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:21","type":""}],"src":"8191:419:21"},{"body":{"nodeType":"YulBlock","src":"8722:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:21"},"nodeType":"YulFunctionCall","src":"8740:14:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:21"},"nodeType":"YulFunctionCall","src":"8733:58:21"},"nodeType":"YulExpressionStatement","src":"8733:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:21"},"nodeType":"YulFunctionCall","src":"8808:15:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:21"},"nodeType":"YulFunctionCall","src":"8801:29:21"},"nodeType":"YulExpressionStatement","src":"8801:29:21"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:21","type":""}],"src":"8616:221:21"},{"body":{"nodeType":"YulBlock","src":"8989:220:21","statements":[{"nodeType":"YulAssignment","src":"8999:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:21","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:21"},"nodeType":"YulFunctionCall","src":"9006:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:21"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:21"},"nodeType":"YulFunctionCall","src":"9082:93:21"},"nodeType":"YulExpressionStatement","src":"9082:93:21"},{"nodeType":"YulAssignment","src":"9184:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:21"},"nodeType":"YulFunctionCall","src":"9191:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:21"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:21","type":""}],"src":"8843:366:21"},{"body":{"nodeType":"YulBlock","src":"9386:248:21","statements":[{"nodeType":"YulAssignment","src":"9396:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:21"},"nodeType":"YulFunctionCall","src":"9404:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:21"},"nodeType":"YulFunctionCall","src":"9439:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:21"},"nodeType":"YulFunctionCall","src":"9458:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:21"},"nodeType":"YulFunctionCall","src":"9432:47:21"},"nodeType":"YulExpressionStatement","src":"9432:47:21"},{"nodeType":"YulAssignment","src":"9488:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:21"},"nodeType":"YulFunctionCall","src":"9496:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:21","type":""}],"src":"9215:419:21"},{"body":{"nodeType":"YulBlock","src":"9746:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:21"},"nodeType":"YulFunctionCall","src":"9764:14:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:21"},"nodeType":"YulFunctionCall","src":"9757:55:21"},"nodeType":"YulExpressionStatement","src":"9757:55:21"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:21","type":""}],"src":"9640:179:21"},{"body":{"nodeType":"YulBlock","src":"9971:220:21","statements":[{"nodeType":"YulAssignment","src":"9981:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:21"},"nodeType":"YulFunctionCall","src":"9988:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:21"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:21"},"nodeType":"YulFunctionCall","src":"10064:93:21"},"nodeType":"YulExpressionStatement","src":"10064:93:21"},{"nodeType":"YulAssignment","src":"10166:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:21"},"nodeType":"YulFunctionCall","src":"10173:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:21"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:21","type":""}],"src":"9825:366:21"},{"body":{"nodeType":"YulBlock","src":"10368:248:21","statements":[{"nodeType":"YulAssignment","src":"10378:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:21"},"nodeType":"YulFunctionCall","src":"10386:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:21"},"nodeType":"YulFunctionCall","src":"10421:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:21"},"nodeType":"YulFunctionCall","src":"10440:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:21"},"nodeType":"YulFunctionCall","src":"10414:47:21"},"nodeType":"YulExpressionStatement","src":"10414:47:21"},{"nodeType":"YulAssignment","src":"10470:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:21"},"nodeType":"YulFunctionCall","src":"10478:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:21","type":""}],"src":"10197:419:21"},{"body":{"nodeType":"YulBlock","src":"10728:118:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:21"},"nodeType":"YulFunctionCall","src":"10746:14:21"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:21","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:21"},"nodeType":"YulFunctionCall","src":"10739:58:21"},"nodeType":"YulExpressionStatement","src":"10739:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:21"},"nodeType":"YulFunctionCall","src":"10814:15:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:21"},"nodeType":"YulFunctionCall","src":"10807:32:21"},"nodeType":"YulExpressionStatement","src":"10807:32:21"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:21","type":""}],"src":"10622:224:21"},{"body":{"nodeType":"YulBlock","src":"10998:220:21","statements":[{"nodeType":"YulAssignment","src":"11008:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:21","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:21"},"nodeType":"YulFunctionCall","src":"11015:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:21"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:21"},"nodeType":"YulFunctionCall","src":"11091:93:21"},"nodeType":"YulExpressionStatement","src":"11091:93:21"},{"nodeType":"YulAssignment","src":"11193:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:21"},"nodeType":"YulFunctionCall","src":"11200:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:21"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:21","type":""}],"src":"10852:366:21"},{"body":{"nodeType":"YulBlock","src":"11395:248:21","statements":[{"nodeType":"YulAssignment","src":"11405:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:21"},"nodeType":"YulFunctionCall","src":"11413:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:21"},"nodeType":"YulFunctionCall","src":"11448:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:21"},"nodeType":"YulFunctionCall","src":"11467:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:21"},"nodeType":"YulFunctionCall","src":"11441:47:21"},"nodeType":"YulExpressionStatement","src":"11441:47:21"},{"nodeType":"YulAssignment","src":"11497:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:21"},"nodeType":"YulFunctionCall","src":"11505:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:21","type":""}],"src":"11224:419:21"},{"body":{"nodeType":"YulBlock","src":"11755:116:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:21"},"nodeType":"YulFunctionCall","src":"11773:14:21"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:21","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:21"},"nodeType":"YulFunctionCall","src":"11766:58:21"},"nodeType":"YulExpressionStatement","src":"11766:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:21"},"nodeType":"YulFunctionCall","src":"11841:15:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:21"},"nodeType":"YulFunctionCall","src":"11834:30:21"},"nodeType":"YulExpressionStatement","src":"11834:30:21"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:21","type":""}],"src":"11649:222:21"},{"body":{"nodeType":"YulBlock","src":"12023:220:21","statements":[{"nodeType":"YulAssignment","src":"12033:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:21","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:21"},"nodeType":"YulFunctionCall","src":"12040:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:21"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:21"},"nodeType":"YulFunctionCall","src":"12116:93:21"},"nodeType":"YulExpressionStatement","src":"12116:93:21"},{"nodeType":"YulAssignment","src":"12218:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:21"},"nodeType":"YulFunctionCall","src":"12225:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:21"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:21","type":""}],"src":"11877:366:21"},{"body":{"nodeType":"YulBlock","src":"12420:248:21","statements":[{"nodeType":"YulAssignment","src":"12430:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:21"},"nodeType":"YulFunctionCall","src":"12438:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:21"},"nodeType":"YulFunctionCall","src":"12473:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:21"},"nodeType":"YulFunctionCall","src":"12492:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:21"},"nodeType":"YulFunctionCall","src":"12466:47:21"},"nodeType":"YulExpressionStatement","src":"12466:47:21"},{"nodeType":"YulAssignment","src":"12522:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:21"},"nodeType":"YulFunctionCall","src":"12530:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:21","type":""}],"src":"12249:419:21"},{"body":{"nodeType":"YulBlock","src":"12780:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:21"},"nodeType":"YulFunctionCall","src":"12798:14:21"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:21","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:21"},"nodeType":"YulFunctionCall","src":"12791:58:21"},"nodeType":"YulExpressionStatement","src":"12791:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:21"},"nodeType":"YulFunctionCall","src":"12866:15:21"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:21","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:21"},"nodeType":"YulFunctionCall","src":"12859:33:21"},"nodeType":"YulExpressionStatement","src":"12859:33:21"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:21","type":""}],"src":"12674:225:21"},{"body":{"nodeType":"YulBlock","src":"13051:220:21","statements":[{"nodeType":"YulAssignment","src":"13061:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:21"},"nodeType":"YulFunctionCall","src":"13068:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:21"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:21"},"nodeType":"YulFunctionCall","src":"13144:93:21"},"nodeType":"YulExpressionStatement","src":"13144:93:21"},{"nodeType":"YulAssignment","src":"13246:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:21"},"nodeType":"YulFunctionCall","src":"13253:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:21"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:21","type":""}],"src":"12905:366:21"},{"body":{"nodeType":"YulBlock","src":"13448:248:21","statements":[{"nodeType":"YulAssignment","src":"13458:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:21"},"nodeType":"YulFunctionCall","src":"13466:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:21"},"nodeType":"YulFunctionCall","src":"13501:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:21"},"nodeType":"YulFunctionCall","src":"13520:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:21"},"nodeType":"YulFunctionCall","src":"13494:47:21"},"nodeType":"YulExpressionStatement","src":"13494:47:21"},{"nodeType":"YulAssignment","src":"13550:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:21"},"nodeType":"YulFunctionCall","src":"13558:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:21","type":""}],"src":"13277:419:21"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b15565b60405180910390f35b6100e660048036038101906100e19190610bd0565b610308565b6040516100f39190610c2b565b60405180910390f35b61010461032b565b6040516101119190610c55565b60405180910390f35b610134600480360381019061012f9190610c70565b610335565b6040516101419190610c2b565b60405180910390f35b610152610364565b60405161015f9190610cdf565b60405180910390f35b610182600480360381019061017d9190610bd0565b61036d565b60405161018f9190610c2b565b60405180910390f35b6101b260048036038101906101ad9190610cfa565b6103a4565b6040516101bf9190610c55565b60405180910390f35b6101d06103ec565b6040516101dd9190610b15565b60405180910390f35b61020060048036038101906101fb9190610bd0565b61047e565b60405161020d9190610c2b565b60405180910390f35b610230600480360381019061022b9190610bd0565b6104f5565b60405161023d9190610c2b565b60405180910390f35b610260600480360381019061025b9190610d27565b610518565b60405161026d9190610c55565b60405180910390f35b60606003805461028590610d96565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d96565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610df6565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d96565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d96565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e9c565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f2e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fc0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c55565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df9061102c565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611150565b60405180910390fd5b6108e5838383610a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111e2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fe9190610df6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a629190610c55565b60405180910390a3610a75848484610a80565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abf578082015181840152602081019050610aa4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ae782610a85565b610af18185610a90565b9350610b01818560208601610aa1565b610b0a81610acb565b840191505092915050565b60006020820190508181036000830152610b2f8184610adc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6782610b3c565b9050919050565b610b7781610b5c565b8114610b8257600080fd5b50565b600081359050610b9481610b6e565b92915050565b6000819050919050565b610bad81610b9a565b8114610bb857600080fd5b50565b600081359050610bca81610ba4565b92915050565b60008060408385031215610be757610be6610b37565b5b6000610bf585828601610b85565b9250506020610c0685828601610bbb565b9150509250929050565b60008115159050919050565b610c2581610c10565b82525050565b6000602082019050610c406000830184610c1c565b92915050565b610c4f81610b9a565b82525050565b6000602082019050610c6a6000830184610c46565b92915050565b600080600060608486031215610c8957610c88610b37565b5b6000610c9786828701610b85565b9350506020610ca886828701610b85565b9250506040610cb986828701610bbb565b9150509250925092565b600060ff82169050919050565b610cd981610cc3565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600060208284031215610d1057610d0f610b37565b5b6000610d1e84828501610b85565b91505092915050565b60008060408385031215610d3e57610d3d610b37565b5b6000610d4c85828601610b85565b9250506020610d5d85828601610b85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dae57607f821691505b602082108103610dc157610dc0610d67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0182610b9a565b9150610e0c83610b9a565b9250828201905080821115610e2457610e23610dc7565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e86602583610a90565b9150610e9182610e2a565b604082019050919050565b60006020820190508181036000830152610eb581610e79565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f18602483610a90565b9150610f2382610ebc565b604082019050919050565b60006020820190508181036000830152610f4781610f0b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610faa602283610a90565b9150610fb582610f4e565b604082019050919050565b60006020820190508181036000830152610fd981610f9d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611016601d83610a90565b915061102182610fe0565b602082019050919050565b6000602082019050818103600083015261104581611009565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110a8602583610a90565b91506110b38261104c565b604082019050919050565b600060208201905081810360008301526110d78161109b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061113a602383610a90565b9150611145826110de565b604082019050919050565b600060208201905081810360008301526111698161112d565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111cc602683610a90565b91506111d782611170565b604082019050919050565b600060208201905081810360008301526111fb816111bf565b905091905056fea26469706673582212205fb237804e7579b215535d14fb2e49217ca9ad4074854c7a352db392e1008e9964736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA75 DUP5 DUP5 DUP5 PUSH2 0xA80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE7 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xAF1 DUP2 DUP6 PUSH2 0xA90 JUMP JUMPDEST SWAP4 POP PUSH2 0xB01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0xB0A DUP2 PUSH2 0xACB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 DUP5 PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB67 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB77 DUP2 PUSH2 0xB5C JUMP JUMPDEST DUP2 EQ PUSH2 0xB82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB94 DUP2 PUSH2 0xB6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP2 EQ PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCA DUP2 PUSH2 0xBA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH2 0xBE6 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF5 DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC06 DUP6 DUP3 DUP7 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xC10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4F DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC97 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA8 DUP7 DUP3 DUP8 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB9 DUP7 DUP3 DUP8 ADD PUSH2 0xBBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD9 DUP2 PUSH2 0xCC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1E DUP5 DUP3 DUP6 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3E JUMPI PUSH2 0xD3D PUSH2 0xB37 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD4C DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD5D DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDAE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0xD67 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE01 DUP3 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0xE0C DUP4 PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0xDC7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE86 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xE91 DUP3 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB5 DUP2 PUSH2 0xE79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF18 PUSH1 0x24 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xF23 DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF47 DUP2 PUSH2 0xF0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAA PUSH1 0x22 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB5 DUP3 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD9 DUP2 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1016 PUSH1 0x1D DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1021 DUP3 PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1045 DUP2 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A8 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B3 DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D7 DUP2 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113A PUSH1 0x23 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1145 DUP3 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1169 DUP2 PUSH2 0x112D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CC PUSH1 0x26 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D7 DUP3 PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11FB DUP2 PUSH2 0x11BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xB2 CALLDATACOPY DUP1 0x4E PUSH22 0x79B215535D14FB2E49217CA9AD4074854C7A352DB392 0xE1 STOP DUP15 SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1403:11214:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3093:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3976:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;3093:91::-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;3408:125::-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;3976:149::-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;640:96:12:-;693:7;719:10;712:17;;640:96;:::o;10110:370:3:-;10258:1;10241:19;;:5;:19;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10881:321;10761:441;;;:::o;7475:651::-;7617:1;7601:18;;:4;:18;;;7593:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7693:1;7679:16;;:2;:16;;;7671:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;7795:19;7817:9;:15;7827:4;7817:15;;;;;;;;;;;;;;;;7795:37;;7865:6;7850:11;:21;;7842:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:6;7966:11;:20;7948:9;:15;7958:4;7948:15;;;;;;;;;;;;;;;:38;;;;8023:6;8006:9;:13;8016:2;8006:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;;;:::i;:::-;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;:::-;7583:543;7475:651;;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;7:99:21:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x7fd2492be0468be4662081ee25cde38a31e4a0ceca0fed10160462389013910f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10c660ba772feee0fcb29319b15b328b429cd020079786e8d00992159f4b7b4e\",\"dweb:/ipfs/QmTjnb1FLbjHkgSZ7qcRZnNSwmZnobBpkJ9UWSc1SkVqhU\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol":{"ERC20VotesComp":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getCurrentVotes","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPriorVotes","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getCurrentVotes(address)":"b4b5ea57","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getPriorVotes(address,uint256)":"782d6fe1","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound's voting and delegation. This version exactly matches Compound's interface, with the drawback of only supporting supply up to (2^96^ - 1). NOTE: You should use this contract if you need exact compatibility with COMP (for example in order to use your token with Governor Alpha or Bravo) and if you are sure the supply cap of 2^96^ is enough for you. Otherwise, use the {ERC20Votes} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getCurrentVotes} and {getPriorVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getCurrentVotes(address)\":{\"details\":\"Comp version of the {getVotes} accessor, with `uint96` return type.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Comp version of the {getPastVotes} accessor, with `uint96` return type.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol\":\"ERC20VotesComp\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x7fd2492be0468be4662081ee25cde38a31e4a0ceca0fed10160462389013910f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10c660ba772feee0fcb29319b15b328b429cd020079786e8d00992159f4b7b4e\",\"dweb:/ipfs/QmTjnb1FLbjHkgSZ7qcRZnNSwmZnobBpkJ9UWSc1SkVqhU\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol\":{\"keccak256\":\"0x3e2cf78abe35170695b26fb9f820fe7bfeed607604f4d6c1261f811704c79f16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d677e79ed97d35fa1fa3df7b45df9de5947e0939bb7229bfb05bc00fef9ed45\",\"dweb:/ipfs/QmRiFfC3KJH6KX7hP5cdasrxvEVbB2Fy8UJDDbf2xNSax9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ERC20Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b01f8043c21a192f9908d1fc91dc38715870eaa246b85168ac5836ba3300b7d764736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x1F DUP1 NUMBER 0xC2 BYTE NOT 0x2F SWAP10 ADDMOD 0xD1 0xFC SWAP2 0xDC CODESIZE PUSH18 0x5870EAA246B85168AC5836BA3300B7D76473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"707:3748:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b01f8043c21a192f9908d1fc91dc38715870eaa246b85168ac5836ba3300b7d764736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x1F DUP1 NUMBER 0xC2 BYTE NOT 0x2F SWAP10 ADDMOD 0xD1 0xFC SWAP2 0xDC CODESIZE PUSH18 0x5870EAA246B85168AC5836BA3300B7D76473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"707:3748:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8111:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8111:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202bae9536ac7c538ee977f17079d929e640d7dab035bace3465e2b533fa3038ef64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xAE SWAP6 CALLDATASIZE 0xAC PUSH29 0x538EE977F17079D929E640D7DAB035BACE3465E2B533FA3038EF64736F PUSH13 0x63430008110033000000000000 ","sourceMap":"424:971:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202bae9536ac7c538ee977f17079d929e640d7dab035bace3465e2b533fa3038ef64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xAE SWAP6 CALLDATASIZE 0xAC PUSH29 0x538EE977F17079D929E640D7DAB035BACE3465E2B533FA3038EF64736F PUSH13 0x63430008110033000000000000 ","sourceMap":"424:971:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF REVERT 0xED PUSH20 0x2AEBF91122FCA0FD45FC9F602EC710ED32BEEF91 PUSH31 0xBC45ECBC29A65C64736F6C6343000811003300000000000000000000000000 ","sourceMap":"161:2235:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF REVERT 0xED PUSH20 0x2AEBF91122FCA0FD45FC9F602EC710ED32BEEF91 PUSH31 0xBC45ECBC29A65C64736F6C6343000811003300000000000000000000000000 ","sourceMap":"161:2235:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ef6cfbb5e83d942569b0ddb9e3ce1c76b387712b7bcedb44ec662561897c69064736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xF6 0xCF 0xBB 0x5E DUP4 0xD9 TIMESTAMP JUMP SWAP12 0xD 0xDB SWAP15 EXTCODECOPY 0xE1 0xC7 PUSH12 0x387712B7BCEDB44EC6625618 SWAP8 0xC6 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"369:8375:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ef6cfbb5e83d942569b0ddb9e3ce1c76b387712b7bcedb44ec662561897c69064736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xF6 0xCF 0xBB 0x5E DUP4 0xD9 TIMESTAMP JUMP SWAP12 0xD 0xDB SWAP15 EXTCODECOPY 0xE1 0xC7 PUSH12 0x387712B7BCEDB44EC6625618 SWAP8 0xC6 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"369:8375:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"EIP712":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":\"EIP712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"202:8624:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"202:8624:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220735ec1f653914c63bc4fafa80f087af90c0b4f7136e3ca338319e624b4f9ff3464736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x5EC1F653914C63BC4FAFA80F087AF90C0B4F7136 0xE3 0xCA CALLER DUP4 NOT 0xE6 0x24 0xB4 0xF9 SELFDESTRUCT CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"842:34685:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220735ec1f653914c63bc4fafa80f087af90c0b4f7136e3ca338319e624b4f9ff3464736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x5EC1F653914C63BC4FAFA80F087AF90C0B4F7136 0xE3 0xCA CALLER DUP4 NOT 0xE6 0x24 0xB4 0xF9 SELFDESTRUCT CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"842:34685:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]}},\"version\":1}"}},"contracts/MockStaking.sol":{"MockStaking":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_stakingToken","type":"address"},{"internalType":"uint16","name":"_penaltyDays","type":"uint16"},{"internalType":"uint16","name":"_penaltyBP","type":"uint16"},{"internalType":"address","name":"_treasury","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"penaltyBP","type":"uint16"}],"name":"SetPenaltyBP","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"treasury","type":"address"}],"name":"SetTreasury","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"penaltyBP","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"penaltyDays","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_time","type":"uint256"}],"name":"setCurrentTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_penaltyBP","type":"uint16"}],"name":"setPenaltyBP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_penaltyDays","type":"uint16"}],"name":"setPenaltyDays","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"_amount","type":"uint128"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakers","outputs":[{"internalType":"bool","name":"unstaked","type":"bool"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint48","name":"stakedTimestamp","type":"uint48"},{"internalType":"uint16","name":"penaltyDays","type":"uint16"},{"internalType":"uint16","name":"penaltyBP","type":"uint16"},{"internalType":"uint192","name":"shares","type":"uint192"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalShares","outputs":[{"internalType":"uint192","name":"","type":"uint192"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stakeIndex","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_209":{"entryPoint":null,"id":209,"parameterSlots":0,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_275":{"entryPoint":null,"id":275,"parameterSlots":2,"returnSlots":0},"@_5643":{"entryPoint":null,"id":5643,"parameterSlots":4,"returnSlots":0},"@_5784":{"entryPoint":null,"id":5784,"parameterSlots":4,"returnSlots":0},"@_msgSender_2408":{"entryPoint":680,"id":2408,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":688,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":1101,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$894_fromMemory":{"entryPoint":989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16_fromMemory":{"entryPoint":1052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$894t_uint16t_uint16t_address_fromMemory":{"entryPoint":1124,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c_to_t_string_memory_ptr_fromStack":{"entryPoint":2199,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack":{"entryPoint":2351,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2238,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2390,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1396,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1238,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2103,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1717,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":923,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$894":{"entryPoint":943,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":1012,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":891,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1532,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1678,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1552,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1872,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1417,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1343,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1842,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1542,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1810,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1296,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1249,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1592,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":886,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1433,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1797,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1650,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c":{"entryPoint":2120,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633":{"entryPoint":2272,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1446,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1602,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1075,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$894":{"entryPoint":963,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":1026,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1645,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9990:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"627:51:21","statements":[{"nodeType":"YulAssignment","src":"637:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"666:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"648:17:21"},"nodeType":"YulFunctionCall","src":"648:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"637:7:21"}]}]},"name":"cleanup_t_contract$_IERC20_$894","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"609:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"619:7:21","type":""}],"src":"568:110:21"},{"body":{"nodeType":"YulBlock","src":"741:93:21","statements":[{"body":{"nodeType":"YulBlock","src":"812:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"821:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"824:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"814:6:21"},"nodeType":"YulFunctionCall","src":"814:12:21"},"nodeType":"YulExpressionStatement","src":"814:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"764:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"803:5:21"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$894","nodeType":"YulIdentifier","src":"771:31:21"},"nodeType":"YulFunctionCall","src":"771:38:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"761:2:21"},"nodeType":"YulFunctionCall","src":"761:49:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"754:6:21"},"nodeType":"YulFunctionCall","src":"754:57:21"},"nodeType":"YulIf","src":"751:77:21"}]},"name":"validator_revert_t_contract$_IERC20_$894","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"734:5:21","type":""}],"src":"684:150:21"},{"body":{"nodeType":"YulBlock","src":"917:94:21","statements":[{"nodeType":"YulAssignment","src":"927:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"942:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"936:5:21"},"nodeType":"YulFunctionCall","src":"936:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"999:5:21"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$894","nodeType":"YulIdentifier","src":"958:40:21"},"nodeType":"YulFunctionCall","src":"958:47:21"},"nodeType":"YulExpressionStatement","src":"958:47:21"}]},"name":"abi_decode_t_contract$_IERC20_$894_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"895:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"903:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"911:5:21","type":""}],"src":"840:171:21"},{"body":{"nodeType":"YulBlock","src":"1061:45:21","statements":[{"nodeType":"YulAssignment","src":"1071:29:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1086:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1093:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1082:3:21"},"nodeType":"YulFunctionCall","src":"1082:18:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1071:7:21"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1043:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1053:7:21","type":""}],"src":"1017:89:21"},{"body":{"nodeType":"YulBlock","src":"1154:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"1210:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1219:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1222:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1212:6:21"},"nodeType":"YulFunctionCall","src":"1212:12:21"},"nodeType":"YulExpressionStatement","src":"1212:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1177:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1201:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"1184:16:21"},"nodeType":"YulFunctionCall","src":"1184:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1174:2:21"},"nodeType":"YulFunctionCall","src":"1174:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1167:6:21"},"nodeType":"YulFunctionCall","src":"1167:42:21"},"nodeType":"YulIf","src":"1164:62:21"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1147:5:21","type":""}],"src":"1112:120:21"},{"body":{"nodeType":"YulBlock","src":"1300:79:21","statements":[{"nodeType":"YulAssignment","src":"1310:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1325:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1319:5:21"},"nodeType":"YulFunctionCall","src":"1319:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1310:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1367:5:21"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"1341:25:21"},"nodeType":"YulFunctionCall","src":"1341:32:21"},"nodeType":"YulExpressionStatement","src":"1341:32:21"}]},"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1278:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1286:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1294:5:21","type":""}],"src":"1238:141:21"},{"body":{"nodeType":"YulBlock","src":"1428:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"1485:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1494:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1497:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1487:6:21"},"nodeType":"YulFunctionCall","src":"1487:12:21"},"nodeType":"YulExpressionStatement","src":"1487:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1451:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1476:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1458:17:21"},"nodeType":"YulFunctionCall","src":"1458:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1448:2:21"},"nodeType":"YulFunctionCall","src":"1448:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1441:6:21"},"nodeType":"YulFunctionCall","src":"1441:43:21"},"nodeType":"YulIf","src":"1438:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1421:5:21","type":""}],"src":"1385:122:21"},{"body":{"nodeType":"YulBlock","src":"1576:80:21","statements":[{"nodeType":"YulAssignment","src":"1586:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1601:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1595:5:21"},"nodeType":"YulFunctionCall","src":"1595:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1586:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1644:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1617:26:21"},"nodeType":"YulFunctionCall","src":"1617:33:21"},"nodeType":"YulExpressionStatement","src":"1617:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1554:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1562:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1570:5:21","type":""}],"src":"1513:143:21"},{"body":{"nodeType":"YulBlock","src":"1802:704:21","statements":[{"body":{"nodeType":"YulBlock","src":"1849:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1851:77:21"},"nodeType":"YulFunctionCall","src":"1851:79:21"},"nodeType":"YulExpressionStatement","src":"1851:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1823:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1832:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1819:3:21"},"nodeType":"YulFunctionCall","src":"1819:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1844:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1815:3:21"},"nodeType":"YulFunctionCall","src":"1815:33:21"},"nodeType":"YulIf","src":"1812:120:21"},{"nodeType":"YulBlock","src":"1942:142:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1957:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1971:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1961:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1986:88:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2046:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2057:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2042:3:21"},"nodeType":"YulFunctionCall","src":"2042:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2066:7:21"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$894_fromMemory","nodeType":"YulIdentifier","src":"1996:45:21"},"nodeType":"YulFunctionCall","src":"1996:78:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1986:6:21"}]}]},{"nodeType":"YulBlock","src":"2094:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2109:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2123:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2113:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2139:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2184:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2195:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2180:3:21"},"nodeType":"YulFunctionCall","src":"2180:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2204:7:21"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"2149:30:21"},"nodeType":"YulFunctionCall","src":"2149:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2139:6:21"}]}]},{"nodeType":"YulBlock","src":"2232:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2247:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2261:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2251:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2277:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2322:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2333:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2318:3:21"},"nodeType":"YulFunctionCall","src":"2318:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2342:7:21"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"2287:30:21"},"nodeType":"YulFunctionCall","src":"2287:63:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2277:6:21"}]}]},{"nodeType":"YulBlock","src":"2370:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2385:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2399:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2389:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2415:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2461:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2472:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2457:3:21"},"nodeType":"YulFunctionCall","src":"2457:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2481:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2425:31:21"},"nodeType":"YulFunctionCall","src":"2425:64:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2415:6:21"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$894t_uint16t_uint16t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1748:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1759:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1771:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1779:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1787:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1795:6:21","type":""}],"src":"1662:844:21"},{"body":{"nodeType":"YulBlock","src":"2571:40:21","statements":[{"nodeType":"YulAssignment","src":"2582:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2598:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:21"},"nodeType":"YulFunctionCall","src":"2592:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2582:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2554:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2564:6:21","type":""}],"src":"2512:99:21"},{"body":{"nodeType":"YulBlock","src":"2645:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2662:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2665:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2655:6:21"},"nodeType":"YulFunctionCall","src":"2655:88:21"},"nodeType":"YulExpressionStatement","src":"2655:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2759:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2762:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2752:6:21"},"nodeType":"YulFunctionCall","src":"2752:15:21"},"nodeType":"YulExpressionStatement","src":"2752:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2783:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2786:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2776:6:21"},"nodeType":"YulFunctionCall","src":"2776:15:21"},"nodeType":"YulExpressionStatement","src":"2776:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2617:180:21"},{"body":{"nodeType":"YulBlock","src":"2831:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2848:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2851:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2841:6:21"},"nodeType":"YulFunctionCall","src":"2841:88:21"},"nodeType":"YulExpressionStatement","src":"2841:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2945:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2948:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2938:6:21"},"nodeType":"YulFunctionCall","src":"2938:15:21"},"nodeType":"YulExpressionStatement","src":"2938:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2969:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2972:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2962:6:21"},"nodeType":"YulFunctionCall","src":"2962:15:21"},"nodeType":"YulExpressionStatement","src":"2962:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2803:180:21"},{"body":{"nodeType":"YulBlock","src":"3040:269:21","statements":[{"nodeType":"YulAssignment","src":"3050:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3064:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3070:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3060:3:21"},"nodeType":"YulFunctionCall","src":"3060:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3050:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"3081:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3111:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3117:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3107:3:21"},"nodeType":"YulFunctionCall","src":"3107:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3085:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3158:51:21","statements":[{"nodeType":"YulAssignment","src":"3172:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3186:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3194:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3182:3:21"},"nodeType":"YulFunctionCall","src":"3182:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3172:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3138:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3131:6:21"},"nodeType":"YulFunctionCall","src":"3131:26:21"},"nodeType":"YulIf","src":"3128:81:21"},{"body":{"nodeType":"YulBlock","src":"3261:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"3275:16:21"},"nodeType":"YulFunctionCall","src":"3275:18:21"},"nodeType":"YulExpressionStatement","src":"3275:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3225:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3248:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3256:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3245:2:21"},"nodeType":"YulFunctionCall","src":"3245:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3222:2:21"},"nodeType":"YulFunctionCall","src":"3222:38:21"},"nodeType":"YulIf","src":"3219:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3024:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3033:6:21","type":""}],"src":"2989:320:21"},{"body":{"nodeType":"YulBlock","src":"3369:87:21","statements":[{"nodeType":"YulAssignment","src":"3379:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3387:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3379:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3407:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"3410:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3400:6:21"},"nodeType":"YulFunctionCall","src":"3400:14:21"},"nodeType":"YulExpressionStatement","src":"3400:14:21"},{"nodeType":"YulAssignment","src":"3423:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3441:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3444:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3431:9:21"},"nodeType":"YulFunctionCall","src":"3431:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3423:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3356:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3364:4:21","type":""}],"src":"3315:141:21"},{"body":{"nodeType":"YulBlock","src":"3506:49:21","statements":[{"nodeType":"YulAssignment","src":"3516:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3534:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3541:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:21"},"nodeType":"YulFunctionCall","src":"3530:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"3546:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3526:3:21"},"nodeType":"YulFunctionCall","src":"3526:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3516:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3489:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3499:6:21","type":""}],"src":"3462:93:21"},{"body":{"nodeType":"YulBlock","src":"3614:54:21","statements":[{"nodeType":"YulAssignment","src":"3624:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3649:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"3655:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3645:3:21"},"nodeType":"YulFunctionCall","src":"3645:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3624:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3589:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"3595:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3605:8:21","type":""}],"src":"3561:107:21"},{"body":{"nodeType":"YulBlock","src":"3750:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3760:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"3781:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"3793:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3777:3:21"},"nodeType":"YulFunctionCall","src":"3777:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"3764:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3804:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"3835:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3846:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"3816:18:21"},"nodeType":"YulFunctionCall","src":"3816:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3808:4:21","type":""}]},{"nodeType":"YulAssignment","src":"3922:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"3953:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"3964:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"3934:18:21"},"nodeType":"YulFunctionCall","src":"3934:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3922:8:21"}]},{"nodeType":"YulAssignment","src":"3982:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3995:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4006:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4002:3:21"},"nodeType":"YulFunctionCall","src":"4002:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3991:3:21"},"nodeType":"YulFunctionCall","src":"3991:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3982:5:21"}]},{"nodeType":"YulAssignment","src":"4021:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4034:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4045:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"4055:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4041:3:21"},"nodeType":"YulFunctionCall","src":"4041:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4031:2:21"},"nodeType":"YulFunctionCall","src":"4031:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4021:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3711:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"3718:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"3730:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3743:6:21","type":""}],"src":"3674:393:21"},{"body":{"nodeType":"YulBlock","src":"4118:32:21","statements":[{"nodeType":"YulAssignment","src":"4128:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4139:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4128:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4100:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4110:7:21","type":""}],"src":"4073:77:21"},{"body":{"nodeType":"YulBlock","src":"4188:28:21","statements":[{"nodeType":"YulAssignment","src":"4198:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4205:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4198:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4174:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4184:3:21","type":""}],"src":"4156:60:21"},{"body":{"nodeType":"YulBlock","src":"4282:82:21","statements":[{"nodeType":"YulAssignment","src":"4292:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4350:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4332:17:21"},"nodeType":"YulFunctionCall","src":"4332:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4323:8:21"},"nodeType":"YulFunctionCall","src":"4323:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4305:17:21"},"nodeType":"YulFunctionCall","src":"4305:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4292:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4262:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4272:9:21","type":""}],"src":"4222:142:21"},{"body":{"nodeType":"YulBlock","src":"4417:28:21","statements":[{"nodeType":"YulAssignment","src":"4427:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4434:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4427:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4403:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4413:3:21","type":""}],"src":"4370:75:21"},{"body":{"nodeType":"YulBlock","src":"4527:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4537:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"4592:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4561:30:21"},"nodeType":"YulFunctionCall","src":"4561:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"4541:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4616:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4656:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4650:5:21"},"nodeType":"YulFunctionCall","src":"4650:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4663:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"4695:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"4671:23:21"},"nodeType":"YulFunctionCall","src":"4671:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"4622:27:21"},"nodeType":"YulFunctionCall","src":"4622:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4609:6:21"},"nodeType":"YulFunctionCall","src":"4609:105:21"},"nodeType":"YulExpressionStatement","src":"4609:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4504:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"4510:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"4518:7:21","type":""}],"src":"4451:269:21"},{"body":{"nodeType":"YulBlock","src":"4775:24:21","statements":[{"nodeType":"YulAssignment","src":"4785:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4792:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4785:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4771:3:21","type":""}],"src":"4726:73:21"},{"body":{"nodeType":"YulBlock","src":"4858:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4868:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"4882:30:21"},"nodeType":"YulFunctionCall","src":"4882:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"4872:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4967:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4973:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"4981:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4923:43:21"},"nodeType":"YulFunctionCall","src":"4923:65:21"},"nodeType":"YulExpressionStatement","src":"4923:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4844:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"4850:6:21","type":""}],"src":"4805:189:21"},{"body":{"nodeType":"YulBlock","src":"5050:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"5117:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5161:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5168:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5131:29:21"},"nodeType":"YulFunctionCall","src":"5131:39:21"},"nodeType":"YulExpressionStatement","src":"5131:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5070:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"5077:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5067:2:21"},"nodeType":"YulFunctionCall","src":"5067:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5082:26:21","statements":[{"nodeType":"YulAssignment","src":"5084:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5097:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5104:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:21"},"nodeType":"YulFunctionCall","src":"5093:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5084:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"5064:2:21","statements":[]},"src":"5060:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5038:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5045:3:21","type":""}],"src":"5000:186:21"},{"body":{"nodeType":"YulBlock","src":"5271:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"5297:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5311:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5359:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5327:31:21"},"nodeType":"YulFunctionCall","src":"5327:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"5315:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5378:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"5401:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"5429:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"5411:17:21"},"nodeType":"YulFunctionCall","src":"5411:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5397:3:21"},"nodeType":"YulFunctionCall","src":"5397:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"5382:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5598:27:21","statements":[{"nodeType":"YulAssignment","src":"5600:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"5615:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"5600:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"5582:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"5594:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5579:2:21"},"nodeType":"YulFunctionCall","src":"5579:18:21"},"nodeType":"YulIf","src":"5576:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"5667:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"5684:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"5712:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"5694:17:21"},"nodeType":"YulFunctionCall","src":"5694:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5680:3:21"},"nodeType":"YulFunctionCall","src":"5680:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"5638:28:21"},"nodeType":"YulFunctionCall","src":"5638:80:21"},"nodeType":"YulExpressionStatement","src":"5638:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"5288:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5285:2:21"},"nodeType":"YulFunctionCall","src":"5285:11:21"},"nodeType":"YulIf","src":"5282:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"5247:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"5254:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"5259:10:21","type":""}],"src":"5192:543:21"},{"body":{"nodeType":"YulBlock","src":"5804:54:21","statements":[{"nodeType":"YulAssignment","src":"5814:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5839:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"5845:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5835:3:21"},"nodeType":"YulFunctionCall","src":"5835:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5814:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"5779:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"5785:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5795:8:21","type":""}],"src":"5741:117:21"},{"body":{"nodeType":"YulBlock","src":"5915:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5925:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5974:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"5977:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5970:3:21"},"nodeType":"YulFunctionCall","src":"5970:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5989:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5985:3:21"},"nodeType":"YulFunctionCall","src":"5985:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"5941:28:21"},"nodeType":"YulFunctionCall","src":"5941:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5937:3:21"},"nodeType":"YulFunctionCall","src":"5937:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5929:4:21","type":""}]},{"nodeType":"YulAssignment","src":"6002:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6016:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"6022:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6012:3:21"},"nodeType":"YulFunctionCall","src":"6012:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6002:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5892:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"5898:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5908:6:21","type":""}],"src":"5864:169:21"},{"body":{"nodeType":"YulBlock","src":"6119:214:21","statements":[{"nodeType":"YulAssignment","src":"6252:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6279:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"6285:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6260:18:21"},"nodeType":"YulFunctionCall","src":"6260:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6252:4:21"}]},{"nodeType":"YulAssignment","src":"6298:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6309:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6319:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"6322:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6315:3:21"},"nodeType":"YulFunctionCall","src":"6315:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6306:2:21"},"nodeType":"YulFunctionCall","src":"6306:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"6298:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6100:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"6106:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6114:4:21","type":""}],"src":"6038:295:21"},{"body":{"nodeType":"YulBlock","src":"6430:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6441:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6488:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6455:32:21"},"nodeType":"YulFunctionCall","src":"6455:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"6445:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6577:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6579:16:21"},"nodeType":"YulFunctionCall","src":"6579:18:21"},"nodeType":"YulExpressionStatement","src":"6579:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6549:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6557:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6546:2:21"},"nodeType":"YulFunctionCall","src":"6546:30:21"},"nodeType":"YulIf","src":"6543:56:21"},{"nodeType":"YulVariableDeclaration","src":"6609:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6655:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6649:5:21"},"nodeType":"YulFunctionCall","src":"6649:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"6623:25:21"},"nodeType":"YulFunctionCall","src":"6623:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"6613:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6754:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"6760:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"6768:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"6708:45:21"},"nodeType":"YulFunctionCall","src":"6708:67:21"},"nodeType":"YulExpressionStatement","src":"6708:67:21"},{"nodeType":"YulVariableDeclaration","src":"6785:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6802:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"6789:9:21","type":""}]},{"nodeType":"YulAssignment","src":"6813:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6826:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6813:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"6877:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6891:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6910:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6922:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6918:3:21"},"nodeType":"YulFunctionCall","src":"6918:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6906:3:21"},"nodeType":"YulFunctionCall","src":"6906:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"6895:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6942:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6988:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6956:31:21"},"nodeType":"YulFunctionCall","src":"6956:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"6946:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7006:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7015:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7010:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7074:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7099:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7117:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7122:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7113:3:21"},"nodeType":"YulFunctionCall","src":"7113:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7107:5:21"},"nodeType":"YulFunctionCall","src":"7107:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7092:6:21"},"nodeType":"YulFunctionCall","src":"7092:42:21"},"nodeType":"YulExpressionStatement","src":"7092:42:21"},{"nodeType":"YulAssignment","src":"7151:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7165:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7173:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7161:3:21"},"nodeType":"YulFunctionCall","src":"7161:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7151:6:21"}]},{"nodeType":"YulAssignment","src":"7192:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7209:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7220:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7205:3:21"},"nodeType":"YulFunctionCall","src":"7205:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7192:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7040:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7043:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7037:2:21"},"nodeType":"YulFunctionCall","src":"7037:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7052:21:21","statements":[{"nodeType":"YulAssignment","src":"7054:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7063:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"7066:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7059:3:21"},"nodeType":"YulFunctionCall","src":"7059:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7054:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"7033:3:21","statements":[]},"src":"7029:208:21"},{"body":{"nodeType":"YulBlock","src":"7273:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7291:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7318:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7323:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7314:3:21"},"nodeType":"YulFunctionCall","src":"7314:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7308:5:21"},"nodeType":"YulFunctionCall","src":"7308:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"7295:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7358:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"7385:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7400:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7408:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7396:3:21"},"nodeType":"YulFunctionCall","src":"7396:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7366:18:21"},"nodeType":"YulFunctionCall","src":"7366:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7351:6:21"},"nodeType":"YulFunctionCall","src":"7351:64:21"},"nodeType":"YulExpressionStatement","src":"7351:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"7256:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"7265:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7253:2:21"},"nodeType":"YulFunctionCall","src":"7253:19:21"},"nodeType":"YulIf","src":"7250:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7449:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7463:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7471:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7459:3:21"},"nodeType":"YulFunctionCall","src":"7459:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"7475:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7455:3:21"},"nodeType":"YulFunctionCall","src":"7455:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7442:6:21"},"nodeType":"YulFunctionCall","src":"7442:36:21"},"nodeType":"YulExpressionStatement","src":"7442:36:21"}]},"nodeType":"YulCase","src":"6870:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6875:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7505:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7519:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7532:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7523:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7556:67:21","statements":[{"nodeType":"YulAssignment","src":"7574:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7593:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7598:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:21"},"nodeType":"YulFunctionCall","src":"7589:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7583:5:21"},"nodeType":"YulFunctionCall","src":"7583:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7574:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"7549:6:21"},"nodeType":"YulIf","src":"7546:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7643:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7702:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"7709:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"7649:52:21"},"nodeType":"YulFunctionCall","src":"7649:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7636:6:21"},"nodeType":"YulFunctionCall","src":"7636:81:21"},"nodeType":"YulExpressionStatement","src":"7636:81:21"}]},"nodeType":"YulCase","src":"7497:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6850:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6858:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6847:2:21"},"nodeType":"YulFunctionCall","src":"6847:14:21"},"nodeType":"YulSwitch","src":"6840:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6419:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"6425:3:21","type":""}],"src":"6338:1395:21"},{"body":{"nodeType":"YulBlock","src":"7835:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7852:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7857:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7845:6:21"},"nodeType":"YulFunctionCall","src":"7845:19:21"},"nodeType":"YulExpressionStatement","src":"7845:19:21"},{"nodeType":"YulAssignment","src":"7873:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7892:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7897:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7888:3:21"},"nodeType":"YulFunctionCall","src":"7888:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7873:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7807:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"7812:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7823:11:21","type":""}],"src":"7739:169:21"},{"body":{"nodeType":"YulBlock","src":"8020:133:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8042:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8050:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8038:3:21"},"nodeType":"YulFunctionCall","src":"8038:14:21"},{"hexValue":"43796265724172656e615374616b696e673a207374616b696e6720746f6b656e","kind":"string","nodeType":"YulLiteral","src":"8054:34:21","type":"","value":"CyberArenaStaking: staking token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8031:6:21"},"nodeType":"YulFunctionCall","src":"8031:58:21"},"nodeType":"YulExpressionStatement","src":"8031:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8110:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8118:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8106:3:21"},"nodeType":"YulFunctionCall","src":"8106:15:21"},{"hexValue":"20697320746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"8123:22:21","type":"","value":" is the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8099:6:21"},"nodeType":"YulFunctionCall","src":"8099:47:21"},"nodeType":"YulExpressionStatement","src":"8099:47:21"}]},"name":"store_literal_in_memory_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8012:6:21","type":""}],"src":"7914:239:21"},{"body":{"nodeType":"YulBlock","src":"8305:220:21","statements":[{"nodeType":"YulAssignment","src":"8315:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8381:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8386:2:21","type":"","value":"52"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8322:58:21"},"nodeType":"YulFunctionCall","src":"8322:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8315:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8487:3:21"}],"functionName":{"name":"store_literal_in_memory_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c","nodeType":"YulIdentifier","src":"8398:88:21"},"nodeType":"YulFunctionCall","src":"8398:93:21"},"nodeType":"YulExpressionStatement","src":"8398:93:21"},{"nodeType":"YulAssignment","src":"8500:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8511:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8516:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8507:3:21"},"nodeType":"YulFunctionCall","src":"8507:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8500:3:21"}]}]},"name":"abi_encode_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8293:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8301:3:21","type":""}],"src":"8159:366:21"},{"body":{"nodeType":"YulBlock","src":"8702:248:21","statements":[{"nodeType":"YulAssignment","src":"8712:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8724:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8735:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8720:3:21"},"nodeType":"YulFunctionCall","src":"8720:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8712:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8759:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8770:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8755:3:21"},"nodeType":"YulFunctionCall","src":"8755:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8778:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8784:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8774:3:21"},"nodeType":"YulFunctionCall","src":"8774:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8748:6:21"},"nodeType":"YulFunctionCall","src":"8748:47:21"},"nodeType":"YulExpressionStatement","src":"8748:47:21"},{"nodeType":"YulAssignment","src":"8804:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8938:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8812:124:21"},"nodeType":"YulFunctionCall","src":"8812:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8804:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8682:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8697:4:21","type":""}],"src":"8531:419:21"},{"body":{"nodeType":"YulBlock","src":"9062:128:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9084:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9092:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9080:3:21"},"nodeType":"YulFunctionCall","src":"9080:14:21"},{"hexValue":"43796265724172656e615374616b696e673a2074726561737572792069732074","kind":"string","nodeType":"YulLiteral","src":"9096:34:21","type":"","value":"CyberArenaStaking: treasury is t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9073:6:21"},"nodeType":"YulFunctionCall","src":"9073:58:21"},"nodeType":"YulExpressionStatement","src":"9073:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9152:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9160:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9148:3:21"},"nodeType":"YulFunctionCall","src":"9148:15:21"},{"hexValue":"6865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"9165:17:21","type":"","value":"he zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9141:6:21"},"nodeType":"YulFunctionCall","src":"9141:42:21"},"nodeType":"YulExpressionStatement","src":"9141:42:21"}]},"name":"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9054:6:21","type":""}],"src":"8956:234:21"},{"body":{"nodeType":"YulBlock","src":"9342:220:21","statements":[{"nodeType":"YulAssignment","src":"9352:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9418:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9423:2:21","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9359:58:21"},"nodeType":"YulFunctionCall","src":"9359:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9352:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9524:3:21"}],"functionName":{"name":"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","nodeType":"YulIdentifier","src":"9435:88:21"},"nodeType":"YulFunctionCall","src":"9435:93:21"},"nodeType":"YulExpressionStatement","src":"9435:93:21"},{"nodeType":"YulAssignment","src":"9537:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9548:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9553:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9544:3:21"},"nodeType":"YulFunctionCall","src":"9544:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9537:3:21"}]}]},"name":"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9330:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9338:3:21","type":""}],"src":"9196:366:21"},{"body":{"nodeType":"YulBlock","src":"9739:248:21","statements":[{"nodeType":"YulAssignment","src":"9749:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9761:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9772:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9757:3:21"},"nodeType":"YulFunctionCall","src":"9757:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9749:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9796:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9807:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9792:3:21"},"nodeType":"YulFunctionCall","src":"9792:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9815:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9821:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9811:3:21"},"nodeType":"YulFunctionCall","src":"9811:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9785:6:21"},"nodeType":"YulFunctionCall","src":"9785:47:21"},"nodeType":"YulExpressionStatement","src":"9785:47:21"},{"nodeType":"YulAssignment","src":"9841:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9975:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9849:124:21"},"nodeType":"YulFunctionCall","src":"9849:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9841:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9719:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9734:4:21","type":""}],"src":"9568:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$894(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$894(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$894(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$894_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$894(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$894t_uint16t_uint16t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$894_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: staking token\")\n\n        mstore(add(memPtr, 32), \" is the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: treasury is t\")\n\n        mstore(add(memPtr, 32), \"he zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526000600b553480156200001657600080fd5b5060405162003b6438038062003b6483398181016040528101906200003c919062000464565b838383836040518060400160405280600a81526020017f5374616b656420434154000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f73744341540000000000000000000000000000000000000000000000000000008152508160039081620000bd919062000750565b508060049081620000cf919062000750565b505050620000f2620000e6620002a860201b60201c565b620002b060201b60201c565b6001600681905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036200016c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016390620008be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001d59062000956565b60405180910390fd5b83600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600960006101000a81548161ffff021916908361ffff16021790555081600960026101000a81548161ffff021916908361ffff16021790555080600960046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505062000978565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003a8826200037b565b9050919050565b6000620003bc826200039b565b9050919050565b620003ce81620003af565b8114620003da57600080fd5b50565b600081519050620003ee81620003c3565b92915050565b600061ffff82169050919050565b6200040d81620003f4565b81146200041957600080fd5b50565b6000815190506200042d8162000402565b92915050565b6200043e816200039b565b81146200044a57600080fd5b50565b6000815190506200045e8162000433565b92915050565b6000806000806080858703121562000481576200048062000376565b5b60006200049187828801620003dd565b9450506020620004a4878288016200041c565b9350506040620004b7878288016200041c565b9250506060620004ca878288016200044d565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200055857607f821691505b6020821081036200056e576200056d62000510565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005d87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000599565b620005e4868362000599565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620006316200062b6200062584620005fc565b62000606565b620005fc565b9050919050565b6000819050919050565b6200064d8362000610565b620006656200065c8262000638565b848454620005a6565b825550505050565b600090565b6200067c6200066d565b6200068981848462000642565b505050565b5b81811015620006b157620006a560008262000672565b6001810190506200068f565b5050565b601f8211156200070057620006ca8162000574565b620006d58462000589565b81016020851015620006e5578190505b620006fd620006f48562000589565b8301826200068e565b50505b505050565b600082821c905092915050565b6000620007256000198460080262000705565b1980831691505092915050565b600062000740838362000712565b9150826002028217905092915050565b6200075b82620004d6565b67ffffffffffffffff811115620007775762000776620004e1565b5b6200078382546200053f565b62000790828285620006b5565b600060209050601f831160018114620007c85760008415620007b3578287015190505b620007bf858262000732565b8655506200082f565b601f198416620007d88662000574565b60005b828110156200080257848901518255600182019150602085019450602081019050620007db565b868310156200082257848901516200081e601f89168262000712565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f43796265724172656e615374616b696e673a207374616b696e6720746f6b656e60008201527f20697320746865207a65726f2061646472657373000000000000000000000000602082015250565b6000620008a660348362000837565b9150620008b38262000848565b604082019050919050565b60006020820190508181036000830152620008d98162000897565b9050919050565b7f43796265724172656e615374616b696e673a207472656173757279206973207460008201527f6865207a65726f20616464726573730000000000000000000000000000000000602082015250565b60006200093e602f8362000837565b91506200094b82620008e0565b604082019050919050565b6000602082019050818103600083015262000971816200092f565b9050919050565b6131dc80620009886000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806372f702f3116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461048c578063ee2b44e4146104bc578063f0f44260146104da578063f2fde38b146104f65761018e565b8063a9059cbb1461040b578063bacb4c571461043b578063c8b6cbf7146104575761018e565b806372f702f31461034757806388fe2be8146103655780638da5cb5b1461038157806395d89b411461039f578063a457c2d7146103bd578063a5582c3e146103ed5761018e565b80632e17de781161014b5780633a98ef39116101255780633a98ef39146102d157806361d027b3146102ef57806370a082311461030d578063715018a61461033d5761018e565b80632e17de7814610267578063313ce5671461028357806339509351146102a15761018e565b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101e157806322f8e566146101ff57806323b872dd1461021b5780632932e77a1461024b575b600080fd5b61019b610512565b6040516101a89190611f55565b60405180910390f35b6101cb60048036038101906101c69190612010565b6105a4565b6040516101d8919061206b565b60405180910390f35b6101e96105c7565b6040516101f69190612095565b60405180910390f35b610219600480360381019061021491906120b0565b6105d1565b005b610235600480360381019061023091906120dd565b6105db565b604051610242919061206b565b60405180910390f35b6102656004803603810190610260919061216a565b61060a565b005b610281600480360381019061027c91906120b0565b610632565b005b61028b610a7c565b60405161029891906121b3565b60405180910390f35b6102bb60048036038101906102b69190612010565b610a85565b6040516102c8919061206b565b60405180910390f35b6102d9610abc565b6040516102e69190612201565b60405180910390f35b6102f7610ae6565b604051610304919061222b565b60405180910390f35b61032760048036038101906103229190612246565b610b0c565b6040516103349190612095565b60405180910390f35b610345610b54565b005b61034f610b68565b60405161035c91906122d2565b60405180910390f35b61037f600480360381019061037a9190612335565b610b8e565b005b610389610f1e565b604051610396919061222b565b60405180910390f35b6103a7610f48565b6040516103b49190611f55565b60405180910390f35b6103d760048036038101906103d29190612010565b610fda565b6040516103e4919061206b565b60405180910390f35b6103f5611051565b6040516104029190612371565b60405180910390f35b61042560048036038101906104209190612010565b611065565b604051610432919061206b565b60405180910390f35b6104556004803603810190610450919061216a565b611088565b005b610471600480360381019061046c9190612010565b611130565b604051610483969594939291906123bc565b60405180910390f35b6104a660048036038101906104a1919061241d565b611204565b6040516104b39190612095565b60405180910390f35b6104c461128b565b6040516104d19190612371565b60405180910390f35b6104f460048036038101906104ef9190612246565b61129f565b005b610510600480360381019061050b9190612246565b611391565b005b6060600380546105219061248c565b80601f016020809104026020016040519081016040528092919081815260200182805461054d9061248c565b801561059a5780601f1061056f5761010080835404028352916020019161059a565b820191906000526020600020905b81548152906001019060200180831161057d57829003601f168201915b5050505050905090565b6000806105af611414565b90506105bc81858561141c565b600191505092915050565b6000600254905090565b80600b8190555050565b6000806105e6611414565b90506105f38582856115e5565b6105fe858585611671565b60019150509392505050565b6106126116ac565b80600960006101000a81548161ffff021916908361ffff16021790555050565b600260065403610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066e90612509565b60405180910390fd5b6002600681905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90612575565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061075657610755612595565b5b906000526020600020906002020190508060000160009054906101000a900460ff16156107b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107af90612636565b60405180910390fd5b6107f4338260000160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1661172a565b8060010160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16600a60008282829054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff166108519190612685565b92506101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060018160000160006101000a81548160ff02191690831515021790555060006108be611900565b620151808360000160179054906101000a900461ffff1661ffff166108e391906126d1565b8360000160119054906101000a900465ffffffffffff16610904919061270e565b65ffffffffffff1611156109e5576127108260000160199054906101000a900461ffff1661ffff168360000160019054906101000a90046fffffffffffffffffffffffffffffffff166109579190612748565b61096191906127b4565b6fffffffffffffffffffffffffffffffff1690506109e4600960049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661190a9092919063ffffffff16565b5b610a6f33828460000160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16610a2791906127e5565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661190a9092919063ffffffff16565b5050600160068190555050565b60006012905090565b600080610a90611414565b9050610ab1818585610aa28589611204565b610aac9190612819565b61141c565b600191505092915050565b600a60009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1681565b600960049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b5c6116ac565b610b666000611990565b565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260065403610bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bca90612509565b60405180910390fd5b6002600681905550610c3c3330836fffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a56909392919063ffffffff16565b610c5833826fffffffffffffffffffffffffffffffff16611adf565b806fffffffffffffffffffffffffffffffff16600a60008282829054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16610c9f919061284d565b92506101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff160217905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405280600015158152602001836fffffffffffffffffffffffffffffffff168152602001610d58611900565b65ffffffffffff168152602001600960009054906101000a900461ffff1661ffff168152602001600960029054906101000a900461ffff1661ffff168152602001836fffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060408201518160000160116101000a81548165ffffffffffff021916908365ffffffffffff16021790555060608201518160000160176101000a81548161ffff021916908361ffff16021790555060808201518160000160196101000a81548161ffff021916908361ffff16021790555060a08201518160010160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff1602179055505050600160068190555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610f579061248c565b80601f0160208091040260200160405190810160405280929190818152602001828054610f839061248c565b8015610fd05780601f10610fa557610100808354040283529160200191610fd0565b820191906000526020600020905b815481529060010190602001808311610fb357829003601f168201915b5050505050905090565b600080610fe5611414565b90506000610ff38286611204565b905083811015611038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102f9061290b565b60405180910390fd5b611045828686840361141c565b60019250505092915050565b600960029054906101000a900461ffff1681565b600080611070611414565b905061107d818585611671565b600191505092915050565b6110906116ac565b6127108161ffff1611156110d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d09061299d565b60405180910390fd5b80600960026101000a81548161ffff021916908361ffff1602179055507f49df4ae990079b53e42ad090f1fc5b7311dd70675bccd49294082a2ed78d6194816040516111259190612371565b60405180910390a150565b6008602052816000526040600020818154811061114c57600080fd5b9060005260206000209060020201600091509150508060000160009054906101000a900460ff16908060000160019054906101000a90046fffffffffffffffffffffffffffffffff16908060000160119054906101000a900465ffffffffffff16908060000160179054906101000a900461ffff16908060000160199054906101000a900461ffff16908060010160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16905086565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600960009054906101000a900461ffff1681565b6112a76116ac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130d90612a2f565b60405180910390fd5b80600960046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcb7ef3e545f5cdb893f5c568ba710fe08f336375a2d9fd66e161033f8fc09ef381604051611386919061222b565b60405180910390a150565b6113996116ac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ff90612ac1565b60405180910390fd5b61141181611990565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361148b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148290612b53565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f190612be5565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115d89190612095565b60405180910390a3505050565b60006115f18484611204565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461166b578181101561165d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165490612c51565b60405180910390fd5b61166a848484840361141c565b5b50505050565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a390612ce3565b60405180910390fd5b6116b4611414565b73ffffffffffffffffffffffffffffffffffffffff166116d2610f1e565b73ffffffffffffffffffffffffffffffffffffffff1614611728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171f90612d4f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179090612de1565b60405180910390fd5b6117a582600083611c3e565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561182b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182290612e73565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461188291906127e5565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516118e79190612095565b60405180910390a36118fb83600084611c43565b505050565b6000600b54905090565b61198b8363a9059cbb60e01b8484604051602401611929929190612e93565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c48565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611ad9846323b872dd60e01b858585604051602401611a7793929190612ebc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c48565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4590612f3f565b60405180910390fd5b611b5a60008383611c3e565b8060026000828254611b6c9190612819565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611bc19190612819565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611c269190612095565b60405180910390a3611c3a60008383611c43565b5050565b505050565b505050565b6000611caa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611d0f9092919063ffffffff16565b9050600081511115611d0a5780806020019051810190611cca9190612f8b565b611d09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d009061302a565b60405180910390fd5b5b505050565b6060611d1e8484600085611d27565b90509392505050565b606082471015611d6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d63906130bc565b60405180910390fd5b611d7585611e3b565b611db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dab90613128565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611ddd919061318f565b60006040518083038185875af1925050503d8060008114611e1a576040519150601f19603f3d011682016040523d82523d6000602084013e611e1f565b606091505b5091509150611e2f828286611e5e565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611e6e57829050611ebe565b600083511115611e815782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eb59190611f55565b60405180910390fd5b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611eff578082015181840152602081019050611ee4565b60008484015250505050565b6000601f19601f8301169050919050565b6000611f2782611ec5565b611f318185611ed0565b9350611f41818560208601611ee1565b611f4a81611f0b565b840191505092915050565b60006020820190508181036000830152611f6f8184611f1c565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fa782611f7c565b9050919050565b611fb781611f9c565b8114611fc257600080fd5b50565b600081359050611fd481611fae565b92915050565b6000819050919050565b611fed81611fda565b8114611ff857600080fd5b50565b60008135905061200a81611fe4565b92915050565b6000806040838503121561202757612026611f77565b5b600061203585828601611fc5565b925050602061204685828601611ffb565b9150509250929050565b60008115159050919050565b61206581612050565b82525050565b6000602082019050612080600083018461205c565b92915050565b61208f81611fda565b82525050565b60006020820190506120aa6000830184612086565b92915050565b6000602082840312156120c6576120c5611f77565b5b60006120d484828501611ffb565b91505092915050565b6000806000606084860312156120f6576120f5611f77565b5b600061210486828701611fc5565b935050602061211586828701611fc5565b925050604061212686828701611ffb565b9150509250925092565b600061ffff82169050919050565b61214781612130565b811461215257600080fd5b50565b6000813590506121648161213e565b92915050565b6000602082840312156121805761217f611f77565b5b600061218e84828501612155565b91505092915050565b600060ff82169050919050565b6121ad81612197565b82525050565b60006020820190506121c860008301846121a4565b92915050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6121fb816121ce565b82525050565b600060208201905061221660008301846121f2565b92915050565b61222581611f9c565b82525050565b6000602082019050612240600083018461221c565b92915050565b60006020828403121561225c5761225b611f77565b5b600061226a84828501611fc5565b91505092915050565b6000819050919050565b600061229861229361228e84611f7c565b612273565b611f7c565b9050919050565b60006122aa8261227d565b9050919050565b60006122bc8261229f565b9050919050565b6122cc816122b1565b82525050565b60006020820190506122e760008301846122c3565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b612312816122ed565b811461231d57600080fd5b50565b60008135905061232f81612309565b92915050565b60006020828403121561234b5761234a611f77565b5b600061235984828501612320565b91505092915050565b61236b81612130565b82525050565b60006020820190506123866000830184612362565b92915050565b612395816122ed565b82525050565b600065ffffffffffff82169050919050565b6123b68161239b565b82525050565b600060c0820190506123d1600083018961205c565b6123de602083018861238c565b6123eb60408301876123ad565b6123f86060830186612362565b6124056080830185612362565b61241260a08301846121f2565b979650505050505050565b6000806040838503121561243457612433611f77565b5b600061244285828601611fc5565b925050602061245385828601611fc5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806124a457607f821691505b6020821081036124b7576124b661245d565b5b50919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006124f3601f83611ed0565b91506124fe826124bd565b602082019050919050565b60006020820190508181036000830152612522816124e6565b9050919050565b7f43796265724172656e615374616b696e673a20696e76616c696420696e646578600082015250565b600061255f602083611ed0565b915061256a82612529565b602082019050919050565b6000602082019050818103600083015261258e81612552565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f43796265724172656e615374616b696e673a20756e7374616b656420616c726560008201527f6164790000000000000000000000000000000000000000000000000000000000602082015250565b6000612620602383611ed0565b915061262b826125c4565b604082019050919050565b6000602082019050818103600083015261264f81612613565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612690826121ce565b915061269b836121ce565b9250828203905077ffffffffffffffffffffffffffffffffffffffffffffffff8111156126cb576126ca612656565b5b92915050565b60006126dc8261239b565b91506126e78361239b565b92508282026126f58161239b565b915080821461270757612706612656565b5b5092915050565b60006127198261239b565b91506127248361239b565b9250828201905065ffffffffffff81111561274257612741612656565b5b92915050565b6000612753826122ed565b915061275e836122ed565b925082820261276c816122ed565b915080821461277e5761277d612656565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006127bf826122ed565b91506127ca836122ed565b9250826127da576127d9612785565b5b828204905092915050565b60006127f082611fda565b91506127fb83611fda565b925082820390508181111561281357612812612656565b5b92915050565b600061282482611fda565b915061282f83611fda565b925082820190508082111561284757612846612656565b5b92915050565b6000612858826121ce565b9150612863836121ce565b9250828201905077ffffffffffffffffffffffffffffffffffffffffffffffff81111561289357612892612656565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006128f5602583611ed0565b915061290082612899565b604082019050919050565b60006020820190508181036000830152612924816128e8565b9050919050565b7f5374616b696e673a2070656e616c74792042502065786365656473206c696d6960008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612987602183611ed0565b91506129928261292b565b604082019050919050565b600060208201905081810360008301526129b68161297a565b9050919050565b7f43796265724172656e615374616b696e673a207472656173757279206973207460008201527f6865207a65726f20616464726573730000000000000000000000000000000000602082015250565b6000612a19602f83611ed0565b9150612a24826129bd565b604082019050919050565b60006020820190508181036000830152612a4881612a0c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612aab602683611ed0565b9150612ab682612a4f565b604082019050919050565b60006020820190508181036000830152612ada81612a9e565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612b3d602483611ed0565b9150612b4882612ae1565b604082019050919050565b60006020820190508181036000830152612b6c81612b30565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612bcf602283611ed0565b9150612bda82612b73565b604082019050919050565b60006020820190508181036000830152612bfe81612bc2565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612c3b601d83611ed0565b9150612c4682612c05565b602082019050919050565b60006020820190508181036000830152612c6a81612c2e565b9050919050565b7f43796265724172656e615374616b696e673a204e4f4e5f5452414e534645524160008201527f424c450000000000000000000000000000000000000000000000000000000000602082015250565b6000612ccd602383611ed0565b9150612cd882612c71565b604082019050919050565b60006020820190508181036000830152612cfc81612cc0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612d39602083611ed0565b9150612d4482612d03565b602082019050919050565b60006020820190508181036000830152612d6881612d2c565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612dcb602183611ed0565b9150612dd682612d6f565b604082019050919050565b60006020820190508181036000830152612dfa81612dbe565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612e5d602283611ed0565b9150612e6882612e01565b604082019050919050565b60006020820190508181036000830152612e8c81612e50565b9050919050565b6000604082019050612ea8600083018561221c565b612eb56020830184612086565b9392505050565b6000606082019050612ed1600083018661221c565b612ede602083018561221c565b612eeb6040830184612086565b949350505050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000612f29601f83611ed0565b9150612f3482612ef3565b602082019050919050565b60006020820190508181036000830152612f5881612f1c565b9050919050565b612f6881612050565b8114612f7357600080fd5b50565b600081519050612f8581612f5f565b92915050565b600060208284031215612fa157612fa0611f77565b5b6000612faf84828501612f76565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000613014602a83611ed0565b915061301f82612fb8565b604082019050919050565b6000602082019050818103600083015261304381613007565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006130a6602683611ed0565b91506130b18261304a565b604082019050919050565b600060208201905081810360008301526130d581613099565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613112601d83611ed0565b915061311d826130dc565b602082019050919050565b6000602082019050818103600083015261314181613105565b9050919050565b600081519050919050565b600081905092915050565b600061316982613148565b6131738185613153565b9350613183818560208601611ee1565b80840191505092915050565b600061319b828461315e565b91508190509291505056fea2646970667358221220ce94e68a5be287d9d180618f41ce547ed51f5393a7ffbe19db5ad3c0e72567aa64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3B64 CODESIZE SUB DUP1 PUSH3 0x3B64 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x464 JUMP JUMPDEST DUP4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616B65642043415400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7374434154000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xBD SWAP2 SWAP1 PUSH3 0x750 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xCF SWAP2 SWAP1 PUSH3 0x750 JUMP JUMPDEST POP POP POP PUSH3 0xF2 PUSH3 0xE6 PUSH3 0x2A8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2B0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x16C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x163 SWAP1 PUSH3 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1D5 SWAP1 PUSH3 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP PUSH3 0x978 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A8 DUP3 PUSH3 0x37B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3BC DUP3 PUSH3 0x39B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3CE DUP2 PUSH3 0x3AF JUMP JUMPDEST DUP2 EQ PUSH3 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3EE DUP2 PUSH3 0x3C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x40D DUP2 PUSH3 0x3F4 JUMP JUMPDEST DUP2 EQ PUSH3 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x42D DUP2 PUSH3 0x402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x43E DUP2 PUSH3 0x39B JUMP JUMPDEST DUP2 EQ PUSH3 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x45E DUP2 PUSH3 0x433 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x481 JUMPI PUSH3 0x480 PUSH3 0x376 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x491 DUP8 DUP3 DUP9 ADD PUSH3 0x3DD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x4A4 DUP8 DUP3 DUP9 ADD PUSH3 0x41C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x4B7 DUP8 DUP3 DUP9 ADD PUSH3 0x41C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x4CA DUP8 DUP3 DUP9 ADD PUSH3 0x44D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x558 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x56E JUMPI PUSH3 0x56D PUSH3 0x510 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x5D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x599 JUMP JUMPDEST PUSH3 0x5E4 DUP7 DUP4 PUSH3 0x599 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x631 PUSH3 0x62B PUSH3 0x625 DUP5 PUSH3 0x5FC JUMP JUMPDEST PUSH3 0x606 JUMP JUMPDEST PUSH3 0x5FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x64D DUP4 PUSH3 0x610 JUMP JUMPDEST PUSH3 0x665 PUSH3 0x65C DUP3 PUSH3 0x638 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x5A6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x67C PUSH3 0x66D JUMP JUMPDEST PUSH3 0x689 DUP2 DUP5 DUP5 PUSH3 0x642 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x6B1 JUMPI PUSH3 0x6A5 PUSH1 0x0 DUP3 PUSH3 0x672 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x68F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x700 JUMPI PUSH3 0x6CA DUP2 PUSH3 0x574 JUMP JUMPDEST PUSH3 0x6D5 DUP5 PUSH3 0x589 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6E5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6FD PUSH3 0x6F4 DUP6 PUSH3 0x589 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x68E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x725 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x705 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x740 DUP4 DUP4 PUSH3 0x712 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x75B DUP3 PUSH3 0x4D6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x777 JUMPI PUSH3 0x776 PUSH3 0x4E1 JUMP JUMPDEST JUMPDEST PUSH3 0x783 DUP3 SLOAD PUSH3 0x53F JUMP JUMPDEST PUSH3 0x790 DUP3 DUP3 DUP6 PUSH3 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7C8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x7B3 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x7BF DUP6 DUP3 PUSH3 0x732 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x82F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7D8 DUP7 PUSH3 0x574 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x802 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7DB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x822 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x81E PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x712 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A207374616B696E6720746F6B656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20697320746865207A65726F2061646472657373000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8A6 PUSH1 0x34 DUP4 PUSH3 0x837 JUMP JUMPDEST SWAP2 POP PUSH3 0x8B3 DUP3 PUSH3 0x848 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x8D9 DUP2 PUSH3 0x897 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A2074726561737572792069732074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6865207A65726F20616464726573730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93E PUSH1 0x2F DUP4 PUSH3 0x837 JUMP JUMPDEST SWAP2 POP PUSH3 0x94B DUP3 PUSH3 0x8E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x971 DUP2 PUSH3 0x92F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31DC DUP1 PUSH3 0x988 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xEE2B44E4 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4F6 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xBACB4C57 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0xC8B6CBF7 EQ PUSH2 0x457 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x88FE2BE8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xA5582C3E EQ PUSH2 0x3ED JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x2E17DE78 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3A98EF39 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33D JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A1 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x22F8E566 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x2932E77A EQ PUSH2 0x24B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x2201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH2 0xB54 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34F PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2335 JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x389 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C4 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH2 0x129F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x510 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x521 SWAP1 PUSH2 0x248C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54D SWAP1 PUSH2 0x248C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5AF PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BC DUP2 DUP6 DUP6 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E6 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F3 DUP6 DUP3 DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x5FE DUP6 DUP6 DUP6 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x612 PUSH2 0x16AC JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66E SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x2575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x756 JUMPI PUSH2 0x755 PUSH2 0x2595 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F4 CALLER DUP3 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172A JUMP JUMPDEST DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x2685 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x8BE PUSH2 0x1900 JUMP JUMPDEST PUSH3 0x15180 DUP4 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x26D1 JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x11 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x904 SWAP2 SWAP1 PUSH2 0x270E JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x9E5 JUMPI PUSH2 0x2710 DUP3 PUSH1 0x0 ADD PUSH1 0x19 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x2748 JUMP JUMPDEST PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x9E4 PUSH1 0x9 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x190A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xA6F CALLER DUP3 DUP5 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA27 SWAP2 SWAP1 PUSH2 0x27E5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x190A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA90 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0xAB1 DUP2 DUP6 DUP6 PUSH2 0xAA2 DUP6 DUP10 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0xAAC SWAP2 SWAP1 PUSH2 0x2819 JUMP JUMPDEST PUSH2 0x141C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5C PUSH2 0x16AC JUMP JUMPDEST PUSH2 0xB66 PUSH1 0x0 PUSH2 0x1990 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xBD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCA SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0xC3C CALLER ADDRESS DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A56 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC58 CALLER DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1ADF JUMP JUMPDEST DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC9F SWAP2 SWAP1 PUSH2 0x284D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD58 PUSH2 0x1900 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x11 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x19 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF57 SWAP1 PUSH2 0x248C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF83 SWAP1 PUSH2 0x248C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFD0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFA5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFD0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFB3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFE5 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFF3 DUP3 DUP7 PUSH2 0x1204 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1045 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x141C JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1070 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x107D DUP2 DUP6 DUP6 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1090 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D0 SWAP1 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x49DF4AE990079B53E42AD090F1FC5B7311DD70675BCCD49294082A2ED78D6194 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1125 SWAP2 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x114C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x11 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x19 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x12A7 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130D SWAP1 PUSH2 0x2A2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCB7EF3E545F5CDB893F5C568BA710FE08F336375A2D9FD66E161033F8FC09EF3 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1386 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1399 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FF SWAP1 PUSH2 0x2AC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1411 DUP2 PUSH2 0x1990 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x148B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1482 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F1 SWAP1 PUSH2 0x2BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15D8 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F1 DUP5 DUP5 PUSH2 0x1204 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x166B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1654 SWAP1 PUSH2 0x2C51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x166A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x141C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A3 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B4 PUSH2 0x1414 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16D2 PUSH2 0xF1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1728 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171F SWAP1 PUSH2 0x2D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1790 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A5 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x182B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1822 SWAP1 PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1882 SWAP2 SWAP1 PUSH2 0x27E5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x18E7 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x18FB DUP4 PUSH1 0x0 DUP5 PUSH2 0x1C43 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x198B DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1929 SWAP3 SWAP2 SWAP1 PUSH2 0x2E93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C48 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1AD9 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A77 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C48 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B45 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B5A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C3E JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B6C SWAP2 SWAP1 PUSH2 0x2819 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BC1 SWAP2 SWAP1 PUSH2 0x2819 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C26 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1C3A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C43 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D0F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1D0A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CCA SWAP2 SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH2 0x1D09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D00 SWAP1 PUSH2 0x302A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D1E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D63 SWAP1 PUSH2 0x30BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D75 DUP6 PUSH2 0x1E3B JUMP JUMPDEST PUSH2 0x1DB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DAB SWAP1 PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1DDD SWAP2 SWAP1 PUSH2 0x318F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E1A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E2F DUP3 DUP3 DUP7 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E6E JUMPI DUP3 SWAP1 POP PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1E81 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB5 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EFF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F27 DUP3 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x1F31 DUP2 DUP6 PUSH2 0x1ED0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F41 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST PUSH2 0x1F4A DUP2 PUSH2 0x1F0B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6F DUP2 DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA7 DUP3 PUSH2 0x1F7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB7 DUP2 PUSH2 0x1F9C JUMP JUMPDEST DUP2 EQ PUSH2 0x1FC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FD4 DUP2 PUSH2 0x1FAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FED DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x200A DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2027 JUMPI PUSH2 0x2026 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2035 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2046 DUP6 DUP3 DUP7 ADD PUSH2 0x1FFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2065 DUP2 PUSH2 0x2050 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2080 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x205C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x208F DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20AA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C6 JUMPI PUSH2 0x20C5 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D4 DUP5 DUP3 DUP6 ADD PUSH2 0x1FFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20F6 JUMPI PUSH2 0x20F5 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2104 DUP7 DUP3 DUP8 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2115 DUP7 DUP3 DUP8 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2126 DUP7 DUP3 DUP8 ADD PUSH2 0x1FFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2147 DUP2 PUSH2 0x2130 JUMP JUMPDEST DUP2 EQ PUSH2 0x2152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2164 DUP2 PUSH2 0x213E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2180 JUMPI PUSH2 0x217F PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x218E DUP5 DUP3 DUP6 ADD PUSH2 0x2155 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21AD DUP2 PUSH2 0x2197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21FB DUP2 PUSH2 0x21CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2216 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2225 DUP2 PUSH2 0x1F9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2240 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x221C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225C JUMPI PUSH2 0x225B PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x226A DUP5 DUP3 DUP6 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2298 PUSH2 0x2293 PUSH2 0x228E DUP5 PUSH2 0x1F7C JUMP JUMPDEST PUSH2 0x2273 JUMP JUMPDEST PUSH2 0x1F7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22AA DUP3 PUSH2 0x227D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BC DUP3 PUSH2 0x229F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CC DUP2 PUSH2 0x22B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2312 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP2 EQ PUSH2 0x231D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x232F DUP2 PUSH2 0x2309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x234B JUMPI PUSH2 0x234A PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2359 DUP5 DUP3 DUP6 ADD PUSH2 0x2320 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x236B DUP2 PUSH2 0x2130 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2386 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2362 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2395 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23B6 DUP2 PUSH2 0x239B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x23D1 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x23DE PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x238C JUMP JUMPDEST PUSH2 0x23EB PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x23F8 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2362 JUMP JUMPDEST PUSH2 0x2405 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2362 JUMP JUMPDEST PUSH2 0x2412 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x21F2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2434 JUMPI PUSH2 0x2433 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2442 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2453 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24B7 JUMPI PUSH2 0x24B6 PUSH2 0x245D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 PUSH1 0x1F DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FE DUP3 PUSH2 0x24BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2522 DUP2 PUSH2 0x24E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A20696E76616C696420696E646578 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255F PUSH1 0x20 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x256A DUP3 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x258E DUP2 PUSH2 0x2552 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A20756E7374616B656420616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164790000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2620 PUSH1 0x23 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x262B DUP3 PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x264F DUP2 PUSH2 0x2613 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2690 DUP3 PUSH2 0x21CE JUMP JUMPDEST SWAP2 POP PUSH2 0x269B DUP4 PUSH2 0x21CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26CB JUMPI PUSH2 0x26CA PUSH2 0x2656 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DC DUP3 PUSH2 0x239B JUMP JUMPDEST SWAP2 POP PUSH2 0x26E7 DUP4 PUSH2 0x239B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x26F5 DUP2 PUSH2 0x239B JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2707 JUMPI PUSH2 0x2706 PUSH2 0x2656 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2719 DUP3 PUSH2 0x239B JUMP JUMPDEST SWAP2 POP PUSH2 0x2724 DUP4 PUSH2 0x239B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH6 0xFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2742 JUMPI PUSH2 0x2741 PUSH2 0x2656 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2753 DUP3 PUSH2 0x22ED JUMP JUMPDEST SWAP2 POP PUSH2 0x275E DUP4 PUSH2 0x22ED JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x276C DUP2 PUSH2 0x22ED JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x277E JUMPI PUSH2 0x277D PUSH2 0x2656 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27BF DUP3 PUSH2 0x22ED JUMP JUMPDEST SWAP2 POP PUSH2 0x27CA DUP4 PUSH2 0x22ED JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x27DA JUMPI PUSH2 0x27D9 PUSH2 0x2785 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F0 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x27FB DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2813 JUMPI PUSH2 0x2812 PUSH2 0x2656 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2824 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x282F DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2847 JUMPI PUSH2 0x2846 PUSH2 0x2656 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2858 DUP3 PUSH2 0x21CE JUMP JUMPDEST SWAP2 POP PUSH2 0x2863 DUP4 PUSH2 0x21CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2893 JUMPI PUSH2 0x2892 PUSH2 0x2656 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F5 PUSH1 0x25 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2900 DUP3 PUSH2 0x2899 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2924 DUP2 PUSH2 0x28E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A2070656E616C74792042502065786365656473206C696D69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2987 PUSH1 0x21 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2992 DUP3 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29B6 DUP2 PUSH2 0x297A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A2074726561737572792069732074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6865207A65726F20616464726573730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A19 PUSH1 0x2F DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A24 DUP3 PUSH2 0x29BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A48 DUP2 PUSH2 0x2A0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AAB PUSH1 0x26 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB6 DUP3 PUSH2 0x2A4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ADA DUP2 PUSH2 0x2A9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B3D PUSH1 0x24 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B48 DUP3 PUSH2 0x2AE1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B6C DUP2 PUSH2 0x2B30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCF PUSH1 0x22 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDA DUP3 PUSH2 0x2B73 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BFE DUP2 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3B PUSH1 0x1D DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C46 DUP3 PUSH2 0x2C05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C6A DUP2 PUSH2 0x2C2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A204E4F4E5F5452414E5346455241 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x424C450000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CCD PUSH1 0x23 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD8 DUP3 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CFC DUP2 PUSH2 0x2CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D39 PUSH1 0x20 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D44 DUP3 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D68 DUP2 PUSH2 0x2D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DCB PUSH1 0x21 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD6 DUP3 PUSH2 0x2D6F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DFA DUP2 PUSH2 0x2DBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E5D PUSH1 0x22 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E68 DUP3 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E8C DUP2 PUSH2 0x2E50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EA8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x221C JUMP JUMPDEST PUSH2 0x2EB5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2086 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2ED1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x221C JUMP JUMPDEST PUSH2 0x2EDE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x221C JUMP JUMPDEST PUSH2 0x2EEB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2086 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F29 PUSH1 0x1F DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F34 DUP3 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F58 DUP2 PUSH2 0x2F1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F68 DUP2 PUSH2 0x2050 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F85 DUP2 PUSH2 0x2F5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA1 JUMPI PUSH2 0x2FA0 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FAF DUP5 DUP3 DUP6 ADD PUSH2 0x2F76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3014 PUSH1 0x2A DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x301F DUP3 PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3043 DUP2 PUSH2 0x3007 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A6 PUSH1 0x26 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x30B1 DUP3 PUSH2 0x304A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30D5 DUP2 PUSH2 0x3099 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3112 PUSH1 0x1D DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x311D DUP3 PUSH2 0x30DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3141 DUP2 PUSH2 0x3105 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3169 DUP3 PUSH2 0x3148 JUMP JUMPDEST PUSH2 0x3173 DUP2 DUP6 PUSH2 0x3153 JUMP JUMPDEST SWAP4 POP PUSH2 0x3183 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319B DUP3 DUP5 PUSH2 0x315E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SWAP5 0xE6 DUP11 JUMPDEST 0xE2 DUP8 0xD9 0xD1 DUP1 PUSH2 0x8F41 0xCE SLOAD PUSH31 0xD51F5393A7FFBE19DB5AD3C0E72567AA64736F6C6343000811003300000000 ","sourceMap":"200:524:19:-:0;;;267:1;248:20;;275:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;418:13;433:12;447:10;459:9;1978:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:5;2044;:13;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;:::i;:::-;;1978:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1701:1:2;1806:7;:22;;;;1683:1:20::3;1649:36;;1657:13;1649:36;;::::0;1641:101:::3;;;;;;;;;;;;:::i;:::-;;;;;;;;;1781:1;1760:23;;:9;:23;;::::0;1752:83:::3;;;;;;;;;;;;:::i;:::-;;;;;;;;;1861:13;1846:12;;:28;;;;;;;;;;;;;;;;;;1898:12;1884:11;;:26;;;;;;;;;;;;;;;;;;1932:10;1920:9;;:22;;;;;;;;;;;;;;;;;;1963:9;1952:8;;:20;;;;;;;;;;;;;;;;;;1413:566:::0;;;;275:202:19;;;;200:524;;640:96:12;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:21:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:89::-;1053:7;1093:6;1086:5;1082:18;1071:29;;1017:89;;;:::o;1112:120::-;1184:23;1201:5;1184:23;:::i;:::-;1177:5;1174:34;1164:62;;1222:1;1219;1212:12;1164:62;1112:120;:::o;1238:141::-;1294:5;1325:6;1319:13;1310:22;;1341:32;1367:5;1341:32;:::i;:::-;1238:141;;;;:::o;1385:122::-;1458:24;1476:5;1458:24;:::i;:::-;1451:5;1448:35;1438:63;;1497:1;1494;1487:12;1438:63;1385:122;:::o;1513:143::-;1570:5;1601:6;1595:13;1586:22;;1617:33;1644:5;1617:33;:::i;:::-;1513:143;;;;:::o;1662:844::-;1771:6;1779;1787;1795;1844:3;1832:9;1823:7;1819:23;1815:33;1812:120;;;1851:79;;:::i;:::-;1812:120;1971:1;1996:78;2066:7;2057:6;2046:9;2042:22;1996:78;:::i;:::-;1986:88;;1942:142;2123:2;2149:63;2204:7;2195:6;2184:9;2180:22;2149:63;:::i;:::-;2139:73;;2094:128;2261:2;2287:63;2342:7;2333:6;2322:9;2318:22;2287:63;:::i;:::-;2277:73;;2232:128;2399:2;2425:64;2481:7;2472:6;2461:9;2457:22;2425:64;:::i;:::-;2415:74;;2370:129;1662:844;;;;;;;:::o;2512:99::-;2564:6;2598:5;2592:12;2582:22;;2512:99;;;:::o;2617:180::-;2665:77;2662:1;2655:88;2762:4;2759:1;2752:15;2786:4;2783:1;2776:15;2803:180;2851:77;2848:1;2841:88;2948:4;2945:1;2938:15;2972:4;2969:1;2962:15;2989:320;3033:6;3070:1;3064:4;3060:12;3050:22;;3117:1;3111:4;3107:12;3138:18;3128:81;;3194:4;3186:6;3182:17;3172:27;;3128:81;3256:2;3248:6;3245:14;3225:18;3222:38;3219:84;;3275:18;;:::i;:::-;3219:84;3040:269;2989:320;;;:::o;3315:141::-;3364:4;3387:3;3379:11;;3410:3;3407:1;3400:14;3444:4;3441:1;3431:18;3423:26;;3315:141;;;:::o;3462:93::-;3499:6;3546:2;3541;3534:5;3530:14;3526:23;3516:33;;3462:93;;;:::o;3561:107::-;3605:8;3655:5;3649:4;3645:16;3624:37;;3561:107;;;;:::o;3674:393::-;3743:6;3793:1;3781:10;3777:18;3816:97;3846:66;3835:9;3816:97;:::i;:::-;3934:39;3964:8;3953:9;3934:39;:::i;:::-;3922:51;;4006:4;4002:9;3995:5;3991:21;3982:30;;4055:4;4045:8;4041:19;4034:5;4031:30;4021:40;;3750:317;;3674:393;;;;;:::o;4073:77::-;4110:7;4139:5;4128:16;;4073:77;;;:::o;4156:60::-;4184:3;4205:5;4198:12;;4156:60;;;:::o;4222:142::-;4272:9;4305:53;4323:34;4332:24;4350:5;4332:24;:::i;:::-;4323:34;:::i;:::-;4305:53;:::i;:::-;4292:66;;4222:142;;;:::o;4370:75::-;4413:3;4434:5;4427:12;;4370:75;;;:::o;4451:269::-;4561:39;4592:7;4561:39;:::i;:::-;4622:91;4671:41;4695:16;4671:41;:::i;:::-;4663:6;4656:4;4650:11;4622:91;:::i;:::-;4616:4;4609:105;4527:193;4451:269;;;:::o;4726:73::-;4771:3;4726:73;:::o;4805:189::-;4882:32;;:::i;:::-;4923:65;4981:6;4973;4967:4;4923:65;:::i;:::-;4858:136;4805:189;;:::o;5000:186::-;5060:120;5077:3;5070:5;5067:14;5060:120;;;5131:39;5168:1;5161:5;5131:39;:::i;:::-;5104:1;5097:5;5093:13;5084:22;;5060:120;;;5000:186;;:::o;5192:543::-;5293:2;5288:3;5285:11;5282:446;;;5327:38;5359:5;5327:38;:::i;:::-;5411:29;5429:10;5411:29;:::i;:::-;5401:8;5397:44;5594:2;5582:10;5579:18;5576:49;;;5615:8;5600:23;;5576:49;5638:80;5694:22;5712:3;5694:22;:::i;:::-;5684:8;5680:37;5667:11;5638:80;:::i;:::-;5297:431;;5282:446;5192:543;;;:::o;5741:117::-;5795:8;5845:5;5839:4;5835:16;5814:37;;5741:117;;;;:::o;5864:169::-;5908:6;5941:51;5989:1;5985:6;5977:5;5974:1;5970:13;5941:51;:::i;:::-;5937:56;6022:4;6016;6012:15;6002:25;;5915:118;5864:169;;;;:::o;6038:295::-;6114:4;6260:29;6285:3;6279:4;6260:29;:::i;:::-;6252:37;;6322:3;6319:1;6315:11;6309:4;6306:21;6298:29;;6038:295;;;;:::o;6338:1395::-;6455:37;6488:3;6455:37;:::i;:::-;6557:18;6549:6;6546:30;6543:56;;;6579:18;;:::i;:::-;6543:56;6623:38;6655:4;6649:11;6623:38;:::i;:::-;6708:67;6768:6;6760;6754:4;6708:67;:::i;:::-;6802:1;6826:4;6813:17;;6858:2;6850:6;6847:14;6875:1;6870:618;;;;7532:1;7549:6;7546:77;;;7598:9;7593:3;7589:19;7583:26;7574:35;;7546:77;7649:67;7709:6;7702:5;7649:67;:::i;:::-;7643:4;7636:81;7505:222;6840:887;;6870:618;6922:4;6918:9;6910:6;6906:22;6956:37;6988:4;6956:37;:::i;:::-;7015:1;7029:208;7043:7;7040:1;7037:14;7029:208;;;7122:9;7117:3;7113:19;7107:26;7099:6;7092:42;7173:1;7165:6;7161:14;7151:24;;7220:2;7209:9;7205:18;7192:31;;7066:4;7063:1;7059:12;7054:17;;7029:208;;;7265:6;7256:7;7253:19;7250:179;;;7323:9;7318:3;7314:19;7308:26;7366:48;7408:4;7400:6;7396:17;7385:9;7366:48;:::i;:::-;7358:6;7351:64;7273:156;7250:179;7475:1;7471;7463:6;7459:14;7455:22;7449:4;7442:36;6877:611;;;6840:887;;6430:1303;;;6338:1395;;:::o;7739:169::-;7823:11;7857:6;7852:3;7845:19;7897:4;7892:3;7888:14;7873:29;;7739:169;;;;:::o;7914:239::-;8054:34;8050:1;8042:6;8038:14;8031:58;8123:22;8118:2;8110:6;8106:15;8099:47;7914:239;:::o;8159:366::-;8301:3;8322:67;8386:2;8381:3;8322:67;:::i;:::-;8315:74;;8398:93;8487:3;8398:93;:::i;:::-;8516:2;8511:3;8507:12;8500:19;;8159:366;;;:::o;8531:419::-;8697:4;8735:2;8724:9;8720:18;8712:26;;8784:9;8778:4;8774:20;8770:1;8759:9;8755:17;8748:47;8812:131;8938:4;8812:131;:::i;:::-;8804:139;;8531:419;;;:::o;8956:234::-;9096:34;9092:1;9084:6;9080:14;9073:58;9165:17;9160:2;9152:6;9148:15;9141:42;8956:234;:::o;9196:366::-;9338:3;9359:67;9423:2;9418:3;9359:67;:::i;:::-;9352:74;;9435:93;9524:3;9435:93;:::i;:::-;9553:2;9548:3;9544:12;9537:19;;9196:366;;;:::o;9568:419::-;9734:4;9772:2;9761:9;9757:18;9749:26;;9821:9;9815:4;9811:20;9807:1;9796:9;9792:17;9785:47;9849:131;9975:4;9849:131;:::i;:::-;9841:139;;9568:419;;;:::o;200:524:19:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_815":{"entryPoint":7235,"id":815,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":5148,"id":750,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_804":{"entryPoint":7230,"id":804,"parameterSlots":3,"returnSlots":0},"@_burn_705":{"entryPoint":5930,"id":705,"parameterSlots":2,"returnSlots":0},"@_callOptionalReturn_2100":{"entryPoint":7240,"id":2100,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":5804,"id":54,"parameterSlots":0,"returnSlots":0},"@_mint_633":{"entryPoint":6879,"id":633,"parameterSlots":2,"returnSlots":0},"@_msgSender_2408":{"entryPoint":5140,"id":2408,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_793":{"entryPoint":5605,"id":793,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":6544,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_6016":{"entryPoint":5745,"id":6016,"parameterSlots":3,"returnSlots":0},"@allowance_372":{"entryPoint":4612,"id":372,"parameterSlots":2,"returnSlots":1},"@approve_397":{"entryPoint":1444,"id":397,"parameterSlots":2,"returnSlots":1},"@balanceOf_329":{"entryPoint":2828,"id":329,"parameterSlots":1,"returnSlots":1},"@decimals_305":{"entryPoint":2684,"id":305,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_500":{"entryPoint":4058,"id":500,"parameterSlots":2,"returnSlots":1},"@functionCallWithValue_2260":{"entryPoint":7463,"id":2260,"parameterSlots":4,"returnSlots":1},"@functionCall_2190":{"entryPoint":7439,"id":2190,"parameterSlots":3,"returnSlots":1},"@getCurrentTime_5662":{"entryPoint":6400,"id":5662,"parameterSlots":0,"returnSlots":1},"@increaseAllowance_459":{"entryPoint":2693,"id":459,"parameterSlots":2,"returnSlots":1},"@isContract_2119":{"entryPoint":7739,"id":2119,"parameterSlots":1,"returnSlots":1},"@name_285":{"entryPoint":1298,"id":285,"parameterSlots":0,"returnSlots":1},"@owner_40":{"entryPoint":3870,"id":40,"parameterSlots":0,"returnSlots":1},"@penaltyBP_5696":{"entryPoint":4177,"id":5696,"parameterSlots":0,"returnSlots":0},"@penaltyDays_5693":{"entryPoint":4747,"id":5693,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_68":{"entryPoint":2900,"id":68,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1878":{"entryPoint":6742,"id":1878,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1852":{"entryPoint":6410,"id":1852,"parameterSlots":3,"returnSlots":0},"@setCurrentTime_5653":{"entryPoint":1489,"id":5653,"parameterSlots":1,"returnSlots":0},"@setPenaltyBP_5973":{"entryPoint":4232,"id":5973,"parameterSlots":1,"returnSlots":0},"@setPenaltyDays_5949":{"entryPoint":1546,"id":5949,"parameterSlots":1,"returnSlots":0},"@setTreasury_6000":{"entryPoint":4767,"id":6000,"parameterSlots":1,"returnSlots":0},"@stake_5834":{"entryPoint":2958,"id":5834,"parameterSlots":1,"returnSlots":0},"@stakers_5690":{"entryPoint":4400,"id":5690,"parameterSlots":0,"returnSlots":0},"@stakingToken_5683":{"entryPoint":2920,"id":5683,"parameterSlots":0,"returnSlots":0},"@symbol_295":{"entryPoint":3912,"id":295,"parameterSlots":0,"returnSlots":1},"@totalShares_5702":{"entryPoint":2748,"id":5702,"parameterSlots":0,"returnSlots":0},"@totalSupply_315":{"entryPoint":1479,"id":315,"parameterSlots":0,"returnSlots":1},"@transferFrom_430":{"entryPoint":1499,"id":430,"parameterSlots":3,"returnSlots":1},"@transferOwnership_91":{"entryPoint":5009,"id":91,"parameterSlots":1,"returnSlots":0},"@transfer_354":{"entryPoint":4197,"id":354,"parameterSlots":2,"returnSlots":1},"@treasury_5699":{"entryPoint":2790,"id":5699,"parameterSlots":0,"returnSlots":0},"@unstake_5936":{"entryPoint":1586,"id":5936,"parameterSlots":1,"returnSlots":0},"@verifyCallResult_2395":{"entryPoint":7774,"id":2395,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":12150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint128":{"entryPoint":8992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":8533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8187,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8774,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9245,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8413,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8208,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":12171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint128":{"entryPoint":9013,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16":{"entryPoint":8554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8368,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8732,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8284,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$894_to_t_address_fromStack":{"entryPoint":8899,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7964,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack":{"entryPoint":11856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":10910,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":11202,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336_to_t_string_memory_ptr_fromStack":{"entryPoint":9747,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":11310,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7_to_t_string_memory_ptr_fromStack":{"entryPoint":10618,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":12441,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":11564,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack":{"entryPoint":10764,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79_to_t_string_memory_ptr_fromStack":{"entryPoint":9554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f_to_t_string_memory_ptr_fromStack":{"entryPoint":11456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":11710,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":11056,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":12549,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":12295,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":9446,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":10472,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":12060,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint128_to_t_uint128_fromStack":{"entryPoint":9100,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":9058,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint192_to_t_uint192_fromStack":{"entryPoint":8690,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8326,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":9133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8612,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8747,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":11964,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":11923,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__to_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__fromStack_reversed":{"entryPoint":9148,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$894__to_t_address__fromStack_reversed":{"entryPoint":8914,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11891,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10945,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11237,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9782,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11345,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10653,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12476,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11599,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10799,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9589,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11491,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11745,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11091,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12584,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12330,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9481,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10507,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12095,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":9073,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint192__to_t_uint192__fromStack_reversed":{"entryPoint":8705,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8341,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":8627,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12616,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7877,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12627,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7888,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint192":{"entryPoint":10317,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10265,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint48":{"entryPoint":9998,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint128":{"entryPoint":10164,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint128":{"entryPoint":10056,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint48":{"entryPoint":9937,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint192":{"entryPoint":9861,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10213,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8092,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8272,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint128":{"entryPoint":8941,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":8496,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8060,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint192":{"entryPoint":8654,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8154,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":9115,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8599,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$894_to_t_address":{"entryPoint":8881,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":8863,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":8829,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7905,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9356,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":8819,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9814,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10117,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9309,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9621,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8055,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7947,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":11777,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":10831,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":11123,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336":{"entryPoint":9668,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":11269,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7":{"entryPoint":10539,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":12362,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":11523,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633":{"entryPoint":10685,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79":{"entryPoint":9513,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f":{"entryPoint":11377,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":11631,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":10977,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":12508,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":12216,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":9405,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":10393,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":12019,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8110,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":12127,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint128":{"entryPoint":8969,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":8510,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8164,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:34114:21","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:21","statements":[{"nodeType":"YulAssignment","src":"77:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:21"},"nodeType":"YulFunctionCall","src":"87:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:21","type":""}],"src":"7:99:21"},{"body":{"nodeType":"YulBlock","src":"208:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:21"},"nodeType":"YulFunctionCall","src":"218:19:21"},"nodeType":"YulExpressionStatement","src":"218:19:21"},{"nodeType":"YulAssignment","src":"246:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:21"},"nodeType":"YulFunctionCall","src":"261:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:21","type":""}],"src":"112:169:21"},{"body":{"nodeType":"YulBlock","src":"349:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:21"},"nodeType":"YulFunctionCall","src":"449:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:21"},"nodeType":"YulFunctionCall","src":"468:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:21"},"nodeType":"YulFunctionCall","src":"462:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:21"},"nodeType":"YulFunctionCall","src":"442:39:21"},"nodeType":"YulExpressionStatement","src":"442:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:21"},"nodeType":"YulFunctionCall","src":"386:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:21","statements":[{"nodeType":"YulAssignment","src":"402:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:21"},"nodeType":"YulFunctionCall","src":"407:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:21","statements":[]},"src":"378:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:21"},"nodeType":"YulFunctionCall","src":"507:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:21"},"nodeType":"YulFunctionCall","src":"500:27:21"},"nodeType":"YulExpressionStatement","src":"500:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:21","type":""}],"src":"287:246:21"},{"body":{"nodeType":"YulBlock","src":"587:54:21","statements":[{"nodeType":"YulAssignment","src":"597:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:21"},"nodeType":"YulFunctionCall","src":"611:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:21"},"nodeType":"YulFunctionCall","src":"627:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:21"},"nodeType":"YulFunctionCall","src":"607:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:21","type":""}],"src":"539:102:21"},{"body":{"nodeType":"YulBlock","src":"739:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:21"},"nodeType":"YulFunctionCall","src":"763:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:21","type":""}]},{"nodeType":"YulAssignment","src":"811:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:21"},"nodeType":"YulFunctionCall","src":"818:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:21"},"nodeType":"YulFunctionCall","src":"933:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:21"},"nodeType":"YulFunctionCall","src":"898:65:21"},"nodeType":"YulExpressionStatement","src":"898:65:21"},{"nodeType":"YulAssignment","src":"972:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:21"},"nodeType":"YulFunctionCall","src":"988:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:21"},"nodeType":"YulFunctionCall","src":"979:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:21","type":""}],"src":"647:377:21"},{"body":{"nodeType":"YulBlock","src":"1148:195:21","statements":[{"nodeType":"YulAssignment","src":"1158:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:21"},"nodeType":"YulFunctionCall","src":"1166:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:21"},"nodeType":"YulFunctionCall","src":"1201:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:21"},"nodeType":"YulFunctionCall","src":"1220:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:21"},"nodeType":"YulFunctionCall","src":"1194:47:21"},"nodeType":"YulExpressionStatement","src":"1194:47:21"},{"nodeType":"YulAssignment","src":"1250:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:21"},"nodeType":"YulFunctionCall","src":"1258:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:21","type":""}],"src":"1030:313:21"},{"body":{"nodeType":"YulBlock","src":"1389:35:21","statements":[{"nodeType":"YulAssignment","src":"1399:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:21"},"nodeType":"YulFunctionCall","src":"1409:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:21","type":""}],"src":"1349:75:21"},{"body":{"nodeType":"YulBlock","src":"1519:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:21"},"nodeType":"YulFunctionCall","src":"1529:12:21"},"nodeType":"YulExpressionStatement","src":"1529:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:21"},{"body":{"nodeType":"YulBlock","src":"1642:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:21"},"nodeType":"YulFunctionCall","src":"1652:12:21"},"nodeType":"YulExpressionStatement","src":"1652:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:21"},{"body":{"nodeType":"YulBlock","src":"1721:81:21","statements":[{"nodeType":"YulAssignment","src":"1731:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:21"},"nodeType":"YulFunctionCall","src":"1742:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:21","type":""}],"src":"1676:126:21"},{"body":{"nodeType":"YulBlock","src":"1853:51:21","statements":[{"nodeType":"YulAssignment","src":"1863:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:21"},"nodeType":"YulFunctionCall","src":"1874:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:21","type":""}],"src":"1808:96:21"},{"body":{"nodeType":"YulBlock","src":"1953:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:21"},"nodeType":"YulFunctionCall","src":"2012:12:21"},"nodeType":"YulExpressionStatement","src":"2012:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:21"},"nodeType":"YulFunctionCall","src":"1983:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:21"},"nodeType":"YulFunctionCall","src":"1973:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:21"},"nodeType":"YulFunctionCall","src":"1966:43:21"},"nodeType":"YulIf","src":"1963:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:21","type":""}],"src":"1910:122:21"},{"body":{"nodeType":"YulBlock","src":"2090:87:21","statements":[{"nodeType":"YulAssignment","src":"2100:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:21"},"nodeType":"YulFunctionCall","src":"2109:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:21"},"nodeType":"YulFunctionCall","src":"2138:33:21"},"nodeType":"YulExpressionStatement","src":"2138:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:21","type":""}],"src":"2038:139:21"},{"body":{"nodeType":"YulBlock","src":"2228:32:21","statements":[{"nodeType":"YulAssignment","src":"2238:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:21","type":""}],"src":"2183:77:21"},{"body":{"nodeType":"YulBlock","src":"2309:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:21"},"nodeType":"YulFunctionCall","src":"2368:12:21"},"nodeType":"YulExpressionStatement","src":"2368:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:21"},"nodeType":"YulFunctionCall","src":"2339:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:21"},"nodeType":"YulFunctionCall","src":"2329:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:21"},"nodeType":"YulFunctionCall","src":"2322:43:21"},"nodeType":"YulIf","src":"2319:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:21","type":""}],"src":"2266:122:21"},{"body":{"nodeType":"YulBlock","src":"2446:87:21","statements":[{"nodeType":"YulAssignment","src":"2456:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:21"},"nodeType":"YulFunctionCall","src":"2465:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:21"},"nodeType":"YulFunctionCall","src":"2494:33:21"},"nodeType":"YulExpressionStatement","src":"2494:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:21","type":""}],"src":"2394:139:21"},{"body":{"nodeType":"YulBlock","src":"2622:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:21"},"nodeType":"YulFunctionCall","src":"2670:79:21"},"nodeType":"YulExpressionStatement","src":"2670:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:21"},"nodeType":"YulFunctionCall","src":"2639:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:21"},"nodeType":"YulFunctionCall","src":"2635:32:21"},"nodeType":"YulIf","src":"2632:119:21"},{"nodeType":"YulBlock","src":"2761:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:21"},"nodeType":"YulFunctionCall","src":"2836:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:21"},"nodeType":"YulFunctionCall","src":"2815:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:21"}]}]},{"nodeType":"YulBlock","src":"2888:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:21"},"nodeType":"YulFunctionCall","src":"2964:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:21"},"nodeType":"YulFunctionCall","src":"2943:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:21","type":""}],"src":"2539:474:21"},{"body":{"nodeType":"YulBlock","src":"3061:48:21","statements":[{"nodeType":"YulAssignment","src":"3071:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:21"},"nodeType":"YulFunctionCall","src":"3089:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:21"},"nodeType":"YulFunctionCall","src":"3082:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:21","type":""}],"src":"3019:90:21"},{"body":{"nodeType":"YulBlock","src":"3174:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:21"},"nodeType":"YulFunctionCall","src":"3196:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:21"},"nodeType":"YulFunctionCall","src":"3184:34:21"},"nodeType":"YulExpressionStatement","src":"3184:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:21","type":""}],"src":"3115:109:21"},{"body":{"nodeType":"YulBlock","src":"3322:118:21","statements":[{"nodeType":"YulAssignment","src":"3332:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:21"},"nodeType":"YulFunctionCall","src":"3340:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:21"},"nodeType":"YulFunctionCall","src":"3415:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:21"},"nodeType":"YulFunctionCall","src":"3368:65:21"},"nodeType":"YulExpressionStatement","src":"3368:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:21","type":""}],"src":"3230:210:21"},{"body":{"nodeType":"YulBlock","src":"3511:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:21"},"nodeType":"YulFunctionCall","src":"3533:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:21"},"nodeType":"YulFunctionCall","src":"3521:37:21"},"nodeType":"YulExpressionStatement","src":"3521:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:21","type":""}],"src":"3446:118:21"},{"body":{"nodeType":"YulBlock","src":"3668:124:21","statements":[{"nodeType":"YulAssignment","src":"3678:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:21"},"nodeType":"YulFunctionCall","src":"3686:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:21"},"nodeType":"YulFunctionCall","src":"3767:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:21"},"nodeType":"YulFunctionCall","src":"3714:71:21"},"nodeType":"YulExpressionStatement","src":"3714:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:21","type":""}],"src":"3570:222:21"},{"body":{"nodeType":"YulBlock","src":"3864:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"3910:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3912:77:21"},"nodeType":"YulFunctionCall","src":"3912:79:21"},"nodeType":"YulExpressionStatement","src":"3912:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3885:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3894:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3881:3:21"},"nodeType":"YulFunctionCall","src":"3881:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3906:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3877:3:21"},"nodeType":"YulFunctionCall","src":"3877:32:21"},"nodeType":"YulIf","src":"3874:119:21"},{"nodeType":"YulBlock","src":"4003:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4018:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4032:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4022:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4047:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4082:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4093:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4078:3:21"},"nodeType":"YulFunctionCall","src":"4078:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4102:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4057:20:21"},"nodeType":"YulFunctionCall","src":"4057:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4047:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3834:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3845:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3857:6:21","type":""}],"src":"3798:329:21"},{"body":{"nodeType":"YulBlock","src":"4233:519:21","statements":[{"body":{"nodeType":"YulBlock","src":"4279:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4281:77:21"},"nodeType":"YulFunctionCall","src":"4281:79:21"},"nodeType":"YulExpressionStatement","src":"4281:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4254:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4263:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4250:3:21"},"nodeType":"YulFunctionCall","src":"4250:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4275:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4246:3:21"},"nodeType":"YulFunctionCall","src":"4246:32:21"},"nodeType":"YulIf","src":"4243:119:21"},{"nodeType":"YulBlock","src":"4372:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4387:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4401:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4391:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4416:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4451:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4462:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4447:3:21"},"nodeType":"YulFunctionCall","src":"4447:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4471:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4426:20:21"},"nodeType":"YulFunctionCall","src":"4426:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4416:6:21"}]}]},{"nodeType":"YulBlock","src":"4499:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4514:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4528:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4518:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4544:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4579:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4590:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4575:3:21"},"nodeType":"YulFunctionCall","src":"4575:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4599:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4554:20:21"},"nodeType":"YulFunctionCall","src":"4554:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4544:6:21"}]}]},{"nodeType":"YulBlock","src":"4627:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4642:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4656:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4646:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4672:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4707:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4718:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4703:3:21"},"nodeType":"YulFunctionCall","src":"4703:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4727:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4682:20:21"},"nodeType":"YulFunctionCall","src":"4682:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4672:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4187:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4198:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4210:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4218:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4226:6:21","type":""}],"src":"4133:619:21"},{"body":{"nodeType":"YulBlock","src":"4802:45:21","statements":[{"nodeType":"YulAssignment","src":"4812:29:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4827:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4834:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4823:3:21"},"nodeType":"YulFunctionCall","src":"4823:18:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4812:7:21"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4784:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4794:7:21","type":""}],"src":"4758:89:21"},{"body":{"nodeType":"YulBlock","src":"4895:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"4951:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4960:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4963:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4953:6:21"},"nodeType":"YulFunctionCall","src":"4953:12:21"},"nodeType":"YulExpressionStatement","src":"4953:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4918:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4942:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"4925:16:21"},"nodeType":"YulFunctionCall","src":"4925:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4915:2:21"},"nodeType":"YulFunctionCall","src":"4915:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4908:6:21"},"nodeType":"YulFunctionCall","src":"4908:42:21"},"nodeType":"YulIf","src":"4905:62:21"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4888:5:21","type":""}],"src":"4853:120:21"},{"body":{"nodeType":"YulBlock","src":"5030:86:21","statements":[{"nodeType":"YulAssignment","src":"5040:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5062:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5049:12:21"},"nodeType":"YulFunctionCall","src":"5049:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5040:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5104:5:21"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"5078:25:21"},"nodeType":"YulFunctionCall","src":"5078:32:21"},"nodeType":"YulExpressionStatement","src":"5078:32:21"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5008:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5016:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5024:5:21","type":""}],"src":"4979:137:21"},{"body":{"nodeType":"YulBlock","src":"5187:262:21","statements":[{"body":{"nodeType":"YulBlock","src":"5233:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5235:77:21"},"nodeType":"YulFunctionCall","src":"5235:79:21"},"nodeType":"YulExpressionStatement","src":"5235:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5208:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5217:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5204:3:21"},"nodeType":"YulFunctionCall","src":"5204:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5229:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5200:3:21"},"nodeType":"YulFunctionCall","src":"5200:32:21"},"nodeType":"YulIf","src":"5197:119:21"},{"nodeType":"YulBlock","src":"5326:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5341:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5355:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5345:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5370:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5404:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5415:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5400:3:21"},"nodeType":"YulFunctionCall","src":"5400:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5424:7:21"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"5380:19:21"},"nodeType":"YulFunctionCall","src":"5380:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5370:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5157:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5168:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5180:6:21","type":""}],"src":"5122:327:21"},{"body":{"nodeType":"YulBlock","src":"5498:43:21","statements":[{"nodeType":"YulAssignment","src":"5508:27:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5523:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5530:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5519:3:21"},"nodeType":"YulFunctionCall","src":"5519:16:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5508:7:21"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5480:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5490:7:21","type":""}],"src":"5455:86:21"},{"body":{"nodeType":"YulBlock","src":"5608:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5625:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5646:5:21"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5630:15:21"},"nodeType":"YulFunctionCall","src":"5630:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5618:6:21"},"nodeType":"YulFunctionCall","src":"5618:35:21"},"nodeType":"YulExpressionStatement","src":"5618:35:21"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5596:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5603:3:21","type":""}],"src":"5547:112:21"},{"body":{"nodeType":"YulBlock","src":"5759:120:21","statements":[{"nodeType":"YulAssignment","src":"5769:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5781:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5792:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5777:3:21"},"nodeType":"YulFunctionCall","src":"5777:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5769:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5845:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5858:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5869:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5854:3:21"},"nodeType":"YulFunctionCall","src":"5854:17:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"5805:39:21"},"nodeType":"YulFunctionCall","src":"5805:67:21"},"nodeType":"YulExpressionStatement","src":"5805:67:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5731:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5743:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5754:4:21","type":""}],"src":"5665:214:21"},{"body":{"nodeType":"YulBlock","src":"5930:89:21","statements":[{"nodeType":"YulAssignment","src":"5940:73:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5962:50:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5951:3:21"},"nodeType":"YulFunctionCall","src":"5951:62:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5940:7:21"}]}]},"name":"cleanup_t_uint192","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5912:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5922:7:21","type":""}],"src":"5885:134:21"},{"body":{"nodeType":"YulBlock","src":"6090:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6107:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6130:5:21"}],"functionName":{"name":"cleanup_t_uint192","nodeType":"YulIdentifier","src":"6112:17:21"},"nodeType":"YulFunctionCall","src":"6112:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6100:6:21"},"nodeType":"YulFunctionCall","src":"6100:37:21"},"nodeType":"YulExpressionStatement","src":"6100:37:21"}]},"name":"abi_encode_t_uint192_to_t_uint192_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6078:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6085:3:21","type":""}],"src":"6025:118:21"},{"body":{"nodeType":"YulBlock","src":"6247:124:21","statements":[{"nodeType":"YulAssignment","src":"6257:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6269:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6280:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6265:3:21"},"nodeType":"YulFunctionCall","src":"6265:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6257:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6337:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6350:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6361:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6346:3:21"},"nodeType":"YulFunctionCall","src":"6346:17:21"}],"functionName":{"name":"abi_encode_t_uint192_to_t_uint192_fromStack","nodeType":"YulIdentifier","src":"6293:43:21"},"nodeType":"YulFunctionCall","src":"6293:71:21"},"nodeType":"YulExpressionStatement","src":"6293:71:21"}]},"name":"abi_encode_tuple_t_uint192__to_t_uint192__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6219:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6231:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6242:4:21","type":""}],"src":"6149:222:21"},{"body":{"nodeType":"YulBlock","src":"6442:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6459:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6482:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6464:17:21"},"nodeType":"YulFunctionCall","src":"6464:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6452:6:21"},"nodeType":"YulFunctionCall","src":"6452:37:21"},"nodeType":"YulExpressionStatement","src":"6452:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6430:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6437:3:21","type":""}],"src":"6377:118:21"},{"body":{"nodeType":"YulBlock","src":"6599:124:21","statements":[{"nodeType":"YulAssignment","src":"6609:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6632:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6617:3:21"},"nodeType":"YulFunctionCall","src":"6617:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6609:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6689:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6702:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6713:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6698:3:21"},"nodeType":"YulFunctionCall","src":"6698:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6645:43:21"},"nodeType":"YulFunctionCall","src":"6645:71:21"},"nodeType":"YulExpressionStatement","src":"6645:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6571:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6583:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6594:4:21","type":""}],"src":"6501:222:21"},{"body":{"nodeType":"YulBlock","src":"6795:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"6841:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6843:77:21"},"nodeType":"YulFunctionCall","src":"6843:79:21"},"nodeType":"YulExpressionStatement","src":"6843:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6816:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6825:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6812:3:21"},"nodeType":"YulFunctionCall","src":"6812:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6837:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6808:3:21"},"nodeType":"YulFunctionCall","src":"6808:32:21"},"nodeType":"YulIf","src":"6805:119:21"},{"nodeType":"YulBlock","src":"6934:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6949:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6963:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6953:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6978:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7013:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7024:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7009:3:21"},"nodeType":"YulFunctionCall","src":"7009:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7033:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6988:20:21"},"nodeType":"YulFunctionCall","src":"6988:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6978:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6765:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6776:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6788:6:21","type":""}],"src":"6729:329:21"},{"body":{"nodeType":"YulBlock","src":"7096:28:21","statements":[{"nodeType":"YulAssignment","src":"7106:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"7113:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7106:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7082:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7092:3:21","type":""}],"src":"7064:60:21"},{"body":{"nodeType":"YulBlock","src":"7190:82:21","statements":[{"nodeType":"YulAssignment","src":"7200:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7258:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7240:17:21"},"nodeType":"YulFunctionCall","src":"7240:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"7231:8:21"},"nodeType":"YulFunctionCall","src":"7231:34:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7213:17:21"},"nodeType":"YulFunctionCall","src":"7213:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7200:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7170:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7180:9:21","type":""}],"src":"7130:142:21"},{"body":{"nodeType":"YulBlock","src":"7338:66:21","statements":[{"nodeType":"YulAssignment","src":"7348:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7392:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"7361:30:21"},"nodeType":"YulFunctionCall","src":"7361:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7348:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7318:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7328:9:21","type":""}],"src":"7278:126:21"},{"body":{"nodeType":"YulBlock","src":"7484:66:21","statements":[{"nodeType":"YulAssignment","src":"7494:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7538:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"7507:30:21"},"nodeType":"YulFunctionCall","src":"7507:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7494:9:21"}]}]},"name":"convert_t_contract$_IERC20_$894_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7464:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7474:9:21","type":""}],"src":"7410:140:21"},{"body":{"nodeType":"YulBlock","src":"7635:80:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7652:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7702:5:21"}],"functionName":{"name":"convert_t_contract$_IERC20_$894_to_t_address","nodeType":"YulIdentifier","src":"7657:44:21"},"nodeType":"YulFunctionCall","src":"7657:51:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7645:6:21"},"nodeType":"YulFunctionCall","src":"7645:64:21"},"nodeType":"YulExpressionStatement","src":"7645:64:21"}]},"name":"abi_encode_t_contract$_IERC20_$894_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7623:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7630:3:21","type":""}],"src":"7556:159:21"},{"body":{"nodeType":"YulBlock","src":"7833:138:21","statements":[{"nodeType":"YulAssignment","src":"7843:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7855:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7866:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7851:3:21"},"nodeType":"YulFunctionCall","src":"7851:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7843:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7937:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7950:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7961:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7946:3:21"},"nodeType":"YulFunctionCall","src":"7946:17:21"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$894_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7879:57:21"},"nodeType":"YulFunctionCall","src":"7879:85:21"},"nodeType":"YulExpressionStatement","src":"7879:85:21"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$894__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7805:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7817:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7828:4:21","type":""}],"src":"7721:250:21"},{"body":{"nodeType":"YulBlock","src":"8022:73:21","statements":[{"nodeType":"YulAssignment","src":"8032:57:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8047:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8054:34:21","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8043:3:21"},"nodeType":"YulFunctionCall","src":"8043:46:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8032:7:21"}]}]},"name":"cleanup_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8004:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8014:7:21","type":""}],"src":"7977:118:21"},{"body":{"nodeType":"YulBlock","src":"8144:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"8201:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8210:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8213:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8203:6:21"},"nodeType":"YulFunctionCall","src":"8203:12:21"},"nodeType":"YulExpressionStatement","src":"8203:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8167:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8192:5:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"8174:17:21"},"nodeType":"YulFunctionCall","src":"8174:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8164:2:21"},"nodeType":"YulFunctionCall","src":"8164:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8157:6:21"},"nodeType":"YulFunctionCall","src":"8157:43:21"},"nodeType":"YulIf","src":"8154:63:21"}]},"name":"validator_revert_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8137:5:21","type":""}],"src":"8101:122:21"},{"body":{"nodeType":"YulBlock","src":"8281:87:21","statements":[{"nodeType":"YulAssignment","src":"8291:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8313:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8300:12:21"},"nodeType":"YulFunctionCall","src":"8300:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8291:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8356:5:21"}],"functionName":{"name":"validator_revert_t_uint128","nodeType":"YulIdentifier","src":"8329:26:21"},"nodeType":"YulFunctionCall","src":"8329:33:21"},"nodeType":"YulExpressionStatement","src":"8329:33:21"}]},"name":"abi_decode_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8259:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"8267:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8275:5:21","type":""}],"src":"8229:139:21"},{"body":{"nodeType":"YulBlock","src":"8440:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"8486:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8488:77:21"},"nodeType":"YulFunctionCall","src":"8488:79:21"},"nodeType":"YulExpressionStatement","src":"8488:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8461:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8470:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8457:3:21"},"nodeType":"YulFunctionCall","src":"8457:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8482:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8453:3:21"},"nodeType":"YulFunctionCall","src":"8453:32:21"},"nodeType":"YulIf","src":"8450:119:21"},{"nodeType":"YulBlock","src":"8579:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8594:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8608:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8598:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8623:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8658:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8669:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8654:3:21"},"nodeType":"YulFunctionCall","src":"8654:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8678:7:21"}],"functionName":{"name":"abi_decode_t_uint128","nodeType":"YulIdentifier","src":"8633:20:21"},"nodeType":"YulFunctionCall","src":"8633:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8623:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8410:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8421:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8433:6:21","type":""}],"src":"8374:329:21"},{"body":{"nodeType":"YulBlock","src":"8772:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8789:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8811:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"8794:16:21"},"nodeType":"YulFunctionCall","src":"8794:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8782:6:21"},"nodeType":"YulFunctionCall","src":"8782:36:21"},"nodeType":"YulExpressionStatement","src":"8782:36:21"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8760:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8767:3:21","type":""}],"src":"8709:115:21"},{"body":{"nodeType":"YulBlock","src":"8926:122:21","statements":[{"nodeType":"YulAssignment","src":"8936:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8948:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8959:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8944:3:21"},"nodeType":"YulFunctionCall","src":"8944:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8936:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9014:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9027:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9038:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9023:3:21"},"nodeType":"YulFunctionCall","src":"9023:17:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"8972:41:21"},"nodeType":"YulFunctionCall","src":"8972:69:21"},"nodeType":"YulExpressionStatement","src":"8972:69:21"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8898:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8910:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8921:4:21","type":""}],"src":"8830:218:21"},{"body":{"nodeType":"YulBlock","src":"9119:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9136:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9159:5:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"9141:17:21"},"nodeType":"YulFunctionCall","src":"9141:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9129:6:21"},"nodeType":"YulFunctionCall","src":"9129:37:21"},"nodeType":"YulExpressionStatement","src":"9129:37:21"}]},"name":"abi_encode_t_uint128_to_t_uint128_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9107:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9114:3:21","type":""}],"src":"9054:118:21"},{"body":{"nodeType":"YulBlock","src":"9222:53:21","statements":[{"nodeType":"YulAssignment","src":"9232:37:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9247:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"9254:14:21","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9243:3:21"},"nodeType":"YulFunctionCall","src":"9243:26:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9232:7:21"}]}]},"name":"cleanup_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9204:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9214:7:21","type":""}],"src":"9178:97:21"},{"body":{"nodeType":"YulBlock","src":"9344:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9361:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9383:5:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"9366:16:21"},"nodeType":"YulFunctionCall","src":"9366:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9354:6:21"},"nodeType":"YulFunctionCall","src":"9354:36:21"},"nodeType":"YulExpressionStatement","src":"9354:36:21"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9332:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9339:3:21","type":""}],"src":"9281:115:21"},{"body":{"nodeType":"YulBlock","src":"9628:525:21","statements":[{"nodeType":"YulAssignment","src":"9638:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9650:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9661:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9646:3:21"},"nodeType":"YulFunctionCall","src":"9646:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9638:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9713:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9726:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9737:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9722:3:21"},"nodeType":"YulFunctionCall","src":"9722:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"9675:37:21"},"nodeType":"YulFunctionCall","src":"9675:65:21"},"nodeType":"YulExpressionStatement","src":"9675:65:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9794:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9807:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9818:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9803:3:21"},"nodeType":"YulFunctionCall","src":"9803:18:21"}],"functionName":{"name":"abi_encode_t_uint128_to_t_uint128_fromStack","nodeType":"YulIdentifier","src":"9750:43:21"},"nodeType":"YulFunctionCall","src":"9750:72:21"},"nodeType":"YulExpressionStatement","src":"9750:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9874:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9887:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9898:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9883:3:21"},"nodeType":"YulFunctionCall","src":"9883:18:21"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"9832:41:21"},"nodeType":"YulFunctionCall","src":"9832:70:21"},"nodeType":"YulExpressionStatement","src":"9832:70:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9954:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9967:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9978:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9963:3:21"},"nodeType":"YulFunctionCall","src":"9963:18:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"9912:41:21"},"nodeType":"YulFunctionCall","src":"9912:70:21"},"nodeType":"YulExpressionStatement","src":"9912:70:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10034:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10047:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10058:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10043:3:21"},"nodeType":"YulFunctionCall","src":"10043:19:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"9992:41:21"},"nodeType":"YulFunctionCall","src":"9992:71:21"},"nodeType":"YulExpressionStatement","src":"9992:71:21"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"10117:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10130:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10141:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10126:3:21"},"nodeType":"YulFunctionCall","src":"10126:19:21"}],"functionName":{"name":"abi_encode_t_uint192_to_t_uint192_fromStack","nodeType":"YulIdentifier","src":"10073:43:21"},"nodeType":"YulFunctionCall","src":"10073:73:21"},"nodeType":"YulExpressionStatement","src":"10073:73:21"}]},"name":"abi_encode_tuple_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__to_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9560:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9572:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9580:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9588:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9596:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9604:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9612:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9623:4:21","type":""}],"src":"9402:751:21"},{"body":{"nodeType":"YulBlock","src":"10242:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"10288:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10290:77:21"},"nodeType":"YulFunctionCall","src":"10290:79:21"},"nodeType":"YulExpressionStatement","src":"10290:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10263:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10272:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10259:3:21"},"nodeType":"YulFunctionCall","src":"10259:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10284:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10255:3:21"},"nodeType":"YulFunctionCall","src":"10255:32:21"},"nodeType":"YulIf","src":"10252:119:21"},{"nodeType":"YulBlock","src":"10381:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10396:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10410:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10400:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10425:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10460:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10471:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10456:3:21"},"nodeType":"YulFunctionCall","src":"10456:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10480:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10435:20:21"},"nodeType":"YulFunctionCall","src":"10435:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10425:6:21"}]}]},{"nodeType":"YulBlock","src":"10508:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10523:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10537:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10527:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10553:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10588:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10599:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10584:3:21"},"nodeType":"YulFunctionCall","src":"10584:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10608:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10563:20:21"},"nodeType":"YulFunctionCall","src":"10563:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10553:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10204:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10215:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10227:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10235:6:21","type":""}],"src":"10159:474:21"},{"body":{"nodeType":"YulBlock","src":"10667:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10684:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10687:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10677:6:21"},"nodeType":"YulFunctionCall","src":"10677:88:21"},"nodeType":"YulExpressionStatement","src":"10677:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10781:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10784:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10774:6:21"},"nodeType":"YulFunctionCall","src":"10774:15:21"},"nodeType":"YulExpressionStatement","src":"10774:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10805:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10808:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10798:6:21"},"nodeType":"YulFunctionCall","src":"10798:15:21"},"nodeType":"YulExpressionStatement","src":"10798:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10639:180:21"},{"body":{"nodeType":"YulBlock","src":"10876:269:21","statements":[{"nodeType":"YulAssignment","src":"10886:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10900:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"10906:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10896:3:21"},"nodeType":"YulFunctionCall","src":"10896:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10886:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"10917:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10947:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"10953:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10943:3:21"},"nodeType":"YulFunctionCall","src":"10943:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10921:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"10994:51:21","statements":[{"nodeType":"YulAssignment","src":"11008:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11022:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11030:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11018:3:21"},"nodeType":"YulFunctionCall","src":"11018:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11008:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10974:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10967:6:21"},"nodeType":"YulFunctionCall","src":"10967:26:21"},"nodeType":"YulIf","src":"10964:81:21"},{"body":{"nodeType":"YulBlock","src":"11097:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11111:16:21"},"nodeType":"YulFunctionCall","src":"11111:18:21"},"nodeType":"YulExpressionStatement","src":"11111:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11061:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11084:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11092:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11081:2:21"},"nodeType":"YulFunctionCall","src":"11081:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11058:2:21"},"nodeType":"YulFunctionCall","src":"11058:38:21"},"nodeType":"YulIf","src":"11055:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10860:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10869:6:21","type":""}],"src":"10825:320:21"},{"body":{"nodeType":"YulBlock","src":"11257:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11279:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11287:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11275:3:21"},"nodeType":"YulFunctionCall","src":"11275:14:21"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"11291:33:21","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11268:6:21"},"nodeType":"YulFunctionCall","src":"11268:57:21"},"nodeType":"YulExpressionStatement","src":"11268:57:21"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11249:6:21","type":""}],"src":"11151:181:21"},{"body":{"nodeType":"YulBlock","src":"11484:220:21","statements":[{"nodeType":"YulAssignment","src":"11494:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11560:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11565:2:21","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11501:58:21"},"nodeType":"YulFunctionCall","src":"11501:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11494:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11666:3:21"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"11577:88:21"},"nodeType":"YulFunctionCall","src":"11577:93:21"},"nodeType":"YulExpressionStatement","src":"11577:93:21"},{"nodeType":"YulAssignment","src":"11679:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11690:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11695:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11686:3:21"},"nodeType":"YulFunctionCall","src":"11686:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11679:3:21"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11472:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11480:3:21","type":""}],"src":"11338:366:21"},{"body":{"nodeType":"YulBlock","src":"11881:248:21","statements":[{"nodeType":"YulAssignment","src":"11891:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11903:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11914:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11899:3:21"},"nodeType":"YulFunctionCall","src":"11899:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11891:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11938:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11949:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11934:3:21"},"nodeType":"YulFunctionCall","src":"11934:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11957:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11963:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11953:3:21"},"nodeType":"YulFunctionCall","src":"11953:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11927:6:21"},"nodeType":"YulFunctionCall","src":"11927:47:21"},"nodeType":"YulExpressionStatement","src":"11927:47:21"},{"nodeType":"YulAssignment","src":"11983:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12117:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11991:124:21"},"nodeType":"YulFunctionCall","src":"11991:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11983:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11861:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11876:4:21","type":""}],"src":"11710:419:21"},{"body":{"nodeType":"YulBlock","src":"12241:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12263:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12271:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12259:3:21"},"nodeType":"YulFunctionCall","src":"12259:14:21"},{"hexValue":"43796265724172656e615374616b696e673a20696e76616c696420696e646578","kind":"string","nodeType":"YulLiteral","src":"12275:34:21","type":"","value":"CyberArenaStaking: invalid index"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12252:6:21"},"nodeType":"YulFunctionCall","src":"12252:58:21"},"nodeType":"YulExpressionStatement","src":"12252:58:21"}]},"name":"store_literal_in_memory_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12233:6:21","type":""}],"src":"12135:182:21"},{"body":{"nodeType":"YulBlock","src":"12469:220:21","statements":[{"nodeType":"YulAssignment","src":"12479:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12545:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12550:2:21","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12486:58:21"},"nodeType":"YulFunctionCall","src":"12486:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12479:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12651:3:21"}],"functionName":{"name":"store_literal_in_memory_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79","nodeType":"YulIdentifier","src":"12562:88:21"},"nodeType":"YulFunctionCall","src":"12562:93:21"},"nodeType":"YulExpressionStatement","src":"12562:93:21"},{"nodeType":"YulAssignment","src":"12664:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12675:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12680:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12671:3:21"},"nodeType":"YulFunctionCall","src":"12671:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12664:3:21"}]}]},"name":"abi_encode_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12457:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12465:3:21","type":""}],"src":"12323:366:21"},{"body":{"nodeType":"YulBlock","src":"12866:248:21","statements":[{"nodeType":"YulAssignment","src":"12876:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12888:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12899:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12884:3:21"},"nodeType":"YulFunctionCall","src":"12884:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12876:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12923:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12934:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12919:3:21"},"nodeType":"YulFunctionCall","src":"12919:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12942:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12948:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12938:3:21"},"nodeType":"YulFunctionCall","src":"12938:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12912:6:21"},"nodeType":"YulFunctionCall","src":"12912:47:21"},"nodeType":"YulExpressionStatement","src":"12912:47:21"},{"nodeType":"YulAssignment","src":"12968:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13102:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12976:124:21"},"nodeType":"YulFunctionCall","src":"12976:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12968:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12846:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12861:4:21","type":""}],"src":"12695:419:21"},{"body":{"nodeType":"YulBlock","src":"13148:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13165:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13168:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13158:6:21"},"nodeType":"YulFunctionCall","src":"13158:88:21"},"nodeType":"YulExpressionStatement","src":"13158:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13262:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13265:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13255:6:21"},"nodeType":"YulFunctionCall","src":"13255:15:21"},"nodeType":"YulExpressionStatement","src":"13255:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13286:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13289:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13279:6:21"},"nodeType":"YulFunctionCall","src":"13279:15:21"},"nodeType":"YulExpressionStatement","src":"13279:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"13120:180:21"},{"body":{"nodeType":"YulBlock","src":"13412:116:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13434:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13442:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13430:3:21"},"nodeType":"YulFunctionCall","src":"13430:14:21"},{"hexValue":"43796265724172656e615374616b696e673a20756e7374616b656420616c7265","kind":"string","nodeType":"YulLiteral","src":"13446:34:21","type":"","value":"CyberArenaStaking: unstaked alre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13423:6:21"},"nodeType":"YulFunctionCall","src":"13423:58:21"},"nodeType":"YulExpressionStatement","src":"13423:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13502:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13510:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13498:3:21"},"nodeType":"YulFunctionCall","src":"13498:15:21"},{"hexValue":"616479","kind":"string","nodeType":"YulLiteral","src":"13515:5:21","type":"","value":"ady"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13491:6:21"},"nodeType":"YulFunctionCall","src":"13491:30:21"},"nodeType":"YulExpressionStatement","src":"13491:30:21"}]},"name":"store_literal_in_memory_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13404:6:21","type":""}],"src":"13306:222:21"},{"body":{"nodeType":"YulBlock","src":"13680:220:21","statements":[{"nodeType":"YulAssignment","src":"13690:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13756:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13761:2:21","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13697:58:21"},"nodeType":"YulFunctionCall","src":"13697:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13690:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13862:3:21"}],"functionName":{"name":"store_literal_in_memory_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336","nodeType":"YulIdentifier","src":"13773:88:21"},"nodeType":"YulFunctionCall","src":"13773:93:21"},"nodeType":"YulExpressionStatement","src":"13773:93:21"},{"nodeType":"YulAssignment","src":"13875:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13886:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13891:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13882:3:21"},"nodeType":"YulFunctionCall","src":"13882:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13875:3:21"}]}]},"name":"abi_encode_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13668:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13676:3:21","type":""}],"src":"13534:366:21"},{"body":{"nodeType":"YulBlock","src":"14077:248:21","statements":[{"nodeType":"YulAssignment","src":"14087:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14099:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14110:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14095:3:21"},"nodeType":"YulFunctionCall","src":"14095:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14087:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14134:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14145:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14130:3:21"},"nodeType":"YulFunctionCall","src":"14130:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14153:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14159:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14149:3:21"},"nodeType":"YulFunctionCall","src":"14149:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14123:6:21"},"nodeType":"YulFunctionCall","src":"14123:47:21"},"nodeType":"YulExpressionStatement","src":"14123:47:21"},{"nodeType":"YulAssignment","src":"14179:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14313:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14187:124:21"},"nodeType":"YulFunctionCall","src":"14187:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14179:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14057:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14072:4:21","type":""}],"src":"13906:419:21"},{"body":{"nodeType":"YulBlock","src":"14359:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14376:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14379:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14369:6:21"},"nodeType":"YulFunctionCall","src":"14369:88:21"},"nodeType":"YulExpressionStatement","src":"14369:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14473:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14476:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14466:6:21"},"nodeType":"YulFunctionCall","src":"14466:15:21"},"nodeType":"YulExpressionStatement","src":"14466:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14497:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14500:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14490:6:21"},"nodeType":"YulFunctionCall","src":"14490:15:21"},"nodeType":"YulExpressionStatement","src":"14490:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14331:180:21"},{"body":{"nodeType":"YulBlock","src":"14562:198:21","statements":[{"nodeType":"YulAssignment","src":"14572:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14595:1:21"}],"functionName":{"name":"cleanup_t_uint192","nodeType":"YulIdentifier","src":"14577:17:21"},"nodeType":"YulFunctionCall","src":"14577:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14572:1:21"}]},{"nodeType":"YulAssignment","src":"14606:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14629:1:21"}],"functionName":{"name":"cleanup_t_uint192","nodeType":"YulIdentifier","src":"14611:17:21"},"nodeType":"YulFunctionCall","src":"14611:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14606:1:21"}]},{"nodeType":"YulAssignment","src":"14640:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14652:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"14655:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14648:3:21"},"nodeType":"YulFunctionCall","src":"14648:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14640:4:21"}]},{"body":{"nodeType":"YulBlock","src":"14731:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14733:16:21"},"nodeType":"YulFunctionCall","src":"14733:18:21"},"nodeType":"YulExpressionStatement","src":"14733:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14673:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"14679:50:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14670:2:21"},"nodeType":"YulFunctionCall","src":"14670:60:21"},"nodeType":"YulIf","src":"14667:86:21"}]},"name":"checked_sub_t_uint192","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14548:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"14551:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14557:4:21","type":""}],"src":"14517:243:21"},{"body":{"nodeType":"YulBlock","src":"14813:228:21","statements":[{"nodeType":"YulAssignment","src":"14823:24:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14845:1:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"14828:16:21"},"nodeType":"YulFunctionCall","src":"14828:19:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14823:1:21"}]},{"nodeType":"YulAssignment","src":"14856:24:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14878:1:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"14861:16:21"},"nodeType":"YulFunctionCall","src":"14861:19:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14856:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"14889:28:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14912:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"14915:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14908:3:21"},"nodeType":"YulFunctionCall","src":"14908:9:21"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"14893:11:21","type":""}]},{"nodeType":"YulAssignment","src":"14926:40:21","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"14954:11:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"14937:16:21"},"nodeType":"YulFunctionCall","src":"14937:29:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"14926:7:21"}]},{"body":{"nodeType":"YulBlock","src":"15012:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15014:16:21"},"nodeType":"YulFunctionCall","src":"15014:18:21"},"nodeType":"YulExpressionStatement","src":"15014:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"14989:7:21"},{"name":"product_raw","nodeType":"YulIdentifier","src":"14998:11:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14986:2:21"},"nodeType":"YulFunctionCall","src":"14986:24:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14979:6:21"},"nodeType":"YulFunctionCall","src":"14979:32:21"},"nodeType":"YulIf","src":"14976:58:21"}]},"name":"checked_mul_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14796:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"14799:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"14805:7:21","type":""}],"src":"14766:275:21"},{"body":{"nodeType":"YulBlock","src":"15090:158:21","statements":[{"nodeType":"YulAssignment","src":"15100:24:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15122:1:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"15105:16:21"},"nodeType":"YulFunctionCall","src":"15105:19:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15100:1:21"}]},{"nodeType":"YulAssignment","src":"15133:24:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15155:1:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"15138:16:21"},"nodeType":"YulFunctionCall","src":"15138:19:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15133:1:21"}]},{"nodeType":"YulAssignment","src":"15166:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15177:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"15180:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15173:3:21"},"nodeType":"YulFunctionCall","src":"15173:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"15166:3:21"}]},{"body":{"nodeType":"YulBlock","src":"15219:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15221:16:21"},"nodeType":"YulFunctionCall","src":"15221:18:21"},"nodeType":"YulExpressionStatement","src":"15221:18:21"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"15198:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15203:14:21","type":"","value":"0xffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15195:2:21"},"nodeType":"YulFunctionCall","src":"15195:23:21"},"nodeType":"YulIf","src":"15192:49:21"}]},"name":"checked_add_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15077:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"15080:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15086:3:21","type":""}],"src":"15047:201:21"},{"body":{"nodeType":"YulBlock","src":"15302:231:21","statements":[{"nodeType":"YulAssignment","src":"15312:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15335:1:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"15317:17:21"},"nodeType":"YulFunctionCall","src":"15317:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15312:1:21"}]},{"nodeType":"YulAssignment","src":"15346:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15369:1:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"15351:17:21"},"nodeType":"YulFunctionCall","src":"15351:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15346:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"15380:28:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15403:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"15406:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15399:3:21"},"nodeType":"YulFunctionCall","src":"15399:9:21"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"15384:11:21","type":""}]},{"nodeType":"YulAssignment","src":"15417:41:21","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"15446:11:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"15428:17:21"},"nodeType":"YulFunctionCall","src":"15428:30:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"15417:7:21"}]},{"body":{"nodeType":"YulBlock","src":"15504:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15506:16:21"},"nodeType":"YulFunctionCall","src":"15506:18:21"},"nodeType":"YulExpressionStatement","src":"15506:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"15481:7:21"},{"name":"product_raw","nodeType":"YulIdentifier","src":"15490:11:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15478:2:21"},"nodeType":"YulFunctionCall","src":"15478:24:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15471:6:21"},"nodeType":"YulFunctionCall","src":"15471:32:21"},"nodeType":"YulIf","src":"15468:58:21"}]},"name":"checked_mul_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15285:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"15288:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"15294:7:21","type":""}],"src":"15254:279:21"},{"body":{"nodeType":"YulBlock","src":"15567:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15584:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15587:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15577:6:21"},"nodeType":"YulFunctionCall","src":"15577:88:21"},"nodeType":"YulExpressionStatement","src":"15577:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15681:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15684:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15674:6:21"},"nodeType":"YulFunctionCall","src":"15674:15:21"},"nodeType":"YulExpressionStatement","src":"15674:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15705:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15708:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15698:6:21"},"nodeType":"YulFunctionCall","src":"15698:15:21"},"nodeType":"YulExpressionStatement","src":"15698:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15539:180:21"},{"body":{"nodeType":"YulBlock","src":"15767:143:21","statements":[{"nodeType":"YulAssignment","src":"15777:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15800:1:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"15782:17:21"},"nodeType":"YulFunctionCall","src":"15782:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15777:1:21"}]},{"nodeType":"YulAssignment","src":"15811:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15834:1:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"15816:17:21"},"nodeType":"YulFunctionCall","src":"15816:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15811:1:21"}]},{"body":{"nodeType":"YulBlock","src":"15858:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"15860:16:21"},"nodeType":"YulFunctionCall","src":"15860:18:21"},"nodeType":"YulExpressionStatement","src":"15860:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15855:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15848:6:21"},"nodeType":"YulFunctionCall","src":"15848:9:21"},"nodeType":"YulIf","src":"15845:35:21"},{"nodeType":"YulAssignment","src":"15890:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15899:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"15902:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15895:3:21"},"nodeType":"YulFunctionCall","src":"15895:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"15890:1:21"}]}]},"name":"checked_div_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15756:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"15759:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"15765:1:21","type":""}],"src":"15725:185:21"},{"body":{"nodeType":"YulBlock","src":"15961:149:21","statements":[{"nodeType":"YulAssignment","src":"15971:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15994:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15976:17:21"},"nodeType":"YulFunctionCall","src":"15976:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15971:1:21"}]},{"nodeType":"YulAssignment","src":"16005:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16028:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16010:17:21"},"nodeType":"YulFunctionCall","src":"16010:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16005:1:21"}]},{"nodeType":"YulAssignment","src":"16039:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16051:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"16054:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16047:3:21"},"nodeType":"YulFunctionCall","src":"16047:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"16039:4:21"}]},{"body":{"nodeType":"YulBlock","src":"16081:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16083:16:21"},"nodeType":"YulFunctionCall","src":"16083:18:21"},"nodeType":"YulExpressionStatement","src":"16083:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"16072:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"16078:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16069:2:21"},"nodeType":"YulFunctionCall","src":"16069:11:21"},"nodeType":"YulIf","src":"16066:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15947:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"15950:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"15956:4:21","type":""}],"src":"15916:194:21"},{"body":{"nodeType":"YulBlock","src":"16160:147:21","statements":[{"nodeType":"YulAssignment","src":"16170:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16193:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16175:17:21"},"nodeType":"YulFunctionCall","src":"16175:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16170:1:21"}]},{"nodeType":"YulAssignment","src":"16204:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16227:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16209:17:21"},"nodeType":"YulFunctionCall","src":"16209:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16204:1:21"}]},{"nodeType":"YulAssignment","src":"16238:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16249:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"16252:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16245:3:21"},"nodeType":"YulFunctionCall","src":"16245:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16238:3:21"}]},{"body":{"nodeType":"YulBlock","src":"16278:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16280:16:21"},"nodeType":"YulFunctionCall","src":"16280:18:21"},"nodeType":"YulExpressionStatement","src":"16280:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16270:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"16273:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16267:2:21"},"nodeType":"YulFunctionCall","src":"16267:10:21"},"nodeType":"YulIf","src":"16264:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16147:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"16150:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16156:3:21","type":""}],"src":"16116:191:21"},{"body":{"nodeType":"YulBlock","src":"16357:196:21","statements":[{"nodeType":"YulAssignment","src":"16367:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16390:1:21"}],"functionName":{"name":"cleanup_t_uint192","nodeType":"YulIdentifier","src":"16372:17:21"},"nodeType":"YulFunctionCall","src":"16372:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16367:1:21"}]},{"nodeType":"YulAssignment","src":"16401:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16424:1:21"}],"functionName":{"name":"cleanup_t_uint192","nodeType":"YulIdentifier","src":"16406:17:21"},"nodeType":"YulFunctionCall","src":"16406:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16401:1:21"}]},{"nodeType":"YulAssignment","src":"16435:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16446:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"16449:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16442:3:21"},"nodeType":"YulFunctionCall","src":"16442:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16435:3:21"}]},{"body":{"nodeType":"YulBlock","src":"16524:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16526:16:21"},"nodeType":"YulFunctionCall","src":"16526:18:21"},"nodeType":"YulExpressionStatement","src":"16526:18:21"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"16467:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16472:50:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16464:2:21"},"nodeType":"YulFunctionCall","src":"16464:59:21"},"nodeType":"YulIf","src":"16461:85:21"}]},"name":"checked_add_t_uint192","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16344:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"16347:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16353:3:21","type":""}],"src":"16313:240:21"},{"body":{"nodeType":"YulBlock","src":"16665:118:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16687:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16695:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16683:3:21"},"nodeType":"YulFunctionCall","src":"16683:14:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"16699:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16676:6:21"},"nodeType":"YulFunctionCall","src":"16676:58:21"},"nodeType":"YulExpressionStatement","src":"16676:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16755:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16763:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16751:3:21"},"nodeType":"YulFunctionCall","src":"16751:15:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"16768:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16744:6:21"},"nodeType":"YulFunctionCall","src":"16744:32:21"},"nodeType":"YulExpressionStatement","src":"16744:32:21"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16657:6:21","type":""}],"src":"16559:224:21"},{"body":{"nodeType":"YulBlock","src":"16935:220:21","statements":[{"nodeType":"YulAssignment","src":"16945:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17011:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17016:2:21","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16952:58:21"},"nodeType":"YulFunctionCall","src":"16952:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16945:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17117:3:21"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"17028:88:21"},"nodeType":"YulFunctionCall","src":"17028:93:21"},"nodeType":"YulExpressionStatement","src":"17028:93:21"},{"nodeType":"YulAssignment","src":"17130:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17141:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17146:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17137:3:21"},"nodeType":"YulFunctionCall","src":"17137:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17130:3:21"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16923:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16931:3:21","type":""}],"src":"16789:366:21"},{"body":{"nodeType":"YulBlock","src":"17332:248:21","statements":[{"nodeType":"YulAssignment","src":"17342:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17354:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17365:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17350:3:21"},"nodeType":"YulFunctionCall","src":"17350:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17342:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17389:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17400:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17385:3:21"},"nodeType":"YulFunctionCall","src":"17385:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17408:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17414:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17404:3:21"},"nodeType":"YulFunctionCall","src":"17404:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17378:6:21"},"nodeType":"YulFunctionCall","src":"17378:47:21"},"nodeType":"YulExpressionStatement","src":"17378:47:21"},{"nodeType":"YulAssignment","src":"17434:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17568:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17442:124:21"},"nodeType":"YulFunctionCall","src":"17442:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17434:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17312:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17327:4:21","type":""}],"src":"17161:419:21"},{"body":{"nodeType":"YulBlock","src":"17692:114:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17714:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17722:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17710:3:21"},"nodeType":"YulFunctionCall","src":"17710:14:21"},{"hexValue":"5374616b696e673a2070656e616c74792042502065786365656473206c696d69","kind":"string","nodeType":"YulLiteral","src":"17726:34:21","type":"","value":"Staking: penalty BP exceeds limi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17703:6:21"},"nodeType":"YulFunctionCall","src":"17703:58:21"},"nodeType":"YulExpressionStatement","src":"17703:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17782:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17790:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17778:3:21"},"nodeType":"YulFunctionCall","src":"17778:15:21"},{"hexValue":"74","kind":"string","nodeType":"YulLiteral","src":"17795:3:21","type":"","value":"t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17771:6:21"},"nodeType":"YulFunctionCall","src":"17771:28:21"},"nodeType":"YulExpressionStatement","src":"17771:28:21"}]},"name":"store_literal_in_memory_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17684:6:21","type":""}],"src":"17586:220:21"},{"body":{"nodeType":"YulBlock","src":"17958:220:21","statements":[{"nodeType":"YulAssignment","src":"17968:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18034:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18039:2:21","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17975:58:21"},"nodeType":"YulFunctionCall","src":"17975:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17968:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18140:3:21"}],"functionName":{"name":"store_literal_in_memory_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7","nodeType":"YulIdentifier","src":"18051:88:21"},"nodeType":"YulFunctionCall","src":"18051:93:21"},"nodeType":"YulExpressionStatement","src":"18051:93:21"},{"nodeType":"YulAssignment","src":"18153:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18164:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18169:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18160:3:21"},"nodeType":"YulFunctionCall","src":"18160:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18153:3:21"}]}]},"name":"abi_encode_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17946:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17954:3:21","type":""}],"src":"17812:366:21"},{"body":{"nodeType":"YulBlock","src":"18355:248:21","statements":[{"nodeType":"YulAssignment","src":"18365:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18377:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18388:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18373:3:21"},"nodeType":"YulFunctionCall","src":"18373:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18365:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18412:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18423:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18408:3:21"},"nodeType":"YulFunctionCall","src":"18408:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18431:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18437:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18427:3:21"},"nodeType":"YulFunctionCall","src":"18427:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18401:6:21"},"nodeType":"YulFunctionCall","src":"18401:47:21"},"nodeType":"YulExpressionStatement","src":"18401:47:21"},{"nodeType":"YulAssignment","src":"18457:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18591:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18465:124:21"},"nodeType":"YulFunctionCall","src":"18465:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18457:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18335:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18350:4:21","type":""}],"src":"18184:419:21"},{"body":{"nodeType":"YulBlock","src":"18715:128:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18737:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18745:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18733:3:21"},"nodeType":"YulFunctionCall","src":"18733:14:21"},{"hexValue":"43796265724172656e615374616b696e673a2074726561737572792069732074","kind":"string","nodeType":"YulLiteral","src":"18749:34:21","type":"","value":"CyberArenaStaking: treasury is t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18726:6:21"},"nodeType":"YulFunctionCall","src":"18726:58:21"},"nodeType":"YulExpressionStatement","src":"18726:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18805:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18813:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18801:3:21"},"nodeType":"YulFunctionCall","src":"18801:15:21"},{"hexValue":"6865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"18818:17:21","type":"","value":"he zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18794:6:21"},"nodeType":"YulFunctionCall","src":"18794:42:21"},"nodeType":"YulExpressionStatement","src":"18794:42:21"}]},"name":"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18707:6:21","type":""}],"src":"18609:234:21"},{"body":{"nodeType":"YulBlock","src":"18995:220:21","statements":[{"nodeType":"YulAssignment","src":"19005:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19071:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19076:2:21","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19012:58:21"},"nodeType":"YulFunctionCall","src":"19012:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19005:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19177:3:21"}],"functionName":{"name":"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","nodeType":"YulIdentifier","src":"19088:88:21"},"nodeType":"YulFunctionCall","src":"19088:93:21"},"nodeType":"YulExpressionStatement","src":"19088:93:21"},{"nodeType":"YulAssignment","src":"19190:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19201:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19206:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19197:3:21"},"nodeType":"YulFunctionCall","src":"19197:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19190:3:21"}]}]},"name":"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18983:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18991:3:21","type":""}],"src":"18849:366:21"},{"body":{"nodeType":"YulBlock","src":"19392:248:21","statements":[{"nodeType":"YulAssignment","src":"19402:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19414:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19425:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19410:3:21"},"nodeType":"YulFunctionCall","src":"19410:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19402:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19449:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19460:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19445:3:21"},"nodeType":"YulFunctionCall","src":"19445:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19468:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19474:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19464:3:21"},"nodeType":"YulFunctionCall","src":"19464:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19438:6:21"},"nodeType":"YulFunctionCall","src":"19438:47:21"},"nodeType":"YulExpressionStatement","src":"19438:47:21"},{"nodeType":"YulAssignment","src":"19494:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19628:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19502:124:21"},"nodeType":"YulFunctionCall","src":"19502:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19494:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19372:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19387:4:21","type":""}],"src":"19221:419:21"},{"body":{"nodeType":"YulBlock","src":"19752:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19774:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19782:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19770:3:21"},"nodeType":"YulFunctionCall","src":"19770:14:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"19786:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19763:6:21"},"nodeType":"YulFunctionCall","src":"19763:58:21"},"nodeType":"YulExpressionStatement","src":"19763:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19842:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19850:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19838:3:21"},"nodeType":"YulFunctionCall","src":"19838:15:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"19855:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19831:6:21"},"nodeType":"YulFunctionCall","src":"19831:33:21"},"nodeType":"YulExpressionStatement","src":"19831:33:21"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19744:6:21","type":""}],"src":"19646:225:21"},{"body":{"nodeType":"YulBlock","src":"20023:220:21","statements":[{"nodeType":"YulAssignment","src":"20033:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20099:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20104:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20040:58:21"},"nodeType":"YulFunctionCall","src":"20040:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20033:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20205:3:21"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"20116:88:21"},"nodeType":"YulFunctionCall","src":"20116:93:21"},"nodeType":"YulExpressionStatement","src":"20116:93:21"},{"nodeType":"YulAssignment","src":"20218:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20229:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20234:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20225:3:21"},"nodeType":"YulFunctionCall","src":"20225:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20218:3:21"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20011:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20019:3:21","type":""}],"src":"19877:366:21"},{"body":{"nodeType":"YulBlock","src":"20420:248:21","statements":[{"nodeType":"YulAssignment","src":"20430:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20442:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20453:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20438:3:21"},"nodeType":"YulFunctionCall","src":"20438:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20430:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20477:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20488:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20473:3:21"},"nodeType":"YulFunctionCall","src":"20473:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20496:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20502:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20492:3:21"},"nodeType":"YulFunctionCall","src":"20492:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20466:6:21"},"nodeType":"YulFunctionCall","src":"20466:47:21"},"nodeType":"YulExpressionStatement","src":"20466:47:21"},{"nodeType":"YulAssignment","src":"20522:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20656:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20530:124:21"},"nodeType":"YulFunctionCall","src":"20530:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20522:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20400:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20415:4:21","type":""}],"src":"20249:419:21"},{"body":{"nodeType":"YulBlock","src":"20780:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20802:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20810:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20798:3:21"},"nodeType":"YulFunctionCall","src":"20798:14:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"20814:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20791:6:21"},"nodeType":"YulFunctionCall","src":"20791:58:21"},"nodeType":"YulExpressionStatement","src":"20791:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20870:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20878:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20866:3:21"},"nodeType":"YulFunctionCall","src":"20866:15:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"20883:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20859:6:21"},"nodeType":"YulFunctionCall","src":"20859:31:21"},"nodeType":"YulExpressionStatement","src":"20859:31:21"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20772:6:21","type":""}],"src":"20674:223:21"},{"body":{"nodeType":"YulBlock","src":"21049:220:21","statements":[{"nodeType":"YulAssignment","src":"21059:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21125:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21130:2:21","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21066:58:21"},"nodeType":"YulFunctionCall","src":"21066:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21059:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21231:3:21"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"21142:88:21"},"nodeType":"YulFunctionCall","src":"21142:93:21"},"nodeType":"YulExpressionStatement","src":"21142:93:21"},{"nodeType":"YulAssignment","src":"21244:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21255:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21260:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21251:3:21"},"nodeType":"YulFunctionCall","src":"21251:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21244:3:21"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21037:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21045:3:21","type":""}],"src":"20903:366:21"},{"body":{"nodeType":"YulBlock","src":"21446:248:21","statements":[{"nodeType":"YulAssignment","src":"21456:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21468:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21479:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21464:3:21"},"nodeType":"YulFunctionCall","src":"21464:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21456:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21503:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21514:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21499:3:21"},"nodeType":"YulFunctionCall","src":"21499:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21522:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21528:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21518:3:21"},"nodeType":"YulFunctionCall","src":"21518:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21492:6:21"},"nodeType":"YulFunctionCall","src":"21492:47:21"},"nodeType":"YulExpressionStatement","src":"21492:47:21"},{"nodeType":"YulAssignment","src":"21548:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21682:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21556:124:21"},"nodeType":"YulFunctionCall","src":"21556:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21548:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21426:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21441:4:21","type":""}],"src":"21275:419:21"},{"body":{"nodeType":"YulBlock","src":"21806:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21828:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21836:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21824:3:21"},"nodeType":"YulFunctionCall","src":"21824:14:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"21840:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21817:6:21"},"nodeType":"YulFunctionCall","src":"21817:58:21"},"nodeType":"YulExpressionStatement","src":"21817:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21896:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21904:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21892:3:21"},"nodeType":"YulFunctionCall","src":"21892:15:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"21909:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21885:6:21"},"nodeType":"YulFunctionCall","src":"21885:29:21"},"nodeType":"YulExpressionStatement","src":"21885:29:21"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21798:6:21","type":""}],"src":"21700:221:21"},{"body":{"nodeType":"YulBlock","src":"22073:220:21","statements":[{"nodeType":"YulAssignment","src":"22083:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22149:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22154:2:21","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22090:58:21"},"nodeType":"YulFunctionCall","src":"22090:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22083:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22255:3:21"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"22166:88:21"},"nodeType":"YulFunctionCall","src":"22166:93:21"},"nodeType":"YulExpressionStatement","src":"22166:93:21"},{"nodeType":"YulAssignment","src":"22268:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22279:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22284:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22275:3:21"},"nodeType":"YulFunctionCall","src":"22275:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22268:3:21"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22061:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22069:3:21","type":""}],"src":"21927:366:21"},{"body":{"nodeType":"YulBlock","src":"22470:248:21","statements":[{"nodeType":"YulAssignment","src":"22480:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22492:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22503:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22488:3:21"},"nodeType":"YulFunctionCall","src":"22488:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22480:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22527:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22538:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22523:3:21"},"nodeType":"YulFunctionCall","src":"22523:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22546:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22552:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22542:3:21"},"nodeType":"YulFunctionCall","src":"22542:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22516:6:21"},"nodeType":"YulFunctionCall","src":"22516:47:21"},"nodeType":"YulExpressionStatement","src":"22516:47:21"},{"nodeType":"YulAssignment","src":"22572:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22706:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22580:124:21"},"nodeType":"YulFunctionCall","src":"22580:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22572:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22450:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22465:4:21","type":""}],"src":"22299:419:21"},{"body":{"nodeType":"YulBlock","src":"22830:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22852:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22860:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22848:3:21"},"nodeType":"YulFunctionCall","src":"22848:14:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"22864:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22841:6:21"},"nodeType":"YulFunctionCall","src":"22841:55:21"},"nodeType":"YulExpressionStatement","src":"22841:55:21"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22822:6:21","type":""}],"src":"22724:179:21"},{"body":{"nodeType":"YulBlock","src":"23055:220:21","statements":[{"nodeType":"YulAssignment","src":"23065:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23131:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23136:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23072:58:21"},"nodeType":"YulFunctionCall","src":"23072:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23065:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23237:3:21"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"23148:88:21"},"nodeType":"YulFunctionCall","src":"23148:93:21"},"nodeType":"YulExpressionStatement","src":"23148:93:21"},{"nodeType":"YulAssignment","src":"23250:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23261:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23266:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23257:3:21"},"nodeType":"YulFunctionCall","src":"23257:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23250:3:21"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23043:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23051:3:21","type":""}],"src":"22909:366:21"},{"body":{"nodeType":"YulBlock","src":"23452:248:21","statements":[{"nodeType":"YulAssignment","src":"23462:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23474:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23485:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23470:3:21"},"nodeType":"YulFunctionCall","src":"23470:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23462:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23509:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23520:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23505:3:21"},"nodeType":"YulFunctionCall","src":"23505:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23528:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"23534:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23524:3:21"},"nodeType":"YulFunctionCall","src":"23524:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23498:6:21"},"nodeType":"YulFunctionCall","src":"23498:47:21"},"nodeType":"YulExpressionStatement","src":"23498:47:21"},{"nodeType":"YulAssignment","src":"23554:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23688:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23562:124:21"},"nodeType":"YulFunctionCall","src":"23562:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23554:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23432:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23447:4:21","type":""}],"src":"23281:419:21"},{"body":{"nodeType":"YulBlock","src":"23812:116:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23834:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23842:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23830:3:21"},"nodeType":"YulFunctionCall","src":"23830:14:21"},{"hexValue":"43796265724172656e615374616b696e673a204e4f4e5f5452414e5346455241","kind":"string","nodeType":"YulLiteral","src":"23846:34:21","type":"","value":"CyberArenaStaking: NON_TRANSFERA"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23823:6:21"},"nodeType":"YulFunctionCall","src":"23823:58:21"},"nodeType":"YulExpressionStatement","src":"23823:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23902:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23910:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23898:3:21"},"nodeType":"YulFunctionCall","src":"23898:15:21"},{"hexValue":"424c45","kind":"string","nodeType":"YulLiteral","src":"23915:5:21","type":"","value":"BLE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23891:6:21"},"nodeType":"YulFunctionCall","src":"23891:30:21"},"nodeType":"YulExpressionStatement","src":"23891:30:21"}]},"name":"store_literal_in_memory_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23804:6:21","type":""}],"src":"23706:222:21"},{"body":{"nodeType":"YulBlock","src":"24080:220:21","statements":[{"nodeType":"YulAssignment","src":"24090:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24156:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"24161:2:21","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24097:58:21"},"nodeType":"YulFunctionCall","src":"24097:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24090:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24262:3:21"}],"functionName":{"name":"store_literal_in_memory_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f","nodeType":"YulIdentifier","src":"24173:88:21"},"nodeType":"YulFunctionCall","src":"24173:93:21"},"nodeType":"YulExpressionStatement","src":"24173:93:21"},{"nodeType":"YulAssignment","src":"24275:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24286:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"24291:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24282:3:21"},"nodeType":"YulFunctionCall","src":"24282:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24275:3:21"}]}]},"name":"abi_encode_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24068:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24076:3:21","type":""}],"src":"23934:366:21"},{"body":{"nodeType":"YulBlock","src":"24477:248:21","statements":[{"nodeType":"YulAssignment","src":"24487:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24499:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24510:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24495:3:21"},"nodeType":"YulFunctionCall","src":"24495:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24487:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24534:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24545:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24530:3:21"},"nodeType":"YulFunctionCall","src":"24530:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24553:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"24559:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24549:3:21"},"nodeType":"YulFunctionCall","src":"24549:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24523:6:21"},"nodeType":"YulFunctionCall","src":"24523:47:21"},"nodeType":"YulExpressionStatement","src":"24523:47:21"},{"nodeType":"YulAssignment","src":"24579:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24713:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24587:124:21"},"nodeType":"YulFunctionCall","src":"24587:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24579:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24457:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24472:4:21","type":""}],"src":"24306:419:21"},{"body":{"nodeType":"YulBlock","src":"24837:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24859:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24867:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24855:3:21"},"nodeType":"YulFunctionCall","src":"24855:14:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"24871:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24848:6:21"},"nodeType":"YulFunctionCall","src":"24848:58:21"},"nodeType":"YulExpressionStatement","src":"24848:58:21"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24829:6:21","type":""}],"src":"24731:182:21"},{"body":{"nodeType":"YulBlock","src":"25065:220:21","statements":[{"nodeType":"YulAssignment","src":"25075:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25141:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"25146:2:21","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25082:58:21"},"nodeType":"YulFunctionCall","src":"25082:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25075:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25247:3:21"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"25158:88:21"},"nodeType":"YulFunctionCall","src":"25158:93:21"},"nodeType":"YulExpressionStatement","src":"25158:93:21"},{"nodeType":"YulAssignment","src":"25260:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25271:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"25276:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25267:3:21"},"nodeType":"YulFunctionCall","src":"25267:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25260:3:21"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25053:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25061:3:21","type":""}],"src":"24919:366:21"},{"body":{"nodeType":"YulBlock","src":"25462:248:21","statements":[{"nodeType":"YulAssignment","src":"25472:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25484:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25495:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25480:3:21"},"nodeType":"YulFunctionCall","src":"25480:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25472:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25519:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25530:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25515:3:21"},"nodeType":"YulFunctionCall","src":"25515:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25538:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"25544:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25534:3:21"},"nodeType":"YulFunctionCall","src":"25534:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25508:6:21"},"nodeType":"YulFunctionCall","src":"25508:47:21"},"nodeType":"YulExpressionStatement","src":"25508:47:21"},{"nodeType":"YulAssignment","src":"25564:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25698:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25572:124:21"},"nodeType":"YulFunctionCall","src":"25572:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25564:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25442:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25457:4:21","type":""}],"src":"25291:419:21"},{"body":{"nodeType":"YulBlock","src":"25822:114:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25844:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"25852:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25840:3:21"},"nodeType":"YulFunctionCall","src":"25840:14:21"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"25856:34:21","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25833:6:21"},"nodeType":"YulFunctionCall","src":"25833:58:21"},"nodeType":"YulExpressionStatement","src":"25833:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25912:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"25920:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25908:3:21"},"nodeType":"YulFunctionCall","src":"25908:15:21"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"25925:3:21","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25901:6:21"},"nodeType":"YulFunctionCall","src":"25901:28:21"},"nodeType":"YulExpressionStatement","src":"25901:28:21"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25814:6:21","type":""}],"src":"25716:220:21"},{"body":{"nodeType":"YulBlock","src":"26088:220:21","statements":[{"nodeType":"YulAssignment","src":"26098:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26164:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"26169:2:21","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26105:58:21"},"nodeType":"YulFunctionCall","src":"26105:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26098:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26270:3:21"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"26181:88:21"},"nodeType":"YulFunctionCall","src":"26181:93:21"},"nodeType":"YulExpressionStatement","src":"26181:93:21"},{"nodeType":"YulAssignment","src":"26283:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26294:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"26299:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26290:3:21"},"nodeType":"YulFunctionCall","src":"26290:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26283:3:21"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26076:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26084:3:21","type":""}],"src":"25942:366:21"},{"body":{"nodeType":"YulBlock","src":"26485:248:21","statements":[{"nodeType":"YulAssignment","src":"26495:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26507:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26518:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26503:3:21"},"nodeType":"YulFunctionCall","src":"26503:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26495:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26542:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26553:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26538:3:21"},"nodeType":"YulFunctionCall","src":"26538:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26561:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"26567:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26557:3:21"},"nodeType":"YulFunctionCall","src":"26557:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26531:6:21"},"nodeType":"YulFunctionCall","src":"26531:47:21"},"nodeType":"YulExpressionStatement","src":"26531:47:21"},{"nodeType":"YulAssignment","src":"26587:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26721:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26595:124:21"},"nodeType":"YulFunctionCall","src":"26595:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26587:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26465:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26480:4:21","type":""}],"src":"26314:419:21"},{"body":{"nodeType":"YulBlock","src":"26845:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26867:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"26875:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26863:3:21"},"nodeType":"YulFunctionCall","src":"26863:14:21"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"26879:34:21","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26856:6:21"},"nodeType":"YulFunctionCall","src":"26856:58:21"},"nodeType":"YulExpressionStatement","src":"26856:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26935:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"26943:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26931:3:21"},"nodeType":"YulFunctionCall","src":"26931:15:21"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"26948:4:21","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26924:6:21"},"nodeType":"YulFunctionCall","src":"26924:29:21"},"nodeType":"YulExpressionStatement","src":"26924:29:21"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26837:6:21","type":""}],"src":"26739:221:21"},{"body":{"nodeType":"YulBlock","src":"27112:220:21","statements":[{"nodeType":"YulAssignment","src":"27122:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27188:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"27193:2:21","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27129:58:21"},"nodeType":"YulFunctionCall","src":"27129:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27122:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27294:3:21"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"27205:88:21"},"nodeType":"YulFunctionCall","src":"27205:93:21"},"nodeType":"YulExpressionStatement","src":"27205:93:21"},{"nodeType":"YulAssignment","src":"27307:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27318:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"27323:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27314:3:21"},"nodeType":"YulFunctionCall","src":"27314:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27307:3:21"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27100:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27108:3:21","type":""}],"src":"26966:366:21"},{"body":{"nodeType":"YulBlock","src":"27509:248:21","statements":[{"nodeType":"YulAssignment","src":"27519:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27531:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27542:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27527:3:21"},"nodeType":"YulFunctionCall","src":"27527:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27519:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27566:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27577:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27562:3:21"},"nodeType":"YulFunctionCall","src":"27562:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27585:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"27591:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27581:3:21"},"nodeType":"YulFunctionCall","src":"27581:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27555:6:21"},"nodeType":"YulFunctionCall","src":"27555:47:21"},"nodeType":"YulExpressionStatement","src":"27555:47:21"},{"nodeType":"YulAssignment","src":"27611:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27745:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27619:124:21"},"nodeType":"YulFunctionCall","src":"27619:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27611:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27489:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27504:4:21","type":""}],"src":"27338:419:21"},{"body":{"nodeType":"YulBlock","src":"27889:206:21","statements":[{"nodeType":"YulAssignment","src":"27899:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27911:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27922:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27907:3:21"},"nodeType":"YulFunctionCall","src":"27907:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27899:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27979:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27992:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28003:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27988:3:21"},"nodeType":"YulFunctionCall","src":"27988:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27935:43:21"},"nodeType":"YulFunctionCall","src":"27935:71:21"},"nodeType":"YulExpressionStatement","src":"27935:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28060:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28073:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28084:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28069:3:21"},"nodeType":"YulFunctionCall","src":"28069:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28016:43:21"},"nodeType":"YulFunctionCall","src":"28016:72:21"},"nodeType":"YulExpressionStatement","src":"28016:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27853:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27865:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27873:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27884:4:21","type":""}],"src":"27763:332:21"},{"body":{"nodeType":"YulBlock","src":"28255:288:21","statements":[{"nodeType":"YulAssignment","src":"28265:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28277:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28288:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28273:3:21"},"nodeType":"YulFunctionCall","src":"28273:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28265:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28345:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28358:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28369:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28354:3:21"},"nodeType":"YulFunctionCall","src":"28354:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28301:43:21"},"nodeType":"YulFunctionCall","src":"28301:71:21"},"nodeType":"YulExpressionStatement","src":"28301:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28426:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28439:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28450:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28435:3:21"},"nodeType":"YulFunctionCall","src":"28435:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28382:43:21"},"nodeType":"YulFunctionCall","src":"28382:72:21"},"nodeType":"YulExpressionStatement","src":"28382:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28508:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28521:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28532:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28517:3:21"},"nodeType":"YulFunctionCall","src":"28517:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28464:43:21"},"nodeType":"YulFunctionCall","src":"28464:72:21"},"nodeType":"YulExpressionStatement","src":"28464:72:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28211:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28223:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28231:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28239:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28250:4:21","type":""}],"src":"28101:442:21"},{"body":{"nodeType":"YulBlock","src":"28655:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28677:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28685:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28673:3:21"},"nodeType":"YulFunctionCall","src":"28673:14:21"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"28689:33:21","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28666:6:21"},"nodeType":"YulFunctionCall","src":"28666:57:21"},"nodeType":"YulExpressionStatement","src":"28666:57:21"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28647:6:21","type":""}],"src":"28549:181:21"},{"body":{"nodeType":"YulBlock","src":"28882:220:21","statements":[{"nodeType":"YulAssignment","src":"28892:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28958:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"28963:2:21","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28899:58:21"},"nodeType":"YulFunctionCall","src":"28899:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28892:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29064:3:21"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"28975:88:21"},"nodeType":"YulFunctionCall","src":"28975:93:21"},"nodeType":"YulExpressionStatement","src":"28975:93:21"},{"nodeType":"YulAssignment","src":"29077:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29088:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"29093:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29084:3:21"},"nodeType":"YulFunctionCall","src":"29084:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29077:3:21"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28870:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28878:3:21","type":""}],"src":"28736:366:21"},{"body":{"nodeType":"YulBlock","src":"29279:248:21","statements":[{"nodeType":"YulAssignment","src":"29289:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29301:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29312:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29297:3:21"},"nodeType":"YulFunctionCall","src":"29297:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29289:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29336:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29347:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29332:3:21"},"nodeType":"YulFunctionCall","src":"29332:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29355:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"29361:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29351:3:21"},"nodeType":"YulFunctionCall","src":"29351:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29325:6:21"},"nodeType":"YulFunctionCall","src":"29325:47:21"},"nodeType":"YulExpressionStatement","src":"29325:47:21"},{"nodeType":"YulAssignment","src":"29381:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29515:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29389:124:21"},"nodeType":"YulFunctionCall","src":"29389:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29381:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29259:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29274:4:21","type":""}],"src":"29108:419:21"},{"body":{"nodeType":"YulBlock","src":"29573:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"29627:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29636:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29639:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29629:6:21"},"nodeType":"YulFunctionCall","src":"29629:12:21"},"nodeType":"YulExpressionStatement","src":"29629:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29596:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29618:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"29603:14:21"},"nodeType":"YulFunctionCall","src":"29603:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29593:2:21"},"nodeType":"YulFunctionCall","src":"29593:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29586:6:21"},"nodeType":"YulFunctionCall","src":"29586:40:21"},"nodeType":"YulIf","src":"29583:60:21"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29566:5:21","type":""}],"src":"29533:116:21"},{"body":{"nodeType":"YulBlock","src":"29715:77:21","statements":[{"nodeType":"YulAssignment","src":"29725:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29740:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29734:5:21"},"nodeType":"YulFunctionCall","src":"29734:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29725:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29780:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"29756:23:21"},"nodeType":"YulFunctionCall","src":"29756:30:21"},"nodeType":"YulExpressionStatement","src":"29756:30:21"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"29693:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"29701:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"29709:5:21","type":""}],"src":"29655:137:21"},{"body":{"nodeType":"YulBlock","src":"29872:271:21","statements":[{"body":{"nodeType":"YulBlock","src":"29918:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"29920:77:21"},"nodeType":"YulFunctionCall","src":"29920:79:21"},"nodeType":"YulExpressionStatement","src":"29920:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"29893:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"29902:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29889:3:21"},"nodeType":"YulFunctionCall","src":"29889:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"29914:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"29885:3:21"},"nodeType":"YulFunctionCall","src":"29885:32:21"},"nodeType":"YulIf","src":"29882:119:21"},{"nodeType":"YulBlock","src":"30011:125:21","statements":[{"nodeType":"YulVariableDeclaration","src":"30026:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"30040:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30030:6:21","type":""}]},{"nodeType":"YulAssignment","src":"30055:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30098:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"30109:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30094:3:21"},"nodeType":"YulFunctionCall","src":"30094:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30118:7:21"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"30065:28:21"},"nodeType":"YulFunctionCall","src":"30065:61:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"30055:6:21"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29842:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"29853:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"29865:6:21","type":""}],"src":"29798:345:21"},{"body":{"nodeType":"YulBlock","src":"30255:123:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30277:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"30285:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30273:3:21"},"nodeType":"YulFunctionCall","src":"30273:14:21"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"30289:34:21","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30266:6:21"},"nodeType":"YulFunctionCall","src":"30266:58:21"},"nodeType":"YulExpressionStatement","src":"30266:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30345:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"30353:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30341:3:21"},"nodeType":"YulFunctionCall","src":"30341:15:21"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"30358:12:21","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30334:6:21"},"nodeType":"YulFunctionCall","src":"30334:37:21"},"nodeType":"YulExpressionStatement","src":"30334:37:21"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30247:6:21","type":""}],"src":"30149:229:21"},{"body":{"nodeType":"YulBlock","src":"30530:220:21","statements":[{"nodeType":"YulAssignment","src":"30540:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30606:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"30611:2:21","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30547:58:21"},"nodeType":"YulFunctionCall","src":"30547:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30540:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30712:3:21"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"30623:88:21"},"nodeType":"YulFunctionCall","src":"30623:93:21"},"nodeType":"YulExpressionStatement","src":"30623:93:21"},{"nodeType":"YulAssignment","src":"30725:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30736:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"30741:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30732:3:21"},"nodeType":"YulFunctionCall","src":"30732:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30725:3:21"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30518:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30526:3:21","type":""}],"src":"30384:366:21"},{"body":{"nodeType":"YulBlock","src":"30927:248:21","statements":[{"nodeType":"YulAssignment","src":"30937:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30949:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30960:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30945:3:21"},"nodeType":"YulFunctionCall","src":"30945:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30937:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30984:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30995:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30980:3:21"},"nodeType":"YulFunctionCall","src":"30980:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31003:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"31009:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30999:3:21"},"nodeType":"YulFunctionCall","src":"30999:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30973:6:21"},"nodeType":"YulFunctionCall","src":"30973:47:21"},"nodeType":"YulExpressionStatement","src":"30973:47:21"},{"nodeType":"YulAssignment","src":"31029:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31163:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31037:124:21"},"nodeType":"YulFunctionCall","src":"31037:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31029:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30907:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30922:4:21","type":""}],"src":"30756:419:21"},{"body":{"nodeType":"YulBlock","src":"31287:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31309:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31317:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31305:3:21"},"nodeType":"YulFunctionCall","src":"31305:14:21"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"31321:34:21","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31298:6:21"},"nodeType":"YulFunctionCall","src":"31298:58:21"},"nodeType":"YulExpressionStatement","src":"31298:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31377:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31385:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31373:3:21"},"nodeType":"YulFunctionCall","src":"31373:15:21"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"31390:8:21","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31366:6:21"},"nodeType":"YulFunctionCall","src":"31366:33:21"},"nodeType":"YulExpressionStatement","src":"31366:33:21"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31279:6:21","type":""}],"src":"31181:225:21"},{"body":{"nodeType":"YulBlock","src":"31558:220:21","statements":[{"nodeType":"YulAssignment","src":"31568:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31634:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"31639:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31575:58:21"},"nodeType":"YulFunctionCall","src":"31575:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31568:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31740:3:21"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"31651:88:21"},"nodeType":"YulFunctionCall","src":"31651:93:21"},"nodeType":"YulExpressionStatement","src":"31651:93:21"},{"nodeType":"YulAssignment","src":"31753:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31764:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"31769:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31760:3:21"},"nodeType":"YulFunctionCall","src":"31760:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31753:3:21"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31546:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31554:3:21","type":""}],"src":"31412:366:21"},{"body":{"nodeType":"YulBlock","src":"31955:248:21","statements":[{"nodeType":"YulAssignment","src":"31965:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31977:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31988:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31973:3:21"},"nodeType":"YulFunctionCall","src":"31973:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31965:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32012:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32023:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32008:3:21"},"nodeType":"YulFunctionCall","src":"32008:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32031:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"32037:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32027:3:21"},"nodeType":"YulFunctionCall","src":"32027:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32001:6:21"},"nodeType":"YulFunctionCall","src":"32001:47:21"},"nodeType":"YulExpressionStatement","src":"32001:47:21"},{"nodeType":"YulAssignment","src":"32057:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32191:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32065:124:21"},"nodeType":"YulFunctionCall","src":"32065:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32057:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31935:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31950:4:21","type":""}],"src":"31784:419:21"},{"body":{"nodeType":"YulBlock","src":"32315:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32337:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32345:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32333:3:21"},"nodeType":"YulFunctionCall","src":"32333:14:21"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"32349:31:21","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32326:6:21"},"nodeType":"YulFunctionCall","src":"32326:55:21"},"nodeType":"YulExpressionStatement","src":"32326:55:21"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32307:6:21","type":""}],"src":"32209:179:21"},{"body":{"nodeType":"YulBlock","src":"32540:220:21","statements":[{"nodeType":"YulAssignment","src":"32550:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32616:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"32621:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32557:58:21"},"nodeType":"YulFunctionCall","src":"32557:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32550:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32722:3:21"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"32633:88:21"},"nodeType":"YulFunctionCall","src":"32633:93:21"},"nodeType":"YulExpressionStatement","src":"32633:93:21"},{"nodeType":"YulAssignment","src":"32735:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32746:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"32751:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32742:3:21"},"nodeType":"YulFunctionCall","src":"32742:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32735:3:21"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32528:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32536:3:21","type":""}],"src":"32394:366:21"},{"body":{"nodeType":"YulBlock","src":"32937:248:21","statements":[{"nodeType":"YulAssignment","src":"32947:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32959:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32970:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32955:3:21"},"nodeType":"YulFunctionCall","src":"32955:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32947:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32994:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33005:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32990:3:21"},"nodeType":"YulFunctionCall","src":"32990:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33013:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"33019:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33009:3:21"},"nodeType":"YulFunctionCall","src":"33009:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32983:6:21"},"nodeType":"YulFunctionCall","src":"32983:47:21"},"nodeType":"YulExpressionStatement","src":"32983:47:21"},{"nodeType":"YulAssignment","src":"33039:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33173:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33047:124:21"},"nodeType":"YulFunctionCall","src":"33047:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33039:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32917:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32932:4:21","type":""}],"src":"32766:419:21"},{"body":{"nodeType":"YulBlock","src":"33249:40:21","statements":[{"nodeType":"YulAssignment","src":"33260:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33276:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33270:5:21"},"nodeType":"YulFunctionCall","src":"33270:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"33260:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33232:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"33242:6:21","type":""}],"src":"33191:98:21"},{"body":{"nodeType":"YulBlock","src":"33408:34:21","statements":[{"nodeType":"YulAssignment","src":"33418:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"33433:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"33418:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33380:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"33385:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"33396:11:21","type":""}],"src":"33295:147:21"},{"body":{"nodeType":"YulBlock","src":"33556:278:21","statements":[{"nodeType":"YulVariableDeclaration","src":"33566:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33612:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"33580:31:21"},"nodeType":"YulFunctionCall","src":"33580:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"33570:6:21","type":""}]},{"nodeType":"YulAssignment","src":"33627:95:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33710:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"33715:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"33634:75:21"},"nodeType":"YulFunctionCall","src":"33634:88:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33627:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33770:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"33777:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33766:3:21"},"nodeType":"YulFunctionCall","src":"33766:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"33784:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"33789:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"33731:34:21"},"nodeType":"YulFunctionCall","src":"33731:65:21"},"nodeType":"YulExpressionStatement","src":"33731:65:21"},{"nodeType":"YulAssignment","src":"33805:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33816:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"33821:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33812:3:21"},"nodeType":"YulFunctionCall","src":"33812:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33805:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33537:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33544:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33552:3:21","type":""}],"src":"33448:386:21"},{"body":{"nodeType":"YulBlock","src":"33974:137:21","statements":[{"nodeType":"YulAssignment","src":"33985:100:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34072:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"34081:3:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"33992:79:21"},"nodeType":"YulFunctionCall","src":"33992:93:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33985:3:21"}]},{"nodeType":"YulAssignment","src":"34095:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"34102:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34095:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33953:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33959:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33970:3:21","type":""}],"src":"33840:271:21"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint192(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint192_to_t_uint192_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint192(value))\n    }\n\n    function abi_encode_tuple_t_uint192__to_t_uint192__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint192_to_t_uint192_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$894_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$894_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$894_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$894__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$894_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__to_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint192_to_t_uint192_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: invalid index\")\n\n    }\n\n    function abi_encode_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: unstaked alre\")\n\n        mstore(add(memPtr, 32), \"ady\")\n\n    }\n\n    function abi_encode_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint192(x, y) -> diff {\n        x := cleanup_t_uint192(x)\n        y := cleanup_t_uint192(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint48(x, y) -> product {\n        x := cleanup_t_uint48(x)\n        y := cleanup_t_uint48(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint48(product_raw)\n\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint48(x, y) -> sum {\n        x := cleanup_t_uint48(x)\n        y := cleanup_t_uint48(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint128(x, y) -> product {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint128(product_raw)\n\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint128(x, y) -> r {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint192(x, y) -> sum {\n        x := cleanup_t_uint192(x)\n        y := cleanup_t_uint192(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking: penalty BP exceeds limi\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: treasury is t\")\n\n        mstore(add(memPtr, 32), \"he zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: NON_TRANSFERA\")\n\n        mstore(add(memPtr, 32), \"BLE\")\n\n    }\n\n    function abi_encode_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061018e5760003560e01c806372f702f3116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461048c578063ee2b44e4146104bc578063f0f44260146104da578063f2fde38b146104f65761018e565b8063a9059cbb1461040b578063bacb4c571461043b578063c8b6cbf7146104575761018e565b806372f702f31461034757806388fe2be8146103655780638da5cb5b1461038157806395d89b411461039f578063a457c2d7146103bd578063a5582c3e146103ed5761018e565b80632e17de781161014b5780633a98ef39116101255780633a98ef39146102d157806361d027b3146102ef57806370a082311461030d578063715018a61461033d5761018e565b80632e17de7814610267578063313ce5671461028357806339509351146102a15761018e565b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101e157806322f8e566146101ff57806323b872dd1461021b5780632932e77a1461024b575b600080fd5b61019b610512565b6040516101a89190611f55565b60405180910390f35b6101cb60048036038101906101c69190612010565b6105a4565b6040516101d8919061206b565b60405180910390f35b6101e96105c7565b6040516101f69190612095565b60405180910390f35b610219600480360381019061021491906120b0565b6105d1565b005b610235600480360381019061023091906120dd565b6105db565b604051610242919061206b565b60405180910390f35b6102656004803603810190610260919061216a565b61060a565b005b610281600480360381019061027c91906120b0565b610632565b005b61028b610a7c565b60405161029891906121b3565b60405180910390f35b6102bb60048036038101906102b69190612010565b610a85565b6040516102c8919061206b565b60405180910390f35b6102d9610abc565b6040516102e69190612201565b60405180910390f35b6102f7610ae6565b604051610304919061222b565b60405180910390f35b61032760048036038101906103229190612246565b610b0c565b6040516103349190612095565b60405180910390f35b610345610b54565b005b61034f610b68565b60405161035c91906122d2565b60405180910390f35b61037f600480360381019061037a9190612335565b610b8e565b005b610389610f1e565b604051610396919061222b565b60405180910390f35b6103a7610f48565b6040516103b49190611f55565b60405180910390f35b6103d760048036038101906103d29190612010565b610fda565b6040516103e4919061206b565b60405180910390f35b6103f5611051565b6040516104029190612371565b60405180910390f35b61042560048036038101906104209190612010565b611065565b604051610432919061206b565b60405180910390f35b6104556004803603810190610450919061216a565b611088565b005b610471600480360381019061046c9190612010565b611130565b604051610483969594939291906123bc565b60405180910390f35b6104a660048036038101906104a1919061241d565b611204565b6040516104b39190612095565b60405180910390f35b6104c461128b565b6040516104d19190612371565b60405180910390f35b6104f460048036038101906104ef9190612246565b61129f565b005b610510600480360381019061050b9190612246565b611391565b005b6060600380546105219061248c565b80601f016020809104026020016040519081016040528092919081815260200182805461054d9061248c565b801561059a5780601f1061056f5761010080835404028352916020019161059a565b820191906000526020600020905b81548152906001019060200180831161057d57829003601f168201915b5050505050905090565b6000806105af611414565b90506105bc81858561141c565b600191505092915050565b6000600254905090565b80600b8190555050565b6000806105e6611414565b90506105f38582856115e5565b6105fe858585611671565b60019150509392505050565b6106126116ac565b80600960006101000a81548161ffff021916908361ffff16021790555050565b600260065403610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066e90612509565b60405180910390fd5b6002600681905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90612575565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061075657610755612595565b5b906000526020600020906002020190508060000160009054906101000a900460ff16156107b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107af90612636565b60405180910390fd5b6107f4338260000160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1661172a565b8060010160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16600a60008282829054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff166108519190612685565b92506101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060018160000160006101000a81548160ff02191690831515021790555060006108be611900565b620151808360000160179054906101000a900461ffff1661ffff166108e391906126d1565b8360000160119054906101000a900465ffffffffffff16610904919061270e565b65ffffffffffff1611156109e5576127108260000160199054906101000a900461ffff1661ffff168360000160019054906101000a90046fffffffffffffffffffffffffffffffff166109579190612748565b61096191906127b4565b6fffffffffffffffffffffffffffffffff1690506109e4600960049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661190a9092919063ffffffff16565b5b610a6f33828460000160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16610a2791906127e5565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661190a9092919063ffffffff16565b5050600160068190555050565b60006012905090565b600080610a90611414565b9050610ab1818585610aa28589611204565b610aac9190612819565b61141c565b600191505092915050565b600a60009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1681565b600960049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b5c6116ac565b610b666000611990565b565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260065403610bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bca90612509565b60405180910390fd5b6002600681905550610c3c3330836fffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a56909392919063ffffffff16565b610c5833826fffffffffffffffffffffffffffffffff16611adf565b806fffffffffffffffffffffffffffffffff16600a60008282829054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16610c9f919061284d565b92506101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff160217905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405280600015158152602001836fffffffffffffffffffffffffffffffff168152602001610d58611900565b65ffffffffffff168152602001600960009054906101000a900461ffff1661ffff168152602001600960029054906101000a900461ffff1661ffff168152602001836fffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060408201518160000160116101000a81548165ffffffffffff021916908365ffffffffffff16021790555060608201518160000160176101000a81548161ffff021916908361ffff16021790555060808201518160000160196101000a81548161ffff021916908361ffff16021790555060a08201518160010160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff1602179055505050600160068190555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610f579061248c565b80601f0160208091040260200160405190810160405280929190818152602001828054610f839061248c565b8015610fd05780601f10610fa557610100808354040283529160200191610fd0565b820191906000526020600020905b815481529060010190602001808311610fb357829003601f168201915b5050505050905090565b600080610fe5611414565b90506000610ff38286611204565b905083811015611038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102f9061290b565b60405180910390fd5b611045828686840361141c565b60019250505092915050565b600960029054906101000a900461ffff1681565b600080611070611414565b905061107d818585611671565b600191505092915050565b6110906116ac565b6127108161ffff1611156110d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d09061299d565b60405180910390fd5b80600960026101000a81548161ffff021916908361ffff1602179055507f49df4ae990079b53e42ad090f1fc5b7311dd70675bccd49294082a2ed78d6194816040516111259190612371565b60405180910390a150565b6008602052816000526040600020818154811061114c57600080fd5b9060005260206000209060020201600091509150508060000160009054906101000a900460ff16908060000160019054906101000a90046fffffffffffffffffffffffffffffffff16908060000160119054906101000a900465ffffffffffff16908060000160179054906101000a900461ffff16908060000160199054906101000a900461ffff16908060010160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16905086565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600960009054906101000a900461ffff1681565b6112a76116ac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130d90612a2f565b60405180910390fd5b80600960046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcb7ef3e545f5cdb893f5c568ba710fe08f336375a2d9fd66e161033f8fc09ef381604051611386919061222b565b60405180910390a150565b6113996116ac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ff90612ac1565b60405180910390fd5b61141181611990565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361148b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148290612b53565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f190612be5565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115d89190612095565b60405180910390a3505050565b60006115f18484611204565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461166b578181101561165d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165490612c51565b60405180910390fd5b61166a848484840361141c565b5b50505050565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a390612ce3565b60405180910390fd5b6116b4611414565b73ffffffffffffffffffffffffffffffffffffffff166116d2610f1e565b73ffffffffffffffffffffffffffffffffffffffff1614611728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171f90612d4f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179090612de1565b60405180910390fd5b6117a582600083611c3e565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561182b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182290612e73565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461188291906127e5565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516118e79190612095565b60405180910390a36118fb83600084611c43565b505050565b6000600b54905090565b61198b8363a9059cbb60e01b8484604051602401611929929190612e93565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c48565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611ad9846323b872dd60e01b858585604051602401611a7793929190612ebc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c48565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4590612f3f565b60405180910390fd5b611b5a60008383611c3e565b8060026000828254611b6c9190612819565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611bc19190612819565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611c269190612095565b60405180910390a3611c3a60008383611c43565b5050565b505050565b505050565b6000611caa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611d0f9092919063ffffffff16565b9050600081511115611d0a5780806020019051810190611cca9190612f8b565b611d09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d009061302a565b60405180910390fd5b5b505050565b6060611d1e8484600085611d27565b90509392505050565b606082471015611d6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d63906130bc565b60405180910390fd5b611d7585611e3b565b611db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dab90613128565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611ddd919061318f565b60006040518083038185875af1925050503d8060008114611e1a576040519150601f19603f3d011682016040523d82523d6000602084013e611e1f565b606091505b5091509150611e2f828286611e5e565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611e6e57829050611ebe565b600083511115611e815782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eb59190611f55565b60405180910390fd5b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611eff578082015181840152602081019050611ee4565b60008484015250505050565b6000601f19601f8301169050919050565b6000611f2782611ec5565b611f318185611ed0565b9350611f41818560208601611ee1565b611f4a81611f0b565b840191505092915050565b60006020820190508181036000830152611f6f8184611f1c565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fa782611f7c565b9050919050565b611fb781611f9c565b8114611fc257600080fd5b50565b600081359050611fd481611fae565b92915050565b6000819050919050565b611fed81611fda565b8114611ff857600080fd5b50565b60008135905061200a81611fe4565b92915050565b6000806040838503121561202757612026611f77565b5b600061203585828601611fc5565b925050602061204685828601611ffb565b9150509250929050565b60008115159050919050565b61206581612050565b82525050565b6000602082019050612080600083018461205c565b92915050565b61208f81611fda565b82525050565b60006020820190506120aa6000830184612086565b92915050565b6000602082840312156120c6576120c5611f77565b5b60006120d484828501611ffb565b91505092915050565b6000806000606084860312156120f6576120f5611f77565b5b600061210486828701611fc5565b935050602061211586828701611fc5565b925050604061212686828701611ffb565b9150509250925092565b600061ffff82169050919050565b61214781612130565b811461215257600080fd5b50565b6000813590506121648161213e565b92915050565b6000602082840312156121805761217f611f77565b5b600061218e84828501612155565b91505092915050565b600060ff82169050919050565b6121ad81612197565b82525050565b60006020820190506121c860008301846121a4565b92915050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6121fb816121ce565b82525050565b600060208201905061221660008301846121f2565b92915050565b61222581611f9c565b82525050565b6000602082019050612240600083018461221c565b92915050565b60006020828403121561225c5761225b611f77565b5b600061226a84828501611fc5565b91505092915050565b6000819050919050565b600061229861229361228e84611f7c565b612273565b611f7c565b9050919050565b60006122aa8261227d565b9050919050565b60006122bc8261229f565b9050919050565b6122cc816122b1565b82525050565b60006020820190506122e760008301846122c3565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b612312816122ed565b811461231d57600080fd5b50565b60008135905061232f81612309565b92915050565b60006020828403121561234b5761234a611f77565b5b600061235984828501612320565b91505092915050565b61236b81612130565b82525050565b60006020820190506123866000830184612362565b92915050565b612395816122ed565b82525050565b600065ffffffffffff82169050919050565b6123b68161239b565b82525050565b600060c0820190506123d1600083018961205c565b6123de602083018861238c565b6123eb60408301876123ad565b6123f86060830186612362565b6124056080830185612362565b61241260a08301846121f2565b979650505050505050565b6000806040838503121561243457612433611f77565b5b600061244285828601611fc5565b925050602061245385828601611fc5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806124a457607f821691505b6020821081036124b7576124b661245d565b5b50919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006124f3601f83611ed0565b91506124fe826124bd565b602082019050919050565b60006020820190508181036000830152612522816124e6565b9050919050565b7f43796265724172656e615374616b696e673a20696e76616c696420696e646578600082015250565b600061255f602083611ed0565b915061256a82612529565b602082019050919050565b6000602082019050818103600083015261258e81612552565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f43796265724172656e615374616b696e673a20756e7374616b656420616c726560008201527f6164790000000000000000000000000000000000000000000000000000000000602082015250565b6000612620602383611ed0565b915061262b826125c4565b604082019050919050565b6000602082019050818103600083015261264f81612613565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612690826121ce565b915061269b836121ce565b9250828203905077ffffffffffffffffffffffffffffffffffffffffffffffff8111156126cb576126ca612656565b5b92915050565b60006126dc8261239b565b91506126e78361239b565b92508282026126f58161239b565b915080821461270757612706612656565b5b5092915050565b60006127198261239b565b91506127248361239b565b9250828201905065ffffffffffff81111561274257612741612656565b5b92915050565b6000612753826122ed565b915061275e836122ed565b925082820261276c816122ed565b915080821461277e5761277d612656565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006127bf826122ed565b91506127ca836122ed565b9250826127da576127d9612785565b5b828204905092915050565b60006127f082611fda565b91506127fb83611fda565b925082820390508181111561281357612812612656565b5b92915050565b600061282482611fda565b915061282f83611fda565b925082820190508082111561284757612846612656565b5b92915050565b6000612858826121ce565b9150612863836121ce565b9250828201905077ffffffffffffffffffffffffffffffffffffffffffffffff81111561289357612892612656565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006128f5602583611ed0565b915061290082612899565b604082019050919050565b60006020820190508181036000830152612924816128e8565b9050919050565b7f5374616b696e673a2070656e616c74792042502065786365656473206c696d6960008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612987602183611ed0565b91506129928261292b565b604082019050919050565b600060208201905081810360008301526129b68161297a565b9050919050565b7f43796265724172656e615374616b696e673a207472656173757279206973207460008201527f6865207a65726f20616464726573730000000000000000000000000000000000602082015250565b6000612a19602f83611ed0565b9150612a24826129bd565b604082019050919050565b60006020820190508181036000830152612a4881612a0c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612aab602683611ed0565b9150612ab682612a4f565b604082019050919050565b60006020820190508181036000830152612ada81612a9e565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612b3d602483611ed0565b9150612b4882612ae1565b604082019050919050565b60006020820190508181036000830152612b6c81612b30565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612bcf602283611ed0565b9150612bda82612b73565b604082019050919050565b60006020820190508181036000830152612bfe81612bc2565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612c3b601d83611ed0565b9150612c4682612c05565b602082019050919050565b60006020820190508181036000830152612c6a81612c2e565b9050919050565b7f43796265724172656e615374616b696e673a204e4f4e5f5452414e534645524160008201527f424c450000000000000000000000000000000000000000000000000000000000602082015250565b6000612ccd602383611ed0565b9150612cd882612c71565b604082019050919050565b60006020820190508181036000830152612cfc81612cc0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612d39602083611ed0565b9150612d4482612d03565b602082019050919050565b60006020820190508181036000830152612d6881612d2c565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612dcb602183611ed0565b9150612dd682612d6f565b604082019050919050565b60006020820190508181036000830152612dfa81612dbe565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612e5d602283611ed0565b9150612e6882612e01565b604082019050919050565b60006020820190508181036000830152612e8c81612e50565b9050919050565b6000604082019050612ea8600083018561221c565b612eb56020830184612086565b9392505050565b6000606082019050612ed1600083018661221c565b612ede602083018561221c565b612eeb6040830184612086565b949350505050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000612f29601f83611ed0565b9150612f3482612ef3565b602082019050919050565b60006020820190508181036000830152612f5881612f1c565b9050919050565b612f6881612050565b8114612f7357600080fd5b50565b600081519050612f8581612f5f565b92915050565b600060208284031215612fa157612fa0611f77565b5b6000612faf84828501612f76565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000613014602a83611ed0565b915061301f82612fb8565b604082019050919050565b6000602082019050818103600083015261304381613007565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006130a6602683611ed0565b91506130b18261304a565b604082019050919050565b600060208201905081810360008301526130d581613099565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613112601d83611ed0565b915061311d826130dc565b602082019050919050565b6000602082019050818103600083015261314181613105565b9050919050565b600081519050919050565b600081905092915050565b600061316982613148565b6131738185613153565b9350613183818560208601611ee1565b80840191505092915050565b600061319b828461315e565b91508190509291505056fea2646970667358221220ce94e68a5be287d9d180618f41ce547ed51f5393a7ffbe19db5ad3c0e72567aa64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xEE2B44E4 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4F6 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xBACB4C57 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0xC8B6CBF7 EQ PUSH2 0x457 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x88FE2BE8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xA5582C3E EQ PUSH2 0x3ED JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x2E17DE78 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3A98EF39 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33D JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A1 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x22F8E566 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x2932E77A EQ PUSH2 0x24B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x2201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH2 0xB54 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34F PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2335 JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x389 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C4 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH2 0x129F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x510 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x521 SWAP1 PUSH2 0x248C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54D SWAP1 PUSH2 0x248C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5AF PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BC DUP2 DUP6 DUP6 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E6 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F3 DUP6 DUP3 DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x5FE DUP6 DUP6 DUP6 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x612 PUSH2 0x16AC JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66E SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x2575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x756 JUMPI PUSH2 0x755 PUSH2 0x2595 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F4 CALLER DUP3 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172A JUMP JUMPDEST DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x2685 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x8BE PUSH2 0x1900 JUMP JUMPDEST PUSH3 0x15180 DUP4 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x26D1 JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x11 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x904 SWAP2 SWAP1 PUSH2 0x270E JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x9E5 JUMPI PUSH2 0x2710 DUP3 PUSH1 0x0 ADD PUSH1 0x19 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x2748 JUMP JUMPDEST PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x9E4 PUSH1 0x9 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x190A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xA6F CALLER DUP3 DUP5 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA27 SWAP2 SWAP1 PUSH2 0x27E5 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x190A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA90 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0xAB1 DUP2 DUP6 DUP6 PUSH2 0xAA2 DUP6 DUP10 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0xAAC SWAP2 SWAP1 PUSH2 0x2819 JUMP JUMPDEST PUSH2 0x141C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5C PUSH2 0x16AC JUMP JUMPDEST PUSH2 0xB66 PUSH1 0x0 PUSH2 0x1990 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xBD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCA SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0xC3C CALLER ADDRESS DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A56 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC58 CALLER DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1ADF JUMP JUMPDEST DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC9F SWAP2 SWAP1 PUSH2 0x284D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD58 PUSH2 0x1900 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x11 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x19 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF57 SWAP1 PUSH2 0x248C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF83 SWAP1 PUSH2 0x248C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFD0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFA5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFD0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFB3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFE5 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFF3 DUP3 DUP7 PUSH2 0x1204 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1045 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x141C JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1070 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP PUSH2 0x107D DUP2 DUP6 DUP6 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1090 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D0 SWAP1 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x49DF4AE990079B53E42AD090F1FC5B7311DD70675BCCD49294082A2ED78D6194 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1125 SWAP2 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x114C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x11 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x19 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x12A7 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130D SWAP1 PUSH2 0x2A2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCB7EF3E545F5CDB893F5C568BA710FE08F336375A2D9FD66E161033F8FC09EF3 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1386 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1399 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FF SWAP1 PUSH2 0x2AC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1411 DUP2 PUSH2 0x1990 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x148B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1482 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F1 SWAP1 PUSH2 0x2BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15D8 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F1 DUP5 DUP5 PUSH2 0x1204 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x166B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1654 SWAP1 PUSH2 0x2C51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x166A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x141C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A3 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B4 PUSH2 0x1414 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16D2 PUSH2 0xF1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1728 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171F SWAP1 PUSH2 0x2D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1790 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A5 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x182B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1822 SWAP1 PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1882 SWAP2 SWAP1 PUSH2 0x27E5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x18E7 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x18FB DUP4 PUSH1 0x0 DUP5 PUSH2 0x1C43 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x198B DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1929 SWAP3 SWAP2 SWAP1 PUSH2 0x2E93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C48 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1AD9 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A77 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C48 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B45 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B5A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C3E JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B6C SWAP2 SWAP1 PUSH2 0x2819 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BC1 SWAP2 SWAP1 PUSH2 0x2819 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C26 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1C3A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C43 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D0F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1D0A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CCA SWAP2 SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH2 0x1D09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D00 SWAP1 PUSH2 0x302A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D1E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D63 SWAP1 PUSH2 0x30BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D75 DUP6 PUSH2 0x1E3B JUMP JUMPDEST PUSH2 0x1DB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DAB SWAP1 PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1DDD SWAP2 SWAP1 PUSH2 0x318F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E1A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E2F DUP3 DUP3 DUP7 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E6E JUMPI DUP3 SWAP1 POP PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1E81 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB5 SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EFF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F27 DUP3 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x1F31 DUP2 DUP6 PUSH2 0x1ED0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F41 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST PUSH2 0x1F4A DUP2 PUSH2 0x1F0B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6F DUP2 DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA7 DUP3 PUSH2 0x1F7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB7 DUP2 PUSH2 0x1F9C JUMP JUMPDEST DUP2 EQ PUSH2 0x1FC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FD4 DUP2 PUSH2 0x1FAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FED DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x200A DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2027 JUMPI PUSH2 0x2026 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2035 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2046 DUP6 DUP3 DUP7 ADD PUSH2 0x1FFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2065 DUP2 PUSH2 0x2050 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2080 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x205C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x208F DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20AA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C6 JUMPI PUSH2 0x20C5 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D4 DUP5 DUP3 DUP6 ADD PUSH2 0x1FFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20F6 JUMPI PUSH2 0x20F5 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2104 DUP7 DUP3 DUP8 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2115 DUP7 DUP3 DUP8 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2126 DUP7 DUP3 DUP8 ADD PUSH2 0x1FFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2147 DUP2 PUSH2 0x2130 JUMP JUMPDEST DUP2 EQ PUSH2 0x2152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2164 DUP2 PUSH2 0x213E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2180 JUMPI PUSH2 0x217F PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x218E DUP5 DUP3 DUP6 ADD PUSH2 0x2155 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21AD DUP2 PUSH2 0x2197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21FB DUP2 PUSH2 0x21CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2216 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2225 DUP2 PUSH2 0x1F9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2240 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x221C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225C JUMPI PUSH2 0x225B PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x226A DUP5 DUP3 DUP6 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2298 PUSH2 0x2293 PUSH2 0x228E DUP5 PUSH2 0x1F7C JUMP JUMPDEST PUSH2 0x2273 JUMP JUMPDEST PUSH2 0x1F7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22AA DUP3 PUSH2 0x227D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BC DUP3 PUSH2 0x229F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CC DUP2 PUSH2 0x22B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2312 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP2 EQ PUSH2 0x231D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x232F DUP2 PUSH2 0x2309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x234B JUMPI PUSH2 0x234A PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2359 DUP5 DUP3 DUP6 ADD PUSH2 0x2320 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x236B DUP2 PUSH2 0x2130 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2386 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2362 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2395 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23B6 DUP2 PUSH2 0x239B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x23D1 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x23DE PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x238C JUMP JUMPDEST PUSH2 0x23EB PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x23F8 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2362 JUMP JUMPDEST PUSH2 0x2405 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2362 JUMP JUMPDEST PUSH2 0x2412 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x21F2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2434 JUMPI PUSH2 0x2433 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2442 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2453 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24B7 JUMPI PUSH2 0x24B6 PUSH2 0x245D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 PUSH1 0x1F DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FE DUP3 PUSH2 0x24BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2522 DUP2 PUSH2 0x24E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A20696E76616C696420696E646578 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255F PUSH1 0x20 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x256A DUP3 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x258E DUP2 PUSH2 0x2552 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A20756E7374616B656420616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164790000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2620 PUSH1 0x23 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x262B DUP3 PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x264F DUP2 PUSH2 0x2613 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2690 DUP3 PUSH2 0x21CE JUMP JUMPDEST SWAP2 POP PUSH2 0x269B DUP4 PUSH2 0x21CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26CB JUMPI PUSH2 0x26CA PUSH2 0x2656 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DC DUP3 PUSH2 0x239B JUMP JUMPDEST SWAP2 POP PUSH2 0x26E7 DUP4 PUSH2 0x239B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x26F5 DUP2 PUSH2 0x239B JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2707 JUMPI PUSH2 0x2706 PUSH2 0x2656 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2719 DUP3 PUSH2 0x239B JUMP JUMPDEST SWAP2 POP PUSH2 0x2724 DUP4 PUSH2 0x239B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH6 0xFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2742 JUMPI PUSH2 0x2741 PUSH2 0x2656 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2753 DUP3 PUSH2 0x22ED JUMP JUMPDEST SWAP2 POP PUSH2 0x275E DUP4 PUSH2 0x22ED JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x276C DUP2 PUSH2 0x22ED JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x277E JUMPI PUSH2 0x277D PUSH2 0x2656 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27BF DUP3 PUSH2 0x22ED JUMP JUMPDEST SWAP2 POP PUSH2 0x27CA DUP4 PUSH2 0x22ED JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x27DA JUMPI PUSH2 0x27D9 PUSH2 0x2785 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F0 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x27FB DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2813 JUMPI PUSH2 0x2812 PUSH2 0x2656 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2824 DUP3 PUSH2 0x1FDA JUMP JUMPDEST SWAP2 POP PUSH2 0x282F DUP4 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2847 JUMPI PUSH2 0x2846 PUSH2 0x2656 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2858 DUP3 PUSH2 0x21CE JUMP JUMPDEST SWAP2 POP PUSH2 0x2863 DUP4 PUSH2 0x21CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2893 JUMPI PUSH2 0x2892 PUSH2 0x2656 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F5 PUSH1 0x25 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2900 DUP3 PUSH2 0x2899 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2924 DUP2 PUSH2 0x28E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A2070656E616C74792042502065786365656473206C696D69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2987 PUSH1 0x21 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2992 DUP3 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29B6 DUP2 PUSH2 0x297A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A2074726561737572792069732074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6865207A65726F20616464726573730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A19 PUSH1 0x2F DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A24 DUP3 PUSH2 0x29BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A48 DUP2 PUSH2 0x2A0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AAB PUSH1 0x26 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB6 DUP3 PUSH2 0x2A4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ADA DUP2 PUSH2 0x2A9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B3D PUSH1 0x24 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B48 DUP3 PUSH2 0x2AE1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B6C DUP2 PUSH2 0x2B30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCF PUSH1 0x22 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDA DUP3 PUSH2 0x2B73 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BFE DUP2 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3B PUSH1 0x1D DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C46 DUP3 PUSH2 0x2C05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C6A DUP2 PUSH2 0x2C2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A204E4F4E5F5452414E5346455241 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x424C450000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CCD PUSH1 0x23 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD8 DUP3 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CFC DUP2 PUSH2 0x2CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D39 PUSH1 0x20 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D44 DUP3 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D68 DUP2 PUSH2 0x2D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DCB PUSH1 0x21 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD6 DUP3 PUSH2 0x2D6F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DFA DUP2 PUSH2 0x2DBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E5D PUSH1 0x22 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E68 DUP3 PUSH2 0x2E01 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E8C DUP2 PUSH2 0x2E50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EA8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x221C JUMP JUMPDEST PUSH2 0x2EB5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2086 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2ED1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x221C JUMP JUMPDEST PUSH2 0x2EDE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x221C JUMP JUMPDEST PUSH2 0x2EEB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2086 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F29 PUSH1 0x1F DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F34 DUP3 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F58 DUP2 PUSH2 0x2F1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F68 DUP2 PUSH2 0x2050 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F85 DUP2 PUSH2 0x2F5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA1 JUMPI PUSH2 0x2FA0 PUSH2 0x1F77 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FAF DUP5 DUP3 DUP6 ADD PUSH2 0x2F76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3014 PUSH1 0x2A DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x301F DUP3 PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3043 DUP2 PUSH2 0x3007 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A6 PUSH1 0x26 DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x30B1 DUP3 PUSH2 0x304A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30D5 DUP2 PUSH2 0x3099 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3112 PUSH1 0x1D DUP4 PUSH2 0x1ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x311D DUP3 PUSH2 0x30DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3141 DUP2 PUSH2 0x3105 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3169 DUP3 PUSH2 0x3148 JUMP JUMPDEST PUSH2 0x3173 DUP2 DUP6 PUSH2 0x3153 JUMP JUMPDEST SWAP4 POP PUSH2 0x3183 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319B DUP3 DUP5 PUSH2 0x315E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SWAP5 0xE6 DUP11 JUMPDEST 0xE2 DUP8 0xD9 0xD1 DUP1 PUSH2 0x8F41 0xCE SLOAD PUSH31 0xD51F5393A7FFBE19DB5AD3C0E72567AA64736F6C6343000811003300000000 ","sourceMap":"200:524:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;483:88:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5192:286:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3651:107:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2661:849;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3093:91:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;839:26:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;783:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;444:26:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2075:404;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;680:23:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3886:211:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;528:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;3976:149:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;609:25:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4206:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2156:98:3;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;483:88:19:-;559:5;548:8;:16;;;;483:88;:::o;5192:286:3:-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;3651:107:20:-;1094:13:0;:11;:13::i;:::-;3739:12:20::1;3725:11;;:26;;;;;;;;;;;;;;;;;;3651:107:::0;:::o;2661:849::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2753:7:20::1;:19;2761:10;2753:19;;;;;;;;;;;;;;;:26;;;;2739:11;:40;2731:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2826:22;2851:7;:19;2859:10;2851:19;;;;;;;;;;;;;;;2871:11;2851:32;;;;;;;;:::i;:::-;;;;;;;;;;;;2826:57;;2902:8;:17;;;;;;;;;;;;2901:18;2893:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2970:34;2976:10;2988:8;:15;;;;;;;;;;;;2970:34;;:5;:34::i;:::-;3029:8;:15;;;;;;;;;;;;3014:11;;:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3074:4;3054:8;:17;;;:24;;;;;;;;;;;;;;;;;;3153:21;3258:16;:14;:16::i;:::-;3250:5;3226:8;:20;;;;;;;;;;;;3219:28;;:36;;;;:::i;:::-;3192:8;:24;;;;;;;;;;;;:63;;;;:::i;:::-;:82;;;3188:235;;;3345:3;3324:8;:18;;;;;;;;;;;;3306:36;;:8;:15;;;;;;;;;;;;:36;;;;:::i;:::-;:42;;;;:::i;:::-;3290:58;;;;3362:50;3388:8;;;;;;;;;;;3398:13;3362:12;;;;;;;;;;;:25;;;;:50;;;;;:::i;:::-;3188:235;3433:70;3459:10;3489:13;3471:8;:15;;;;;;;;;;;;:31;;;;;;:::i;:::-;3433:12;;;;;;;;;;;:25;;;;:70;;;;;:::i;:::-;2721:789;;1701:1:2::0;2628:7;:22;;;;2661:849:20;:::o;3093:91:3:-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;839:26:20:-;;;;;;;;;;;;;:::o;783:23::-;;;;;;;;;;;;;:::o;3408:125:3:-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;444:26:20:-;;;;;;;;;;;;;:::o;2075:404::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2139:65:20::1;2169:10;2189:4;2196:7;2139:65;;:12;;;;;;;;;;;:29;;;;:65;;;;;;:::i;:::-;2215:26;2221:10;2233:7;2215:26;;:5;:26::i;:::-;2267:7;2252:22;;:11;;:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2284:7;:19;2292:10;2284:19;;;;;;;;;;;;;;;2309:162;;;;;;;;2328:5;2309:162;;;;;;2347:7;2309:162;;;;;;2375:16;:14;:16::i;:::-;2309:162;;;;;;2406:11;;;;;;;;;;;2309:162;;;;;;2431:9;;;;;;;;;;;2309:162;;;;;;2454:7;2309:162;;;;;;::::0;2284:188:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1701:1:2::0;2628:7;:22;;;;2075:404:20;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2367:102:3:-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;680:23:20:-;;;;;;;;;;;;;:::o;3729:189:3:-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;3886:211:20:-;1094:13:0;:11;:13::i;:::-;3978:3:20::1;3964:10;:17;;;;3956:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4041:10;4029:9;;:22;;;;;;;;;;;;;;;;;;4066:24;4079:10;4066:24;;;;;;:::i;:::-;;;;;;;;3886:211:::0;:::o;528:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3976:149:3:-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;609:25:20:-;;;;;;;;;;;;;:::o;4206:227::-;1094:13:0;:11;:13::i;:::-;4304:1:20::1;4283:23;;:9;:23;;::::0;4275:83:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4379:9;4368:8;;:20;;;;;;;;;;;;;;;;;;4404:22;4416:9;4404:22;;;;;;:::i;:::-;;;;;;;;4206:227:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;640:96:12:-;693:7;719:10;712:17;;640:96;:::o;10110:370:3:-;10258:1;10241:19;;:5;:19;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10881:321;10761:441;;;:::o;4493:144:20:-;4585:45;;;;;;;;;;:::i;:::-;;;;;;;;1359:130:0;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;9111:576:3:-;9213:1;9194:21;;:7;:21;;;9186:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9264:49;9285:7;9302:1;9306:6;9264:20;:49::i;:::-;9324:22;9349:9;:18;9359:7;9349:18;;;;;;;;;;;;;;;;9324:43;;9403:6;9385:14;:24;;9377:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9520:6;9503:14;:23;9482:9;:18;9492:7;9482:18;;;;;;;;;;;;;;;:44;;;;9562:6;9546:12;;:22;;;;;;;:::i;:::-;;;;;;;;9610:1;9584:37;;9593:7;9584:37;;;9614:6;9584:37;;;;;;:::i;:::-;;;;;;;;9632:48;9652:7;9669:1;9673:6;9632:19;:48::i;:::-;9176:511;9111:576;;:::o;577:145:19:-;682:7;707:8;;700:15;;577:145;:::o;763:205:10:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;974:241:10:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;8402:389:3:-;8504:1;8485:21;;:7;:21;;;8477:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;;;;;8667:6;8645:9;:18;8655:7;8645:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8709:7;8688:37;;8705:1;8688:37;;;8718:6;8688:37;;;;;;:::i;:::-;;;;;;;;8736:48;8764:1;8768:7;8777:6;8736:19;:48::i;:::-;8402:389;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;3747:706:10:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3861:223:11:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:742::-;7707:12;7735:7;7731:566;;;7765:10;7758:17;;;;7731:566;7896:1;7876:10;:17;:21;7872:415;;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:742;;;;;;:::o;7:99:21:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:329::-;3857:6;3906:2;3894:9;3885:7;3881:23;3877:32;3874:119;;;3912:79;;:::i;:::-;3874:119;4032:1;4057:53;4102:7;4093:6;4082:9;4078:22;4057:53;:::i;:::-;4047:63;;4003:117;3798:329;;;;:::o;4133:619::-;4210:6;4218;4226;4275:2;4263:9;4254:7;4250:23;4246:32;4243:119;;;4281:79;;:::i;:::-;4243:119;4401:1;4426:53;4471:7;4462:6;4451:9;4447:22;4426:53;:::i;:::-;4416:63;;4372:117;4528:2;4554:53;4599:7;4590:6;4579:9;4575:22;4554:53;:::i;:::-;4544:63;;4499:118;4656:2;4682:53;4727:7;4718:6;4707:9;4703:22;4682:53;:::i;:::-;4672:63;;4627:118;4133:619;;;;;:::o;4758:89::-;4794:7;4834:6;4827:5;4823:18;4812:29;;4758:89;;;:::o;4853:120::-;4925:23;4942:5;4925:23;:::i;:::-;4918:5;4915:34;4905:62;;4963:1;4960;4953:12;4905:62;4853:120;:::o;4979:137::-;5024:5;5062:6;5049:20;5040:29;;5078:32;5104:5;5078:32;:::i;:::-;4979:137;;;;:::o;5122:327::-;5180:6;5229:2;5217:9;5208:7;5204:23;5200:32;5197:119;;;5235:79;;:::i;:::-;5197:119;5355:1;5380:52;5424:7;5415:6;5404:9;5400:22;5380:52;:::i;:::-;5370:62;;5326:116;5122:327;;;;:::o;5455:86::-;5490:7;5530:4;5523:5;5519:16;5508:27;;5455:86;;;:::o;5547:112::-;5630:22;5646:5;5630:22;:::i;:::-;5625:3;5618:35;5547:112;;:::o;5665:214::-;5754:4;5792:2;5781:9;5777:18;5769:26;;5805:67;5869:1;5858:9;5854:17;5845:6;5805:67;:::i;:::-;5665:214;;;;:::o;5885:134::-;5922:7;5962:50;5955:5;5951:62;5940:73;;5885:134;;;:::o;6025:118::-;6112:24;6130:5;6112:24;:::i;:::-;6107:3;6100:37;6025:118;;:::o;6149:222::-;6242:4;6280:2;6269:9;6265:18;6257:26;;6293:71;6361:1;6350:9;6346:17;6337:6;6293:71;:::i;:::-;6149:222;;;;:::o;6377:118::-;6464:24;6482:5;6464:24;:::i;:::-;6459:3;6452:37;6377:118;;:::o;6501:222::-;6594:4;6632:2;6621:9;6617:18;6609:26;;6645:71;6713:1;6702:9;6698:17;6689:6;6645:71;:::i;:::-;6501:222;;;;:::o;6729:329::-;6788:6;6837:2;6825:9;6816:7;6812:23;6808:32;6805:119;;;6843:79;;:::i;:::-;6805:119;6963:1;6988:53;7033:7;7024:6;7013:9;7009:22;6988:53;:::i;:::-;6978:63;;6934:117;6729:329;;;;:::o;7064:60::-;7092:3;7113:5;7106:12;;7064:60;;;:::o;7130:142::-;7180:9;7213:53;7231:34;7240:24;7258:5;7240:24;:::i;:::-;7231:34;:::i;:::-;7213:53;:::i;:::-;7200:66;;7130:142;;;:::o;7278:126::-;7328:9;7361:37;7392:5;7361:37;:::i;:::-;7348:50;;7278:126;;;:::o;7410:140::-;7474:9;7507:37;7538:5;7507:37;:::i;:::-;7494:50;;7410:140;;;:::o;7556:159::-;7657:51;7702:5;7657:51;:::i;:::-;7652:3;7645:64;7556:159;;:::o;7721:250::-;7828:4;7866:2;7855:9;7851:18;7843:26;;7879:85;7961:1;7950:9;7946:17;7937:6;7879:85;:::i;:::-;7721:250;;;;:::o;7977:118::-;8014:7;8054:34;8047:5;8043:46;8032:57;;7977:118;;;:::o;8101:122::-;8174:24;8192:5;8174:24;:::i;:::-;8167:5;8164:35;8154:63;;8213:1;8210;8203:12;8154:63;8101:122;:::o;8229:139::-;8275:5;8313:6;8300:20;8291:29;;8329:33;8356:5;8329:33;:::i;:::-;8229:139;;;;:::o;8374:329::-;8433:6;8482:2;8470:9;8461:7;8457:23;8453:32;8450:119;;;8488:79;;:::i;:::-;8450:119;8608:1;8633:53;8678:7;8669:6;8658:9;8654:22;8633:53;:::i;:::-;8623:63;;8579:117;8374:329;;;;:::o;8709:115::-;8794:23;8811:5;8794:23;:::i;:::-;8789:3;8782:36;8709:115;;:::o;8830:218::-;8921:4;8959:2;8948:9;8944:18;8936:26;;8972:69;9038:1;9027:9;9023:17;9014:6;8972:69;:::i;:::-;8830:218;;;;:::o;9054:118::-;9141:24;9159:5;9141:24;:::i;:::-;9136:3;9129:37;9054:118;;:::o;9178:97::-;9214:7;9254:14;9247:5;9243:26;9232:37;;9178:97;;;:::o;9281:115::-;9366:23;9383:5;9366:23;:::i;:::-;9361:3;9354:36;9281:115;;:::o;9402:751::-;9623:4;9661:3;9650:9;9646:19;9638:27;;9675:65;9737:1;9726:9;9722:17;9713:6;9675:65;:::i;:::-;9750:72;9818:2;9807:9;9803:18;9794:6;9750:72;:::i;:::-;9832:70;9898:2;9887:9;9883:18;9874:6;9832:70;:::i;:::-;9912;9978:2;9967:9;9963:18;9954:6;9912:70;:::i;:::-;9992:71;10058:3;10047:9;10043:19;10034:6;9992:71;:::i;:::-;10073:73;10141:3;10130:9;10126:19;10117:6;10073:73;:::i;:::-;9402:751;;;;;;;;;:::o;10159:474::-;10227:6;10235;10284:2;10272:9;10263:7;10259:23;10255:32;10252:119;;;10290:79;;:::i;:::-;10252:119;10410:1;10435:53;10480:7;10471:6;10460:9;10456:22;10435:53;:::i;:::-;10425:63;;10381:117;10537:2;10563:53;10608:7;10599:6;10588:9;10584:22;10563:53;:::i;:::-;10553:63;;10508:118;10159:474;;;;;:::o;10639:180::-;10687:77;10684:1;10677:88;10784:4;10781:1;10774:15;10808:4;10805:1;10798:15;10825:320;10869:6;10906:1;10900:4;10896:12;10886:22;;10953:1;10947:4;10943:12;10974:18;10964:81;;11030:4;11022:6;11018:17;11008:27;;10964:81;11092:2;11084:6;11081:14;11061:18;11058:38;11055:84;;11111:18;;:::i;:::-;11055:84;10876:269;10825:320;;;:::o;11151:181::-;11291:33;11287:1;11279:6;11275:14;11268:57;11151:181;:::o;11338:366::-;11480:3;11501:67;11565:2;11560:3;11501:67;:::i;:::-;11494:74;;11577:93;11666:3;11577:93;:::i;:::-;11695:2;11690:3;11686:12;11679:19;;11338:366;;;:::o;11710:419::-;11876:4;11914:2;11903:9;11899:18;11891:26;;11963:9;11957:4;11953:20;11949:1;11938:9;11934:17;11927:47;11991:131;12117:4;11991:131;:::i;:::-;11983:139;;11710:419;;;:::o;12135:182::-;12275:34;12271:1;12263:6;12259:14;12252:58;12135:182;:::o;12323:366::-;12465:3;12486:67;12550:2;12545:3;12486:67;:::i;:::-;12479:74;;12562:93;12651:3;12562:93;:::i;:::-;12680:2;12675:3;12671:12;12664:19;;12323:366;;;:::o;12695:419::-;12861:4;12899:2;12888:9;12884:18;12876:26;;12948:9;12942:4;12938:20;12934:1;12923:9;12919:17;12912:47;12976:131;13102:4;12976:131;:::i;:::-;12968:139;;12695:419;;;:::o;13120:180::-;13168:77;13165:1;13158:88;13265:4;13262:1;13255:15;13289:4;13286:1;13279:15;13306:222;13446:34;13442:1;13434:6;13430:14;13423:58;13515:5;13510:2;13502:6;13498:15;13491:30;13306:222;:::o;13534:366::-;13676:3;13697:67;13761:2;13756:3;13697:67;:::i;:::-;13690:74;;13773:93;13862:3;13773:93;:::i;:::-;13891:2;13886:3;13882:12;13875:19;;13534:366;;;:::o;13906:419::-;14072:4;14110:2;14099:9;14095:18;14087:26;;14159:9;14153:4;14149:20;14145:1;14134:9;14130:17;14123:47;14187:131;14313:4;14187:131;:::i;:::-;14179:139;;13906:419;;;:::o;14331:180::-;14379:77;14376:1;14369:88;14476:4;14473:1;14466:15;14500:4;14497:1;14490:15;14517:243;14557:4;14577:20;14595:1;14577:20;:::i;:::-;14572:25;;14611:20;14629:1;14611:20;:::i;:::-;14606:25;;14655:1;14652;14648:9;14640:17;;14679:50;14673:4;14670:60;14667:86;;;14733:18;;:::i;:::-;14667:86;14517:243;;;;:::o;14766:275::-;14805:7;14828:19;14845:1;14828:19;:::i;:::-;14823:24;;14861:19;14878:1;14861:19;:::i;:::-;14856:24;;14915:1;14912;14908:9;14937:29;14954:11;14937:29;:::i;:::-;14926:40;;14998:11;14989:7;14986:24;14976:58;;15014:18;;:::i;:::-;14976:58;14813:228;14766:275;;;;:::o;15047:201::-;15086:3;15105:19;15122:1;15105:19;:::i;:::-;15100:24;;15138:19;15155:1;15138:19;:::i;:::-;15133:24;;15180:1;15177;15173:9;15166:16;;15203:14;15198:3;15195:23;15192:49;;;15221:18;;:::i;:::-;15192:49;15047:201;;;;:::o;15254:279::-;15294:7;15317:20;15335:1;15317:20;:::i;:::-;15312:25;;15351:20;15369:1;15351:20;:::i;:::-;15346:25;;15406:1;15403;15399:9;15428:30;15446:11;15428:30;:::i;:::-;15417:41;;15490:11;15481:7;15478:24;15468:58;;15506:18;;:::i;:::-;15468:58;15302:231;15254:279;;;;:::o;15539:180::-;15587:77;15584:1;15577:88;15684:4;15681:1;15674:15;15708:4;15705:1;15698:15;15725:185;15765:1;15782:20;15800:1;15782:20;:::i;:::-;15777:25;;15816:20;15834:1;15816:20;:::i;:::-;15811:25;;15855:1;15845:35;;15860:18;;:::i;:::-;15845:35;15902:1;15899;15895:9;15890:14;;15725:185;;;;:::o;15916:194::-;15956:4;15976:20;15994:1;15976:20;:::i;:::-;15971:25;;16010:20;16028:1;16010:20;:::i;:::-;16005:25;;16054:1;16051;16047:9;16039:17;;16078:1;16072:4;16069:11;16066:37;;;16083:18;;:::i;:::-;16066:37;15916:194;;;;:::o;16116:191::-;16156:3;16175:20;16193:1;16175:20;:::i;:::-;16170:25;;16209:20;16227:1;16209:20;:::i;:::-;16204:25;;16252:1;16249;16245:9;16238:16;;16273:3;16270:1;16267:10;16264:36;;;16280:18;;:::i;:::-;16264:36;16116:191;;;;:::o;16313:240::-;16353:3;16372:20;16390:1;16372:20;:::i;:::-;16367:25;;16406:20;16424:1;16406:20;:::i;:::-;16401:25;;16449:1;16446;16442:9;16435:16;;16472:50;16467:3;16464:59;16461:85;;;16526:18;;:::i;:::-;16461:85;16313:240;;;;:::o;16559:224::-;16699:34;16695:1;16687:6;16683:14;16676:58;16768:7;16763:2;16755:6;16751:15;16744:32;16559:224;:::o;16789:366::-;16931:3;16952:67;17016:2;17011:3;16952:67;:::i;:::-;16945:74;;17028:93;17117:3;17028:93;:::i;:::-;17146:2;17141:3;17137:12;17130:19;;16789:366;;;:::o;17161:419::-;17327:4;17365:2;17354:9;17350:18;17342:26;;17414:9;17408:4;17404:20;17400:1;17389:9;17385:17;17378:47;17442:131;17568:4;17442:131;:::i;:::-;17434:139;;17161:419;;;:::o;17586:220::-;17726:34;17722:1;17714:6;17710:14;17703:58;17795:3;17790:2;17782:6;17778:15;17771:28;17586:220;:::o;17812:366::-;17954:3;17975:67;18039:2;18034:3;17975:67;:::i;:::-;17968:74;;18051:93;18140:3;18051:93;:::i;:::-;18169:2;18164:3;18160:12;18153:19;;17812:366;;;:::o;18184:419::-;18350:4;18388:2;18377:9;18373:18;18365:26;;18437:9;18431:4;18427:20;18423:1;18412:9;18408:17;18401:47;18465:131;18591:4;18465:131;:::i;:::-;18457:139;;18184:419;;;:::o;18609:234::-;18749:34;18745:1;18737:6;18733:14;18726:58;18818:17;18813:2;18805:6;18801:15;18794:42;18609:234;:::o;18849:366::-;18991:3;19012:67;19076:2;19071:3;19012:67;:::i;:::-;19005:74;;19088:93;19177:3;19088:93;:::i;:::-;19206:2;19201:3;19197:12;19190:19;;18849:366;;;:::o;19221:419::-;19387:4;19425:2;19414:9;19410:18;19402:26;;19474:9;19468:4;19464:20;19460:1;19449:9;19445:17;19438:47;19502:131;19628:4;19502:131;:::i;:::-;19494:139;;19221:419;;;:::o;19646:225::-;19786:34;19782:1;19774:6;19770:14;19763:58;19855:8;19850:2;19842:6;19838:15;19831:33;19646:225;:::o;19877:366::-;20019:3;20040:67;20104:2;20099:3;20040:67;:::i;:::-;20033:74;;20116:93;20205:3;20116:93;:::i;:::-;20234:2;20229:3;20225:12;20218:19;;19877:366;;;:::o;20249:419::-;20415:4;20453:2;20442:9;20438:18;20430:26;;20502:9;20496:4;20492:20;20488:1;20477:9;20473:17;20466:47;20530:131;20656:4;20530:131;:::i;:::-;20522:139;;20249:419;;;:::o;20674:223::-;20814:34;20810:1;20802:6;20798:14;20791:58;20883:6;20878:2;20870:6;20866:15;20859:31;20674:223;:::o;20903:366::-;21045:3;21066:67;21130:2;21125:3;21066:67;:::i;:::-;21059:74;;21142:93;21231:3;21142:93;:::i;:::-;21260:2;21255:3;21251:12;21244:19;;20903:366;;;:::o;21275:419::-;21441:4;21479:2;21468:9;21464:18;21456:26;;21528:9;21522:4;21518:20;21514:1;21503:9;21499:17;21492:47;21556:131;21682:4;21556:131;:::i;:::-;21548:139;;21275:419;;;:::o;21700:221::-;21840:34;21836:1;21828:6;21824:14;21817:58;21909:4;21904:2;21896:6;21892:15;21885:29;21700:221;:::o;21927:366::-;22069:3;22090:67;22154:2;22149:3;22090:67;:::i;:::-;22083:74;;22166:93;22255:3;22166:93;:::i;:::-;22284:2;22279:3;22275:12;22268:19;;21927:366;;;:::o;22299:419::-;22465:4;22503:2;22492:9;22488:18;22480:26;;22552:9;22546:4;22542:20;22538:1;22527:9;22523:17;22516:47;22580:131;22706:4;22580:131;:::i;:::-;22572:139;;22299:419;;;:::o;22724:179::-;22864:31;22860:1;22852:6;22848:14;22841:55;22724:179;:::o;22909:366::-;23051:3;23072:67;23136:2;23131:3;23072:67;:::i;:::-;23065:74;;23148:93;23237:3;23148:93;:::i;:::-;23266:2;23261:3;23257:12;23250:19;;22909:366;;;:::o;23281:419::-;23447:4;23485:2;23474:9;23470:18;23462:26;;23534:9;23528:4;23524:20;23520:1;23509:9;23505:17;23498:47;23562:131;23688:4;23562:131;:::i;:::-;23554:139;;23281:419;;;:::o;23706:222::-;23846:34;23842:1;23834:6;23830:14;23823:58;23915:5;23910:2;23902:6;23898:15;23891:30;23706:222;:::o;23934:366::-;24076:3;24097:67;24161:2;24156:3;24097:67;:::i;:::-;24090:74;;24173:93;24262:3;24173:93;:::i;:::-;24291:2;24286:3;24282:12;24275:19;;23934:366;;;:::o;24306:419::-;24472:4;24510:2;24499:9;24495:18;24487:26;;24559:9;24553:4;24549:20;24545:1;24534:9;24530:17;24523:47;24587:131;24713:4;24587:131;:::i;:::-;24579:139;;24306:419;;;:::o;24731:182::-;24871:34;24867:1;24859:6;24855:14;24848:58;24731:182;:::o;24919:366::-;25061:3;25082:67;25146:2;25141:3;25082:67;:::i;:::-;25075:74;;25158:93;25247:3;25158:93;:::i;:::-;25276:2;25271:3;25267:12;25260:19;;24919:366;;;:::o;25291:419::-;25457:4;25495:2;25484:9;25480:18;25472:26;;25544:9;25538:4;25534:20;25530:1;25519:9;25515:17;25508:47;25572:131;25698:4;25572:131;:::i;:::-;25564:139;;25291:419;;;:::o;25716:220::-;25856:34;25852:1;25844:6;25840:14;25833:58;25925:3;25920:2;25912:6;25908:15;25901:28;25716:220;:::o;25942:366::-;26084:3;26105:67;26169:2;26164:3;26105:67;:::i;:::-;26098:74;;26181:93;26270:3;26181:93;:::i;:::-;26299:2;26294:3;26290:12;26283:19;;25942:366;;;:::o;26314:419::-;26480:4;26518:2;26507:9;26503:18;26495:26;;26567:9;26561:4;26557:20;26553:1;26542:9;26538:17;26531:47;26595:131;26721:4;26595:131;:::i;:::-;26587:139;;26314:419;;;:::o;26739:221::-;26879:34;26875:1;26867:6;26863:14;26856:58;26948:4;26943:2;26935:6;26931:15;26924:29;26739:221;:::o;26966:366::-;27108:3;27129:67;27193:2;27188:3;27129:67;:::i;:::-;27122:74;;27205:93;27294:3;27205:93;:::i;:::-;27323:2;27318:3;27314:12;27307:19;;26966:366;;;:::o;27338:419::-;27504:4;27542:2;27531:9;27527:18;27519:26;;27591:9;27585:4;27581:20;27577:1;27566:9;27562:17;27555:47;27619:131;27745:4;27619:131;:::i;:::-;27611:139;;27338:419;;;:::o;27763:332::-;27884:4;27922:2;27911:9;27907:18;27899:26;;27935:71;28003:1;27992:9;27988:17;27979:6;27935:71;:::i;:::-;28016:72;28084:2;28073:9;28069:18;28060:6;28016:72;:::i;:::-;27763:332;;;;;:::o;28101:442::-;28250:4;28288:2;28277:9;28273:18;28265:26;;28301:71;28369:1;28358:9;28354:17;28345:6;28301:71;:::i;:::-;28382:72;28450:2;28439:9;28435:18;28426:6;28382:72;:::i;:::-;28464;28532:2;28521:9;28517:18;28508:6;28464:72;:::i;:::-;28101:442;;;;;;:::o;28549:181::-;28689:33;28685:1;28677:6;28673:14;28666:57;28549:181;:::o;28736:366::-;28878:3;28899:67;28963:2;28958:3;28899:67;:::i;:::-;28892:74;;28975:93;29064:3;28975:93;:::i;:::-;29093:2;29088:3;29084:12;29077:19;;28736:366;;;:::o;29108:419::-;29274:4;29312:2;29301:9;29297:18;29289:26;;29361:9;29355:4;29351:20;29347:1;29336:9;29332:17;29325:47;29389:131;29515:4;29389:131;:::i;:::-;29381:139;;29108:419;;;:::o;29533:116::-;29603:21;29618:5;29603:21;:::i;:::-;29596:5;29593:32;29583:60;;29639:1;29636;29629:12;29583:60;29533:116;:::o;29655:137::-;29709:5;29740:6;29734:13;29725:22;;29756:30;29780:5;29756:30;:::i;:::-;29655:137;;;;:::o;29798:345::-;29865:6;29914:2;29902:9;29893:7;29889:23;29885:32;29882:119;;;29920:79;;:::i;:::-;29882:119;30040:1;30065:61;30118:7;30109:6;30098:9;30094:22;30065:61;:::i;:::-;30055:71;;30011:125;29798:345;;;;:::o;30149:229::-;30289:34;30285:1;30277:6;30273:14;30266:58;30358:12;30353:2;30345:6;30341:15;30334:37;30149:229;:::o;30384:366::-;30526:3;30547:67;30611:2;30606:3;30547:67;:::i;:::-;30540:74;;30623:93;30712:3;30623:93;:::i;:::-;30741:2;30736:3;30732:12;30725:19;;30384:366;;;:::o;30756:419::-;30922:4;30960:2;30949:9;30945:18;30937:26;;31009:9;31003:4;30999:20;30995:1;30984:9;30980:17;30973:47;31037:131;31163:4;31037:131;:::i;:::-;31029:139;;30756:419;;;:::o;31181:225::-;31321:34;31317:1;31309:6;31305:14;31298:58;31390:8;31385:2;31377:6;31373:15;31366:33;31181:225;:::o;31412:366::-;31554:3;31575:67;31639:2;31634:3;31575:67;:::i;:::-;31568:74;;31651:93;31740:3;31651:93;:::i;:::-;31769:2;31764:3;31760:12;31753:19;;31412:366;;;:::o;31784:419::-;31950:4;31988:2;31977:9;31973:18;31965:26;;32037:9;32031:4;32027:20;32023:1;32012:9;32008:17;32001:47;32065:131;32191:4;32065:131;:::i;:::-;32057:139;;31784:419;;;:::o;32209:179::-;32349:31;32345:1;32337:6;32333:14;32326:55;32209:179;:::o;32394:366::-;32536:3;32557:67;32621:2;32616:3;32557:67;:::i;:::-;32550:74;;32633:93;32722:3;32633:93;:::i;:::-;32751:2;32746:3;32742:12;32735:19;;32394:366;;;:::o;32766:419::-;32932:4;32970:2;32959:9;32955:18;32947:26;;33019:9;33013:4;33009:20;33005:1;32994:9;32990:17;32983:47;33047:131;33173:4;33047:131;:::i;:::-;33039:139;;32766:419;;;:::o;33191:98::-;33242:6;33276:5;33270:12;33260:22;;33191:98;;;:::o;33295:147::-;33396:11;33433:3;33418:18;;33295:147;;;;:::o;33448:386::-;33552:3;33580:38;33612:5;33580:38;:::i;:::-;33634:88;33715:6;33710:3;33634:88;:::i;:::-;33627:95;;33731:65;33789:6;33784:3;33777:4;33770:5;33766:16;33731:65;:::i;:::-;33821:6;33816:3;33812:16;33805:23;;33556:278;33448:386;;;;:::o;33840:271::-;33970:3;33992:93;34081:3;34072:6;33992:93;:::i;:::-;33985:100;;34102:3;34095:10;;33840:271;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","owner()":"8da5cb5b","penaltyBP()":"a5582c3e","penaltyDays()":"ee2b44e4","renounceOwnership()":"715018a6","setCurrentTime(uint256)":"22f8e566","setPenaltyBP(uint16)":"bacb4c57","setPenaltyDays(uint16)":"2932e77a","setTreasury(address)":"f0f44260","stake(uint128)":"88fe2be8","stakers(address,uint256)":"c8b6cbf7","stakingToken()":"72f702f3","symbol()":"95d89b41","totalShares()":"3a98ef39","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","treasury()":"61d027b3","unstake(uint256)":"2e17de78"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_penaltyDays\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_penaltyBP\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"penaltyBP\",\"type\":\"uint16\"}],\"name\":\"SetPenaltyBP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"SetTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyBP\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyDays\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_penaltyBP\",\"type\":\"uint16\"}],\"name\":\"setPenaltyBP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_penaltyDays\",\"type\":\"uint16\"}],\"name\":\"setPenaltyDays\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"unstaked\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"stakedTimestamp\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"penaltyDays\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"penaltyBP\",\"type\":\"uint16\"},{\"internalType\":\"uint192\",\"name\":\"shares\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakeIndex\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setPenaltyBP(uint16)\":{\"params\":{\"_penaltyBP\":\"New penalty base points value\"}},\"setPenaltyDays(uint16)\":{\"params\":{\"_penaltyDays\":\"New penalty days value\"}},\"setTreasury(address)\":{\"params\":{\"_treasury\":\"New treasury address\"}},\"stake(uint128)\":{\"params\":{\"_amount\":\"amount to stake\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256)\":{\"params\":{\"_stakeIndex\":\"Stake index in array of user's stakes\"}}},\"title\":\"MockStaking WARNING: use only for testing and debugging purpose\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setPenaltyBP(uint16)\":{\"notice\":\"Set a new penalty base points value\"},\"setPenaltyDays(uint16)\":{\"notice\":\"Set a new penalty days value\"},\"setTreasury(address)\":{\"notice\":\"Set a new penalty treasury\"},\"stake(uint128)\":{\"notice\":\"Stake staking tokens\"},\"unstake(uint256)\":{\"notice\":\"Unstake staking tokensIf penalty period is not over grab penalty\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockStaking.sol\":\"MockStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x7fd2492be0468be4662081ee25cde38a31e4a0ceca0fed10160462389013910f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10c660ba772feee0fcb29319b15b328b429cd020079786e8d00992159f4b7b4e\",\"dweb:/ipfs/QmTjnb1FLbjHkgSZ7qcRZnNSwmZnobBpkJ9UWSc1SkVqhU\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol\":{\"keccak256\":\"0x3e2cf78abe35170695b26fb9f820fe7bfeed607604f4d6c1261f811704c79f16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d677e79ed97d35fa1fa3df7b45df9de5947e0939bb7229bfb05bc00fef9ed45\",\"dweb:/ipfs/QmRiFfC3KJH6KX7hP5cdasrxvEVbB2Fy8UJDDbf2xNSax9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"contracts/MockStaking.sol\":{\"keccak256\":\"0xd7a7465d344d1cf5b91b463c4371a2f1c122391e6a51c1fc0916782dc9c9422a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://124f6f8701ade7ff3630ad5663125312491f72653f64eebc966b4486b642b602\",\"dweb:/ipfs/QmYYpgTexD3G3AqNRtQrFsieAFFRQdz6me7Fhh1k1MeUuA\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0xa09b8e95c66f36090e8d998c3b20456c006bfa2772c98f04d965d90e9373fe60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ced14165f444fcd5647607333bdf0c7a53c6cfce5f30c12d781863493cc6971\",\"dweb:/ipfs/QmZ8c9Cv6GFGcW7KiLL6ZBUDhfFkRyTEPU6xZRBkLDQN56\"]}},\"version\":1}"}},"contracts/Staking.sol":{"CyberArenaStaking":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_stakingToken","type":"address"},{"internalType":"uint16","name":"_penaltyDays","type":"uint16"},{"internalType":"uint16","name":"_penaltyBP","type":"uint16"},{"internalType":"address","name":"_treasury","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"penaltyBP","type":"uint16"}],"name":"SetPenaltyBP","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"treasury","type":"address"}],"name":"SetTreasury","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"penaltyBP","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"penaltyDays","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_penaltyBP","type":"uint16"}],"name":"setPenaltyBP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_penaltyDays","type":"uint16"}],"name":"setPenaltyDays","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"_amount","type":"uint128"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakers","outputs":[{"internalType":"bool","name":"unstaked","type":"bool"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint48","name":"stakedTimestamp","type":"uint48"},{"internalType":"uint16","name":"penaltyDays","type":"uint16"},{"internalType":"uint16","name":"penaltyBP","type":"uint16"},{"internalType":"uint192","name":"shares","type":"uint192"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalShares","outputs":[{"internalType":"uint192","name":"","type":"uint192"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stakeIndex","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_209":{"entryPoint":null,"id":209,"parameterSlots":0,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_275":{"entryPoint":null,"id":275,"parameterSlots":2,"returnSlots":0},"@_5784":{"entryPoint":null,"id":5784,"parameterSlots":4,"returnSlots":0},"@_msgSender_2408":{"entryPoint":667,"id":2408,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":675,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":1088,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$894_fromMemory":{"entryPoint":976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16_fromMemory":{"entryPoint":1039,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$894t_uint16t_uint16t_address_fromMemory":{"entryPoint":1111,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c_to_t_string_memory_ptr_fromStack":{"entryPoint":2186,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack":{"entryPoint":2338,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2225,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2377,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1383,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1225,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2090,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1704,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":910,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$894":{"entryPoint":930,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":999,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":878,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1519,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1665,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1539,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1859,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1404,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1330,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1829,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1529,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1797,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1283,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1236,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1579,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":873,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1420,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1784,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1637,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c":{"entryPoint":2107,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633":{"entryPoint":2259,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1433,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1589,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1062,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$894":{"entryPoint":950,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":1013,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1632,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9990:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"627:51:21","statements":[{"nodeType":"YulAssignment","src":"637:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"666:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"648:17:21"},"nodeType":"YulFunctionCall","src":"648:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"637:7:21"}]}]},"name":"cleanup_t_contract$_IERC20_$894","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"609:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"619:7:21","type":""}],"src":"568:110:21"},{"body":{"nodeType":"YulBlock","src":"741:93:21","statements":[{"body":{"nodeType":"YulBlock","src":"812:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"821:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"824:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"814:6:21"},"nodeType":"YulFunctionCall","src":"814:12:21"},"nodeType":"YulExpressionStatement","src":"814:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"764:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"803:5:21"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$894","nodeType":"YulIdentifier","src":"771:31:21"},"nodeType":"YulFunctionCall","src":"771:38:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"761:2:21"},"nodeType":"YulFunctionCall","src":"761:49:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"754:6:21"},"nodeType":"YulFunctionCall","src":"754:57:21"},"nodeType":"YulIf","src":"751:77:21"}]},"name":"validator_revert_t_contract$_IERC20_$894","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"734:5:21","type":""}],"src":"684:150:21"},{"body":{"nodeType":"YulBlock","src":"917:94:21","statements":[{"nodeType":"YulAssignment","src":"927:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"942:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"936:5:21"},"nodeType":"YulFunctionCall","src":"936:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"999:5:21"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$894","nodeType":"YulIdentifier","src":"958:40:21"},"nodeType":"YulFunctionCall","src":"958:47:21"},"nodeType":"YulExpressionStatement","src":"958:47:21"}]},"name":"abi_decode_t_contract$_IERC20_$894_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"895:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"903:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"911:5:21","type":""}],"src":"840:171:21"},{"body":{"nodeType":"YulBlock","src":"1061:45:21","statements":[{"nodeType":"YulAssignment","src":"1071:29:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1086:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1093:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1082:3:21"},"nodeType":"YulFunctionCall","src":"1082:18:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1071:7:21"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1043:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1053:7:21","type":""}],"src":"1017:89:21"},{"body":{"nodeType":"YulBlock","src":"1154:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"1210:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1219:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1222:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1212:6:21"},"nodeType":"YulFunctionCall","src":"1212:12:21"},"nodeType":"YulExpressionStatement","src":"1212:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1177:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1201:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"1184:16:21"},"nodeType":"YulFunctionCall","src":"1184:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1174:2:21"},"nodeType":"YulFunctionCall","src":"1174:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1167:6:21"},"nodeType":"YulFunctionCall","src":"1167:42:21"},"nodeType":"YulIf","src":"1164:62:21"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1147:5:21","type":""}],"src":"1112:120:21"},{"body":{"nodeType":"YulBlock","src":"1300:79:21","statements":[{"nodeType":"YulAssignment","src":"1310:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1325:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1319:5:21"},"nodeType":"YulFunctionCall","src":"1319:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1310:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1367:5:21"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"1341:25:21"},"nodeType":"YulFunctionCall","src":"1341:32:21"},"nodeType":"YulExpressionStatement","src":"1341:32:21"}]},"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1278:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1286:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1294:5:21","type":""}],"src":"1238:141:21"},{"body":{"nodeType":"YulBlock","src":"1428:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"1485:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1494:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1497:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1487:6:21"},"nodeType":"YulFunctionCall","src":"1487:12:21"},"nodeType":"YulExpressionStatement","src":"1487:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1451:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1476:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1458:17:21"},"nodeType":"YulFunctionCall","src":"1458:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1448:2:21"},"nodeType":"YulFunctionCall","src":"1448:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1441:6:21"},"nodeType":"YulFunctionCall","src":"1441:43:21"},"nodeType":"YulIf","src":"1438:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1421:5:21","type":""}],"src":"1385:122:21"},{"body":{"nodeType":"YulBlock","src":"1576:80:21","statements":[{"nodeType":"YulAssignment","src":"1586:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1601:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1595:5:21"},"nodeType":"YulFunctionCall","src":"1595:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1586:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1644:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1617:26:21"},"nodeType":"YulFunctionCall","src":"1617:33:21"},"nodeType":"YulExpressionStatement","src":"1617:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1554:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1562:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1570:5:21","type":""}],"src":"1513:143:21"},{"body":{"nodeType":"YulBlock","src":"1802:704:21","statements":[{"body":{"nodeType":"YulBlock","src":"1849:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1851:77:21"},"nodeType":"YulFunctionCall","src":"1851:79:21"},"nodeType":"YulExpressionStatement","src":"1851:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1823:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1832:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1819:3:21"},"nodeType":"YulFunctionCall","src":"1819:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1844:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1815:3:21"},"nodeType":"YulFunctionCall","src":"1815:33:21"},"nodeType":"YulIf","src":"1812:120:21"},{"nodeType":"YulBlock","src":"1942:142:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1957:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1971:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1961:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1986:88:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2046:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2057:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2042:3:21"},"nodeType":"YulFunctionCall","src":"2042:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2066:7:21"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$894_fromMemory","nodeType":"YulIdentifier","src":"1996:45:21"},"nodeType":"YulFunctionCall","src":"1996:78:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1986:6:21"}]}]},{"nodeType":"YulBlock","src":"2094:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2109:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2123:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2113:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2139:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2184:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2195:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2180:3:21"},"nodeType":"YulFunctionCall","src":"2180:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2204:7:21"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"2149:30:21"},"nodeType":"YulFunctionCall","src":"2149:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2139:6:21"}]}]},{"nodeType":"YulBlock","src":"2232:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2247:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2261:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2251:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2277:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2322:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2333:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2318:3:21"},"nodeType":"YulFunctionCall","src":"2318:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2342:7:21"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"2287:30:21"},"nodeType":"YulFunctionCall","src":"2287:63:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2277:6:21"}]}]},{"nodeType":"YulBlock","src":"2370:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2385:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2399:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2389:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2415:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2461:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2472:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2457:3:21"},"nodeType":"YulFunctionCall","src":"2457:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2481:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2425:31:21"},"nodeType":"YulFunctionCall","src":"2425:64:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2415:6:21"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$894t_uint16t_uint16t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1748:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1759:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1771:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1779:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1787:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1795:6:21","type":""}],"src":"1662:844:21"},{"body":{"nodeType":"YulBlock","src":"2571:40:21","statements":[{"nodeType":"YulAssignment","src":"2582:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2598:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:21"},"nodeType":"YulFunctionCall","src":"2592:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2582:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2554:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2564:6:21","type":""}],"src":"2512:99:21"},{"body":{"nodeType":"YulBlock","src":"2645:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2662:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2665:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2655:6:21"},"nodeType":"YulFunctionCall","src":"2655:88:21"},"nodeType":"YulExpressionStatement","src":"2655:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2759:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2762:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2752:6:21"},"nodeType":"YulFunctionCall","src":"2752:15:21"},"nodeType":"YulExpressionStatement","src":"2752:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2783:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2786:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2776:6:21"},"nodeType":"YulFunctionCall","src":"2776:15:21"},"nodeType":"YulExpressionStatement","src":"2776:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2617:180:21"},{"body":{"nodeType":"YulBlock","src":"2831:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2848:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2851:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2841:6:21"},"nodeType":"YulFunctionCall","src":"2841:88:21"},"nodeType":"YulExpressionStatement","src":"2841:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2945:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2948:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2938:6:21"},"nodeType":"YulFunctionCall","src":"2938:15:21"},"nodeType":"YulExpressionStatement","src":"2938:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2969:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2972:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2962:6:21"},"nodeType":"YulFunctionCall","src":"2962:15:21"},"nodeType":"YulExpressionStatement","src":"2962:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2803:180:21"},{"body":{"nodeType":"YulBlock","src":"3040:269:21","statements":[{"nodeType":"YulAssignment","src":"3050:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3064:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3070:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3060:3:21"},"nodeType":"YulFunctionCall","src":"3060:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3050:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"3081:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3111:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3117:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3107:3:21"},"nodeType":"YulFunctionCall","src":"3107:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3085:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3158:51:21","statements":[{"nodeType":"YulAssignment","src":"3172:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3186:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3194:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3182:3:21"},"nodeType":"YulFunctionCall","src":"3182:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3172:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3138:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3131:6:21"},"nodeType":"YulFunctionCall","src":"3131:26:21"},"nodeType":"YulIf","src":"3128:81:21"},{"body":{"nodeType":"YulBlock","src":"3261:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"3275:16:21"},"nodeType":"YulFunctionCall","src":"3275:18:21"},"nodeType":"YulExpressionStatement","src":"3275:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3225:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3248:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3256:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3245:2:21"},"nodeType":"YulFunctionCall","src":"3245:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3222:2:21"},"nodeType":"YulFunctionCall","src":"3222:38:21"},"nodeType":"YulIf","src":"3219:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3024:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3033:6:21","type":""}],"src":"2989:320:21"},{"body":{"nodeType":"YulBlock","src":"3369:87:21","statements":[{"nodeType":"YulAssignment","src":"3379:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3387:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3379:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3407:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"3410:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3400:6:21"},"nodeType":"YulFunctionCall","src":"3400:14:21"},"nodeType":"YulExpressionStatement","src":"3400:14:21"},{"nodeType":"YulAssignment","src":"3423:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3441:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3444:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3431:9:21"},"nodeType":"YulFunctionCall","src":"3431:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3423:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3356:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3364:4:21","type":""}],"src":"3315:141:21"},{"body":{"nodeType":"YulBlock","src":"3506:49:21","statements":[{"nodeType":"YulAssignment","src":"3516:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3534:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3541:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:21"},"nodeType":"YulFunctionCall","src":"3530:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"3546:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3526:3:21"},"nodeType":"YulFunctionCall","src":"3526:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3516:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3489:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3499:6:21","type":""}],"src":"3462:93:21"},{"body":{"nodeType":"YulBlock","src":"3614:54:21","statements":[{"nodeType":"YulAssignment","src":"3624:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3649:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"3655:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3645:3:21"},"nodeType":"YulFunctionCall","src":"3645:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3624:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3589:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"3595:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3605:8:21","type":""}],"src":"3561:107:21"},{"body":{"nodeType":"YulBlock","src":"3750:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3760:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"3781:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"3793:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3777:3:21"},"nodeType":"YulFunctionCall","src":"3777:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"3764:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3804:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"3835:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3846:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"3816:18:21"},"nodeType":"YulFunctionCall","src":"3816:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3808:4:21","type":""}]},{"nodeType":"YulAssignment","src":"3922:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"3953:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"3964:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"3934:18:21"},"nodeType":"YulFunctionCall","src":"3934:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3922:8:21"}]},{"nodeType":"YulAssignment","src":"3982:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3995:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4006:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4002:3:21"},"nodeType":"YulFunctionCall","src":"4002:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3991:3:21"},"nodeType":"YulFunctionCall","src":"3991:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3982:5:21"}]},{"nodeType":"YulAssignment","src":"4021:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4034:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4045:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"4055:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4041:3:21"},"nodeType":"YulFunctionCall","src":"4041:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4031:2:21"},"nodeType":"YulFunctionCall","src":"4031:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4021:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3711:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"3718:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"3730:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3743:6:21","type":""}],"src":"3674:393:21"},{"body":{"nodeType":"YulBlock","src":"4118:32:21","statements":[{"nodeType":"YulAssignment","src":"4128:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4139:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4128:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4100:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4110:7:21","type":""}],"src":"4073:77:21"},{"body":{"nodeType":"YulBlock","src":"4188:28:21","statements":[{"nodeType":"YulAssignment","src":"4198:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4205:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4198:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4174:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4184:3:21","type":""}],"src":"4156:60:21"},{"body":{"nodeType":"YulBlock","src":"4282:82:21","statements":[{"nodeType":"YulAssignment","src":"4292:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4350:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4332:17:21"},"nodeType":"YulFunctionCall","src":"4332:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4323:8:21"},"nodeType":"YulFunctionCall","src":"4323:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4305:17:21"},"nodeType":"YulFunctionCall","src":"4305:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4292:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4262:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4272:9:21","type":""}],"src":"4222:142:21"},{"body":{"nodeType":"YulBlock","src":"4417:28:21","statements":[{"nodeType":"YulAssignment","src":"4427:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4434:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4427:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4403:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4413:3:21","type":""}],"src":"4370:75:21"},{"body":{"nodeType":"YulBlock","src":"4527:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4537:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"4592:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4561:30:21"},"nodeType":"YulFunctionCall","src":"4561:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"4541:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4616:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4656:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4650:5:21"},"nodeType":"YulFunctionCall","src":"4650:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4663:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"4695:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"4671:23:21"},"nodeType":"YulFunctionCall","src":"4671:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"4622:27:21"},"nodeType":"YulFunctionCall","src":"4622:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4609:6:21"},"nodeType":"YulFunctionCall","src":"4609:105:21"},"nodeType":"YulExpressionStatement","src":"4609:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4504:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"4510:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"4518:7:21","type":""}],"src":"4451:269:21"},{"body":{"nodeType":"YulBlock","src":"4775:24:21","statements":[{"nodeType":"YulAssignment","src":"4785:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4792:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4785:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4771:3:21","type":""}],"src":"4726:73:21"},{"body":{"nodeType":"YulBlock","src":"4858:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4868:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"4882:30:21"},"nodeType":"YulFunctionCall","src":"4882:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"4872:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4967:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4973:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"4981:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4923:43:21"},"nodeType":"YulFunctionCall","src":"4923:65:21"},"nodeType":"YulExpressionStatement","src":"4923:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4844:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"4850:6:21","type":""}],"src":"4805:189:21"},{"body":{"nodeType":"YulBlock","src":"5050:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"5117:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5161:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5168:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5131:29:21"},"nodeType":"YulFunctionCall","src":"5131:39:21"},"nodeType":"YulExpressionStatement","src":"5131:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5070:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"5077:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5067:2:21"},"nodeType":"YulFunctionCall","src":"5067:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5082:26:21","statements":[{"nodeType":"YulAssignment","src":"5084:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5097:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5104:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:21"},"nodeType":"YulFunctionCall","src":"5093:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5084:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"5064:2:21","statements":[]},"src":"5060:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5038:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5045:3:21","type":""}],"src":"5000:186:21"},{"body":{"nodeType":"YulBlock","src":"5271:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"5297:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5311:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5359:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5327:31:21"},"nodeType":"YulFunctionCall","src":"5327:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"5315:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5378:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"5401:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"5429:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"5411:17:21"},"nodeType":"YulFunctionCall","src":"5411:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5397:3:21"},"nodeType":"YulFunctionCall","src":"5397:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"5382:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5598:27:21","statements":[{"nodeType":"YulAssignment","src":"5600:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"5615:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"5600:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"5582:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"5594:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5579:2:21"},"nodeType":"YulFunctionCall","src":"5579:18:21"},"nodeType":"YulIf","src":"5576:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"5667:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"5684:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"5712:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"5694:17:21"},"nodeType":"YulFunctionCall","src":"5694:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5680:3:21"},"nodeType":"YulFunctionCall","src":"5680:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"5638:28:21"},"nodeType":"YulFunctionCall","src":"5638:80:21"},"nodeType":"YulExpressionStatement","src":"5638:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"5288:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5285:2:21"},"nodeType":"YulFunctionCall","src":"5285:11:21"},"nodeType":"YulIf","src":"5282:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"5247:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"5254:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"5259:10:21","type":""}],"src":"5192:543:21"},{"body":{"nodeType":"YulBlock","src":"5804:54:21","statements":[{"nodeType":"YulAssignment","src":"5814:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5839:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"5845:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5835:3:21"},"nodeType":"YulFunctionCall","src":"5835:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5814:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"5779:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"5785:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5795:8:21","type":""}],"src":"5741:117:21"},{"body":{"nodeType":"YulBlock","src":"5915:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5925:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5974:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"5977:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5970:3:21"},"nodeType":"YulFunctionCall","src":"5970:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5989:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5985:3:21"},"nodeType":"YulFunctionCall","src":"5985:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"5941:28:21"},"nodeType":"YulFunctionCall","src":"5941:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5937:3:21"},"nodeType":"YulFunctionCall","src":"5937:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5929:4:21","type":""}]},{"nodeType":"YulAssignment","src":"6002:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6016:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"6022:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6012:3:21"},"nodeType":"YulFunctionCall","src":"6012:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6002:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5892:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"5898:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5908:6:21","type":""}],"src":"5864:169:21"},{"body":{"nodeType":"YulBlock","src":"6119:214:21","statements":[{"nodeType":"YulAssignment","src":"6252:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6279:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"6285:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6260:18:21"},"nodeType":"YulFunctionCall","src":"6260:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6252:4:21"}]},{"nodeType":"YulAssignment","src":"6298:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6309:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6319:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"6322:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6315:3:21"},"nodeType":"YulFunctionCall","src":"6315:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6306:2:21"},"nodeType":"YulFunctionCall","src":"6306:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"6298:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6100:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"6106:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6114:4:21","type":""}],"src":"6038:295:21"},{"body":{"nodeType":"YulBlock","src":"6430:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6441:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6488:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6455:32:21"},"nodeType":"YulFunctionCall","src":"6455:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"6445:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6577:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6579:16:21"},"nodeType":"YulFunctionCall","src":"6579:18:21"},"nodeType":"YulExpressionStatement","src":"6579:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6549:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6557:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6546:2:21"},"nodeType":"YulFunctionCall","src":"6546:30:21"},"nodeType":"YulIf","src":"6543:56:21"},{"nodeType":"YulVariableDeclaration","src":"6609:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6655:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6649:5:21"},"nodeType":"YulFunctionCall","src":"6649:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"6623:25:21"},"nodeType":"YulFunctionCall","src":"6623:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"6613:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6754:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"6760:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"6768:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"6708:45:21"},"nodeType":"YulFunctionCall","src":"6708:67:21"},"nodeType":"YulExpressionStatement","src":"6708:67:21"},{"nodeType":"YulVariableDeclaration","src":"6785:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6802:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"6789:9:21","type":""}]},{"nodeType":"YulAssignment","src":"6813:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6826:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6813:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"6877:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6891:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6910:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6922:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6918:3:21"},"nodeType":"YulFunctionCall","src":"6918:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6906:3:21"},"nodeType":"YulFunctionCall","src":"6906:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"6895:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6942:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6988:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6956:31:21"},"nodeType":"YulFunctionCall","src":"6956:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"6946:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7006:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7015:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7010:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7074:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7099:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7117:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7122:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7113:3:21"},"nodeType":"YulFunctionCall","src":"7113:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7107:5:21"},"nodeType":"YulFunctionCall","src":"7107:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7092:6:21"},"nodeType":"YulFunctionCall","src":"7092:42:21"},"nodeType":"YulExpressionStatement","src":"7092:42:21"},{"nodeType":"YulAssignment","src":"7151:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7165:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7173:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7161:3:21"},"nodeType":"YulFunctionCall","src":"7161:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7151:6:21"}]},{"nodeType":"YulAssignment","src":"7192:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7209:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7220:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7205:3:21"},"nodeType":"YulFunctionCall","src":"7205:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7192:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7040:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7043:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7037:2:21"},"nodeType":"YulFunctionCall","src":"7037:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7052:21:21","statements":[{"nodeType":"YulAssignment","src":"7054:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7063:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"7066:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7059:3:21"},"nodeType":"YulFunctionCall","src":"7059:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7054:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"7033:3:21","statements":[]},"src":"7029:208:21"},{"body":{"nodeType":"YulBlock","src":"7273:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7291:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7318:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7323:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7314:3:21"},"nodeType":"YulFunctionCall","src":"7314:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7308:5:21"},"nodeType":"YulFunctionCall","src":"7308:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"7295:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7358:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"7385:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7400:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7408:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7396:3:21"},"nodeType":"YulFunctionCall","src":"7396:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7366:18:21"},"nodeType":"YulFunctionCall","src":"7366:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7351:6:21"},"nodeType":"YulFunctionCall","src":"7351:64:21"},"nodeType":"YulExpressionStatement","src":"7351:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"7256:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"7265:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7253:2:21"},"nodeType":"YulFunctionCall","src":"7253:19:21"},"nodeType":"YulIf","src":"7250:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7449:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7463:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7471:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7459:3:21"},"nodeType":"YulFunctionCall","src":"7459:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"7475:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7455:3:21"},"nodeType":"YulFunctionCall","src":"7455:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7442:6:21"},"nodeType":"YulFunctionCall","src":"7442:36:21"},"nodeType":"YulExpressionStatement","src":"7442:36:21"}]},"nodeType":"YulCase","src":"6870:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6875:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7505:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7519:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7532:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7523:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7556:67:21","statements":[{"nodeType":"YulAssignment","src":"7574:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7593:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7598:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:21"},"nodeType":"YulFunctionCall","src":"7589:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7583:5:21"},"nodeType":"YulFunctionCall","src":"7583:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7574:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"7549:6:21"},"nodeType":"YulIf","src":"7546:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7643:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7702:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"7709:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"7649:52:21"},"nodeType":"YulFunctionCall","src":"7649:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7636:6:21"},"nodeType":"YulFunctionCall","src":"7636:81:21"},"nodeType":"YulExpressionStatement","src":"7636:81:21"}]},"nodeType":"YulCase","src":"7497:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6850:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6858:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6847:2:21"},"nodeType":"YulFunctionCall","src":"6847:14:21"},"nodeType":"YulSwitch","src":"6840:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6419:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"6425:3:21","type":""}],"src":"6338:1395:21"},{"body":{"nodeType":"YulBlock","src":"7835:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7852:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7857:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7845:6:21"},"nodeType":"YulFunctionCall","src":"7845:19:21"},"nodeType":"YulExpressionStatement","src":"7845:19:21"},{"nodeType":"YulAssignment","src":"7873:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7892:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7897:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7888:3:21"},"nodeType":"YulFunctionCall","src":"7888:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7873:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7807:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"7812:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7823:11:21","type":""}],"src":"7739:169:21"},{"body":{"nodeType":"YulBlock","src":"8020:133:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8042:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8050:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8038:3:21"},"nodeType":"YulFunctionCall","src":"8038:14:21"},{"hexValue":"43796265724172656e615374616b696e673a207374616b696e6720746f6b656e","kind":"string","nodeType":"YulLiteral","src":"8054:34:21","type":"","value":"CyberArenaStaking: staking token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8031:6:21"},"nodeType":"YulFunctionCall","src":"8031:58:21"},"nodeType":"YulExpressionStatement","src":"8031:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8110:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8118:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8106:3:21"},"nodeType":"YulFunctionCall","src":"8106:15:21"},{"hexValue":"20697320746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"8123:22:21","type":"","value":" is the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8099:6:21"},"nodeType":"YulFunctionCall","src":"8099:47:21"},"nodeType":"YulExpressionStatement","src":"8099:47:21"}]},"name":"store_literal_in_memory_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8012:6:21","type":""}],"src":"7914:239:21"},{"body":{"nodeType":"YulBlock","src":"8305:220:21","statements":[{"nodeType":"YulAssignment","src":"8315:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8381:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8386:2:21","type":"","value":"52"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8322:58:21"},"nodeType":"YulFunctionCall","src":"8322:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8315:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8487:3:21"}],"functionName":{"name":"store_literal_in_memory_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c","nodeType":"YulIdentifier","src":"8398:88:21"},"nodeType":"YulFunctionCall","src":"8398:93:21"},"nodeType":"YulExpressionStatement","src":"8398:93:21"},{"nodeType":"YulAssignment","src":"8500:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8511:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8516:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8507:3:21"},"nodeType":"YulFunctionCall","src":"8507:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8500:3:21"}]}]},"name":"abi_encode_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8293:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8301:3:21","type":""}],"src":"8159:366:21"},{"body":{"nodeType":"YulBlock","src":"8702:248:21","statements":[{"nodeType":"YulAssignment","src":"8712:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8724:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8735:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8720:3:21"},"nodeType":"YulFunctionCall","src":"8720:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8712:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8759:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8770:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8755:3:21"},"nodeType":"YulFunctionCall","src":"8755:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8778:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8784:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8774:3:21"},"nodeType":"YulFunctionCall","src":"8774:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8748:6:21"},"nodeType":"YulFunctionCall","src":"8748:47:21"},"nodeType":"YulExpressionStatement","src":"8748:47:21"},{"nodeType":"YulAssignment","src":"8804:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8938:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8812:124:21"},"nodeType":"YulFunctionCall","src":"8812:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8804:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8682:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8697:4:21","type":""}],"src":"8531:419:21"},{"body":{"nodeType":"YulBlock","src":"9062:128:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9084:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9092:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9080:3:21"},"nodeType":"YulFunctionCall","src":"9080:14:21"},{"hexValue":"43796265724172656e615374616b696e673a2074726561737572792069732074","kind":"string","nodeType":"YulLiteral","src":"9096:34:21","type":"","value":"CyberArenaStaking: treasury is t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9073:6:21"},"nodeType":"YulFunctionCall","src":"9073:58:21"},"nodeType":"YulExpressionStatement","src":"9073:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9152:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9160:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9148:3:21"},"nodeType":"YulFunctionCall","src":"9148:15:21"},{"hexValue":"6865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"9165:17:21","type":"","value":"he zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9141:6:21"},"nodeType":"YulFunctionCall","src":"9141:42:21"},"nodeType":"YulExpressionStatement","src":"9141:42:21"}]},"name":"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9054:6:21","type":""}],"src":"8956:234:21"},{"body":{"nodeType":"YulBlock","src":"9342:220:21","statements":[{"nodeType":"YulAssignment","src":"9352:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9418:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9423:2:21","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9359:58:21"},"nodeType":"YulFunctionCall","src":"9359:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9352:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9524:3:21"}],"functionName":{"name":"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","nodeType":"YulIdentifier","src":"9435:88:21"},"nodeType":"YulFunctionCall","src":"9435:93:21"},"nodeType":"YulExpressionStatement","src":"9435:93:21"},{"nodeType":"YulAssignment","src":"9537:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9548:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9553:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9544:3:21"},"nodeType":"YulFunctionCall","src":"9544:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9537:3:21"}]}]},"name":"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9330:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9338:3:21","type":""}],"src":"9196:366:21"},{"body":{"nodeType":"YulBlock","src":"9739:248:21","statements":[{"nodeType":"YulAssignment","src":"9749:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9761:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9772:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9757:3:21"},"nodeType":"YulFunctionCall","src":"9757:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9749:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9796:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9807:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9792:3:21"},"nodeType":"YulFunctionCall","src":"9792:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9815:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9821:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9811:3:21"},"nodeType":"YulFunctionCall","src":"9811:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9785:6:21"},"nodeType":"YulFunctionCall","src":"9785:47:21"},"nodeType":"YulExpressionStatement","src":"9785:47:21"},{"nodeType":"YulAssignment","src":"9841:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9975:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9849:124:21"},"nodeType":"YulFunctionCall","src":"9849:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9841:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9719:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9734:4:21","type":""}],"src":"9568:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$894(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$894(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$894(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$894_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$894(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$894t_uint16t_uint16t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$894_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: staking token\")\n\n        mstore(add(memPtr, 32), \" is the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6b0f1317ed6bbee3e7c8330a3bd969b65f5303ad1f7e1f503c77db6f4f79461c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: treasury is t\")\n\n        mstore(add(memPtr, 32), \"he zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162003b1438038062003b14833981810160405281019062000037919062000457565b6040518060400160405280600a81526020017f5374616b656420434154000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f73744341540000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000743565b508060049081620000c6919062000743565b505050620000e9620000dd6200029b60201b60201c565b620002a360201b60201c565b6001600681905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160362000163576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200015a90620008b1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001d5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001cc9062000949565b60405180910390fd5b83600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600960006101000a81548161ffff021916908361ffff16021790555081600960026101000a81548161ffff021916908361ffff16021790555080600960046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200096b565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200039b826200036e565b9050919050565b6000620003af826200038e565b9050919050565b620003c181620003a2565b8114620003cd57600080fd5b50565b600081519050620003e181620003b6565b92915050565b600061ffff82169050919050565b6200040081620003e7565b81146200040c57600080fd5b50565b6000815190506200042081620003f5565b92915050565b62000431816200038e565b81146200043d57600080fd5b50565b600081519050620004518162000426565b92915050565b6000806000806080858703121562000474576200047362000369565b5b60006200048487828801620003d0565b945050602062000497878288016200040f565b9350506040620004aa878288016200040f565b9250506060620004bd8782880162000440565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200054b57607f821691505b60208210810362000561576200056062000503565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005cb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200058c565b620005d786836200058c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620006246200061e6200061884620005ef565b620005f9565b620005ef565b9050919050565b6000819050919050565b620006408362000603565b620006586200064f826200062b565b84845462000599565b825550505050565b600090565b6200066f62000660565b6200067c81848462000635565b505050565b5b81811015620006a4576200069860008262000665565b60018101905062000682565b5050565b601f821115620006f357620006bd8162000567565b620006c8846200057c565b81016020851015620006d8578190505b620006f0620006e7856200057c565b83018262000681565b50505b505050565b600082821c905092915050565b60006200071860001984600802620006f8565b1980831691505092915050565b600062000733838362000705565b9150826002028217905092915050565b6200074e82620004c9565b67ffffffffffffffff8111156200076a5762000769620004d4565b5b62000776825462000532565b62000783828285620006a8565b600060209050601f831160018114620007bb5760008415620007a6578287015190505b620007b2858262000725565b86555062000822565b601f198416620007cb8662000567565b60005b82811015620007f557848901518255600182019150602085019450602081019050620007ce565b8683101562000815578489015162000811601f89168262000705565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f43796265724172656e615374616b696e673a207374616b696e6720746f6b656e60008201527f20697320746865207a65726f2061646472657373000000000000000000000000602082015250565b6000620008996034836200082a565b9150620008a6826200083b565b604082019050919050565b60006020820190508181036000830152620008cc816200088a565b9050919050565b7f43796265724172656e615374616b696e673a207472656173757279206973207460008201527f6865207a65726f20616464726573730000000000000000000000000000000000602082015250565b600062000931602f836200082a565b91506200093e82620008d3565b604082019050919050565b60006020820190508181036000830152620009648162000922565b9050919050565b613199806200097b6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806372f702f3116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e14610455578063ee2b44e414610485578063f0f44260146104a3578063f2fde38b146104bf57610173565b8063a9059cbb146103d4578063bacb4c5714610404578063c8b6cbf71461042057610173565b806372f702f31461031057806388fe2be81461032e5780638da5cb5b1461034a57806395d89b4114610368578063a457c2d714610386578063a5582c3e146103b657610173565b8063313ce56711610130578063313ce5671461024c578063395093511461026a5780633a98ef391461029a57806361d027b3146102b857806370a08231146102d6578063715018a61461030657610173565b806306fdde0314610178578063095ea7b31461019657806318160ddd146101c657806323b872dd146101e45780632932e77a146102145780632e17de7814610230575b600080fd5b6101806104db565b60405161018d9190611f12565b60405180910390f35b6101b060048036038101906101ab9190611fcd565b61056d565b6040516101bd9190612028565b60405180910390f35b6101ce610590565b6040516101db9190612052565b60405180910390f35b6101fe60048036038101906101f9919061206d565b61059a565b60405161020b9190612028565b60405180910390f35b61022e600480360381019061022991906120fa565b6105c9565b005b61024a60048036038101906102459190612127565b6105f1565b005b610254610a3b565b6040516102619190612170565b60405180910390f35b610284600480360381019061027f9190611fcd565b610a44565b6040516102919190612028565b60405180910390f35b6102a2610a7b565b6040516102af91906121be565b60405180910390f35b6102c0610aa5565b6040516102cd91906121e8565b60405180910390f35b6102f060048036038101906102eb9190612203565b610acb565b6040516102fd9190612052565b60405180910390f35b61030e610b13565b005b610318610b27565b604051610325919061228f565b60405180910390f35b610348600480360381019061034391906122f2565b610b4d565b005b610352610edd565b60405161035f91906121e8565b60405180910390f35b610370610f07565b60405161037d9190611f12565b60405180910390f35b6103a0600480360381019061039b9190611fcd565b610f99565b6040516103ad9190612028565b60405180910390f35b6103be611010565b6040516103cb919061232e565b60405180910390f35b6103ee60048036038101906103e99190611fcd565b611024565b6040516103fb9190612028565b60405180910390f35b61041e600480360381019061041991906120fa565b611047565b005b61043a60048036038101906104359190611fcd565b6110ef565b60405161044c96959493929190612379565b60405180910390f35b61046f600480360381019061046a91906123da565b6111c3565b60405161047c9190612052565b60405180910390f35b61048d61124a565b60405161049a919061232e565b60405180910390f35b6104bd60048036038101906104b89190612203565b61125e565b005b6104d960048036038101906104d49190612203565b611350565b005b6060600380546104ea90612449565b80601f016020809104026020016040519081016040528092919081815260200182805461051690612449565b80156105635780601f1061053857610100808354040283529160200191610563565b820191906000526020600020905b81548152906001019060200180831161054657829003601f168201915b5050505050905090565b6000806105786113d3565b90506105858185856113db565b600191505092915050565b6000600254905090565b6000806105a56113d3565b90506105b28582856115a4565b6105bd858585611630565b60019150509392505050565b6105d161166b565b80600960006101000a81548161ffff021916908361ffff16021790555050565b600260065403610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d906124c6565b60405180910390fd5b6002600681905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b990612532565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061071557610714612552565b5b906000526020600020906002020190508060000160009054906101000a900460ff1615610777576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076e906125f3565b60405180910390fd5b6107b3338260000160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166116e9565b8060010160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16600a60008282829054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff166108109190612642565b92506101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060018160000160006101000a81548160ff021916908315150217905550600061087d6118bf565b620151808360000160179054906101000a900461ffff1661ffff166108a2919061268e565b8360000160119054906101000a900465ffffffffffff166108c391906126cb565b65ffffffffffff1611156109a4576127108260000160199054906101000a900461ffff1661ffff168360000160019054906101000a90046fffffffffffffffffffffffffffffffff166109169190612705565b6109209190612771565b6fffffffffffffffffffffffffffffffff1690506109a3600960049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118c79092919063ffffffff16565b5b610a2e33828460000160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166109e691906127a2565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118c79092919063ffffffff16565b5050600160068190555050565b60006012905090565b600080610a4f6113d3565b9050610a70818585610a6185896111c3565b610a6b91906127d6565b6113db565b600191505092915050565b600a60009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1681565b600960049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b1b61166b565b610b25600061194d565b565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260065403610b92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b89906124c6565b60405180910390fd5b6002600681905550610bfb3330836fffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a13909392919063ffffffff16565b610c1733826fffffffffffffffffffffffffffffffff16611a9c565b806fffffffffffffffffffffffffffffffff16600a60008282829054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16610c5e919061280a565b92506101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff160217905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405280600015158152602001836fffffffffffffffffffffffffffffffff168152602001610d176118bf565b65ffffffffffff168152602001600960009054906101000a900461ffff1661ffff168152602001600960029054906101000a900461ffff1661ffff168152602001836fffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060408201518160000160116101000a81548165ffffffffffff021916908365ffffffffffff16021790555060608201518160000160176101000a81548161ffff021916908361ffff16021790555060808201518160000160196101000a81548161ffff021916908361ffff16021790555060a08201518160010160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff1602179055505050600160068190555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610f1690612449565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4290612449565b8015610f8f5780601f10610f6457610100808354040283529160200191610f8f565b820191906000526020600020905b815481529060010190602001808311610f7257829003601f168201915b5050505050905090565b600080610fa46113d3565b90506000610fb282866111c3565b905083811015610ff7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fee906128c8565b60405180910390fd5b61100482868684036113db565b60019250505092915050565b600960029054906101000a900461ffff1681565b60008061102f6113d3565b905061103c818585611630565b600191505092915050565b61104f61166b565b6127108161ffff161115611098576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108f9061295a565b60405180910390fd5b80600960026101000a81548161ffff021916908361ffff1602179055507f49df4ae990079b53e42ad090f1fc5b7311dd70675bccd49294082a2ed78d6194816040516110e4919061232e565b60405180910390a150565b6008602052816000526040600020818154811061110b57600080fd5b9060005260206000209060020201600091509150508060000160009054906101000a900460ff16908060000160019054906101000a90046fffffffffffffffffffffffffffffffff16908060000160119054906101000a900465ffffffffffff16908060000160179054906101000a900461ffff16908060000160199054906101000a900461ffff16908060010160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16905086565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600960009054906101000a900461ffff1681565b61126661166b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cc906129ec565b60405180910390fd5b80600960046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcb7ef3e545f5cdb893f5c568ba710fe08f336375a2d9fd66e161033f8fc09ef38160405161134591906121e8565b60405180910390a150565b61135861166b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113be90612a7e565b60405180910390fd5b6113d08161194d565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361144a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144190612b10565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b090612ba2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115979190612052565b60405180910390a3505050565b60006115b084846111c3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461162a578181101561161c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161390612c0e565b60405180910390fd5b61162984848484036113db565b5b50505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166290612ca0565b60405180910390fd5b6116736113d3565b73ffffffffffffffffffffffffffffffffffffffff16611691610edd565b73ffffffffffffffffffffffffffffffffffffffff16146116e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116de90612d0c565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174f90612d9e565b60405180910390fd5b61176482600083611bfb565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156117ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e190612e30565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461184191906127a2565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516118a69190612052565b60405180910390a36118ba83600084611c00565b505050565b600042905090565b6119488363a9059cbb60e01b84846040516024016118e6929190612e50565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c05565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611a96846323b872dd60e01b858585604051602401611a3493929190612e79565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c05565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0290612efc565b60405180910390fd5b611b1760008383611bfb565b8060026000828254611b2991906127d6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b7e91906127d6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611be39190612052565b60405180910390a3611bf760008383611c00565b5050565b505050565b505050565b6000611c67826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611ccc9092919063ffffffff16565b9050600081511115611cc75780806020019051810190611c879190612f48565b611cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbd90612fe7565b60405180910390fd5b5b505050565b6060611cdb8484600085611ce4565b90509392505050565b606082471015611d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2090613079565b60405180910390fd5b611d3285611df8565b611d71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d68906130e5565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d9a919061314c565b60006040518083038185875af1925050503d8060008114611dd7576040519150601f19603f3d011682016040523d82523d6000602084013e611ddc565b606091505b5091509150611dec828286611e1b565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611e2b57829050611e7b565b600083511115611e3e5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e729190611f12565b60405180910390fd5b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ebc578082015181840152602081019050611ea1565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ee482611e82565b611eee8185611e8d565b9350611efe818560208601611e9e565b611f0781611ec8565b840191505092915050565b60006020820190508181036000830152611f2c8184611ed9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f6482611f39565b9050919050565b611f7481611f59565b8114611f7f57600080fd5b50565b600081359050611f9181611f6b565b92915050565b6000819050919050565b611faa81611f97565b8114611fb557600080fd5b50565b600081359050611fc781611fa1565b92915050565b60008060408385031215611fe457611fe3611f34565b5b6000611ff285828601611f82565b925050602061200385828601611fb8565b9150509250929050565b60008115159050919050565b6120228161200d565b82525050565b600060208201905061203d6000830184612019565b92915050565b61204c81611f97565b82525050565b60006020820190506120676000830184612043565b92915050565b60008060006060848603121561208657612085611f34565b5b600061209486828701611f82565b93505060206120a586828701611f82565b92505060406120b686828701611fb8565b9150509250925092565b600061ffff82169050919050565b6120d7816120c0565b81146120e257600080fd5b50565b6000813590506120f4816120ce565b92915050565b6000602082840312156121105761210f611f34565b5b600061211e848285016120e5565b91505092915050565b60006020828403121561213d5761213c611f34565b5b600061214b84828501611fb8565b91505092915050565b600060ff82169050919050565b61216a81612154565b82525050565b60006020820190506121856000830184612161565b92915050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6121b88161218b565b82525050565b60006020820190506121d360008301846121af565b92915050565b6121e281611f59565b82525050565b60006020820190506121fd60008301846121d9565b92915050565b60006020828403121561221957612218611f34565b5b600061222784828501611f82565b91505092915050565b6000819050919050565b600061225561225061224b84611f39565b612230565b611f39565b9050919050565b60006122678261223a565b9050919050565b60006122798261225c565b9050919050565b6122898161226e565b82525050565b60006020820190506122a46000830184612280565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6122cf816122aa565b81146122da57600080fd5b50565b6000813590506122ec816122c6565b92915050565b60006020828403121561230857612307611f34565b5b6000612316848285016122dd565b91505092915050565b612328816120c0565b82525050565b6000602082019050612343600083018461231f565b92915050565b612352816122aa565b82525050565b600065ffffffffffff82169050919050565b61237381612358565b82525050565b600060c08201905061238e6000830189612019565b61239b6020830188612349565b6123a8604083018761236a565b6123b5606083018661231f565b6123c2608083018561231f565b6123cf60a08301846121af565b979650505050505050565b600080604083850312156123f1576123f0611f34565b5b60006123ff85828601611f82565b925050602061241085828601611f82565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061246157607f821691505b6020821081036124745761247361241a565b5b50919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006124b0601f83611e8d565b91506124bb8261247a565b602082019050919050565b600060208201905081810360008301526124df816124a3565b9050919050565b7f43796265724172656e615374616b696e673a20696e76616c696420696e646578600082015250565b600061251c602083611e8d565b9150612527826124e6565b602082019050919050565b6000602082019050818103600083015261254b8161250f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f43796265724172656e615374616b696e673a20756e7374616b656420616c726560008201527f6164790000000000000000000000000000000000000000000000000000000000602082015250565b60006125dd602383611e8d565b91506125e882612581565b604082019050919050565b6000602082019050818103600083015261260c816125d0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061264d8261218b565b91506126588361218b565b9250828203905077ffffffffffffffffffffffffffffffffffffffffffffffff81111561268857612687612613565b5b92915050565b600061269982612358565b91506126a483612358565b92508282026126b281612358565b91508082146126c4576126c3612613565b5b5092915050565b60006126d682612358565b91506126e183612358565b9250828201905065ffffffffffff8111156126ff576126fe612613565b5b92915050565b6000612710826122aa565b915061271b836122aa565b9250828202612729816122aa565b915080821461273b5761273a612613565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061277c826122aa565b9150612787836122aa565b92508261279757612796612742565b5b828204905092915050565b60006127ad82611f97565b91506127b883611f97565b92508282039050818111156127d0576127cf612613565b5b92915050565b60006127e182611f97565b91506127ec83611f97565b925082820190508082111561280457612803612613565b5b92915050565b60006128158261218b565b91506128208361218b565b9250828201905077ffffffffffffffffffffffffffffffffffffffffffffffff8111156128505761284f612613565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006128b2602583611e8d565b91506128bd82612856565b604082019050919050565b600060208201905081810360008301526128e1816128a5565b9050919050565b7f5374616b696e673a2070656e616c74792042502065786365656473206c696d6960008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612944602183611e8d565b915061294f826128e8565b604082019050919050565b6000602082019050818103600083015261297381612937565b9050919050565b7f43796265724172656e615374616b696e673a207472656173757279206973207460008201527f6865207a65726f20616464726573730000000000000000000000000000000000602082015250565b60006129d6602f83611e8d565b91506129e18261297a565b604082019050919050565b60006020820190508181036000830152612a05816129c9565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612a68602683611e8d565b9150612a7382612a0c565b604082019050919050565b60006020820190508181036000830152612a9781612a5b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612afa602483611e8d565b9150612b0582612a9e565b604082019050919050565b60006020820190508181036000830152612b2981612aed565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612b8c602283611e8d565b9150612b9782612b30565b604082019050919050565b60006020820190508181036000830152612bbb81612b7f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612bf8601d83611e8d565b9150612c0382612bc2565b602082019050919050565b60006020820190508181036000830152612c2781612beb565b9050919050565b7f43796265724172656e615374616b696e673a204e4f4e5f5452414e534645524160008201527f424c450000000000000000000000000000000000000000000000000000000000602082015250565b6000612c8a602383611e8d565b9150612c9582612c2e565b604082019050919050565b60006020820190508181036000830152612cb981612c7d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612cf6602083611e8d565b9150612d0182612cc0565b602082019050919050565b60006020820190508181036000830152612d2581612ce9565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612d88602183611e8d565b9150612d9382612d2c565b604082019050919050565b60006020820190508181036000830152612db781612d7b565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612e1a602283611e8d565b9150612e2582612dbe565b604082019050919050565b60006020820190508181036000830152612e4981612e0d565b9050919050565b6000604082019050612e6560008301856121d9565b612e726020830184612043565b9392505050565b6000606082019050612e8e60008301866121d9565b612e9b60208301856121d9565b612ea86040830184612043565b949350505050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000612ee6601f83611e8d565b9150612ef182612eb0565b602082019050919050565b60006020820190508181036000830152612f1581612ed9565b9050919050565b612f258161200d565b8114612f3057600080fd5b50565b600081519050612f4281612f1c565b92915050565b600060208284031215612f5e57612f5d611f34565b5b6000612f6c84828501612f33565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612fd1602a83611e8d565b9150612fdc82612f75565b604082019050919050565b6000602082019050818103600083015261300081612fc4565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000613063602683611e8d565b915061306e82613007565b604082019050919050565b6000602082019050818103600083015261309281613056565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006130cf601d83611e8d565b91506130da82613099565b602082019050919050565b600060208201905081810360008301526130fe816130c2565b9050919050565b600081519050919050565b600081905092915050565b600061312682613105565b6131308185613110565b9350613140818560208601611e9e565b80840191505092915050565b6000613158828461311b565b91508190509291505056fea26469706673582212204a196babe78c8359d91d83d46570bf24395c91c3c3105a6ccf53ad990de63e7164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3B14 CODESIZE SUB DUP1 PUSH3 0x3B14 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616B65642043415400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7374434154000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x743 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x743 JUMP JUMPDEST POP POP POP PUSH3 0xE9 PUSH3 0xDD PUSH3 0x29B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2A3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x163 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x15A SWAP1 PUSH3 0x8B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1CC SWAP1 PUSH3 0x949 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x96B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x39B DUP3 PUSH3 0x36E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3AF DUP3 PUSH3 0x38E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C1 DUP2 PUSH3 0x3A2 JUMP JUMPDEST DUP2 EQ PUSH3 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3E1 DUP2 PUSH3 0x3B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x400 DUP2 PUSH3 0x3E7 JUMP JUMPDEST DUP2 EQ PUSH3 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x420 DUP2 PUSH3 0x3F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x431 DUP2 PUSH3 0x38E JUMP JUMPDEST DUP2 EQ PUSH3 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x451 DUP2 PUSH3 0x426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x474 JUMPI PUSH3 0x473 PUSH3 0x369 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x484 DUP8 DUP3 DUP9 ADD PUSH3 0x3D0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x497 DUP8 DUP3 DUP9 ADD PUSH3 0x40F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x4AA DUP8 DUP3 DUP9 ADD PUSH3 0x40F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x4BD DUP8 DUP3 DUP9 ADD PUSH3 0x440 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x54B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x561 JUMPI PUSH3 0x560 PUSH3 0x503 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x5CB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x58C JUMP JUMPDEST PUSH3 0x5D7 DUP7 DUP4 PUSH3 0x58C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x624 PUSH3 0x61E PUSH3 0x618 DUP5 PUSH3 0x5EF JUMP JUMPDEST PUSH3 0x5F9 JUMP JUMPDEST PUSH3 0x5EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x640 DUP4 PUSH3 0x603 JUMP JUMPDEST PUSH3 0x658 PUSH3 0x64F DUP3 PUSH3 0x62B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x599 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x66F PUSH3 0x660 JUMP JUMPDEST PUSH3 0x67C DUP2 DUP5 DUP5 PUSH3 0x635 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x6A4 JUMPI PUSH3 0x698 PUSH1 0x0 DUP3 PUSH3 0x665 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x682 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6F3 JUMPI PUSH3 0x6BD DUP2 PUSH3 0x567 JUMP JUMPDEST PUSH3 0x6C8 DUP5 PUSH3 0x57C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6D8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6F0 PUSH3 0x6E7 DUP6 PUSH3 0x57C JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x681 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x718 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x6F8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x733 DUP4 DUP4 PUSH3 0x705 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x74E DUP3 PUSH3 0x4C9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x76A JUMPI PUSH3 0x769 PUSH3 0x4D4 JUMP JUMPDEST JUMPDEST PUSH3 0x776 DUP3 SLOAD PUSH3 0x532 JUMP JUMPDEST PUSH3 0x783 DUP3 DUP3 DUP6 PUSH3 0x6A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7BB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x7A6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x7B2 DUP6 DUP3 PUSH3 0x725 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x822 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7CB DUP7 PUSH3 0x567 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7F5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7CE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x815 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x811 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x705 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A207374616B696E6720746F6B656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20697320746865207A65726F2061646472657373000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x899 PUSH1 0x34 DUP4 PUSH3 0x82A JUMP JUMPDEST SWAP2 POP PUSH3 0x8A6 DUP3 PUSH3 0x83B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x8CC DUP2 PUSH3 0x88A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A2074726561737572792069732074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6865207A65726F20616464726573730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x931 PUSH1 0x2F DUP4 PUSH3 0x82A JUMP JUMPDEST SWAP2 POP PUSH3 0x93E DUP3 PUSH3 0x8D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x964 DUP2 PUSH3 0x922 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3199 DUP1 PUSH3 0x97B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xEE2B44E4 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4BF JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xBACB4C57 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xC8B6CBF7 EQ PUSH2 0x420 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x88FE2BE8 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xA5582C3E EQ PUSH2 0x3B6 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x306 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2932E77A EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0xACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH2 0xB13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x228F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0xB4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BE PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x23DA JUMP JUMPDEST PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48D PUSH2 0x124A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x1350 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4EA SWAP1 PUSH2 0x2449 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x516 SWAP1 PUSH2 0x2449 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x563 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x538 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x563 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x546 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x578 PUSH2 0x13D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x585 DUP2 DUP6 DUP6 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5A5 PUSH2 0x13D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x5B2 DUP6 DUP3 DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x5BD DUP6 DUP6 DUP6 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5D1 PUSH2 0x166B JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62D SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x2532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x715 JUMPI PUSH2 0x714 PUSH2 0x2552 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76E SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B3 CALLER DUP3 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E9 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x2642 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x87D PUSH2 0x18BF JUMP JUMPDEST PUSH3 0x15180 DUP4 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x268E JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x11 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x8C3 SWAP2 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x9A4 JUMPI PUSH2 0x2710 DUP3 PUSH1 0x0 ADD PUSH1 0x19 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x916 SWAP2 SWAP1 PUSH2 0x2705 JUMP JUMPDEST PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x2771 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x9A3 PUSH1 0x9 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18C7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xA2E CALLER DUP3 DUP5 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E6 SWAP2 SWAP1 PUSH2 0x27A2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18C7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA4F PUSH2 0x13D3 JUMP JUMPDEST SWAP1 POP PUSH2 0xA70 DUP2 DUP6 DUP6 PUSH2 0xA61 DUP6 DUP10 PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1B PUSH2 0x166B JUMP JUMPDEST PUSH2 0xB25 PUSH1 0x0 PUSH2 0x194D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB89 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0xBFB CALLER ADDRESS DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A13 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC17 CALLER DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A9C JUMP JUMPDEST DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC5E SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD17 PUSH2 0x18BF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x11 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x19 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF16 SWAP1 PUSH2 0x2449 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF42 SWAP1 PUSH2 0x2449 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF8F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF64 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF8F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF72 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFA4 PUSH2 0x13D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFB2 DUP3 DUP7 PUSH2 0x11C3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEE SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1004 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x102F PUSH2 0x13D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x103C DUP2 DUP6 DUP6 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x104F PUSH2 0x166B JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x1098 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108F SWAP1 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x49DF4AE990079B53E42AD090F1FC5B7311DD70675BCCD49294082A2ED78D6194 DUP2 PUSH1 0x40 MLOAD PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x11 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x19 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1266 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CC SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCB7EF3E545F5CDB893F5C568BA710FE08F336375A2D9FD66E161033F8FC09EF3 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1345 SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1358 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BE SWAP1 PUSH2 0x2A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13D0 DUP2 PUSH2 0x194D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1441 SWAP1 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B0 SWAP1 PUSH2 0x2BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1597 SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B0 DUP5 DUP5 PUSH2 0x11C3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x162A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x161C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1613 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1629 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x13DB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1662 SWAP1 PUSH2 0x2CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1673 PUSH2 0x13D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1691 PUSH2 0xEDD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DE SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1758 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174F SWAP1 PUSH2 0x2D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1764 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E1 SWAP1 PUSH2 0x2E30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1841 SWAP2 SWAP1 PUSH2 0x27A2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x18A6 SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x18BA DUP4 PUSH1 0x0 DUP5 PUSH2 0x1C00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1948 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18E6 SWAP3 SWAP2 SWAP1 PUSH2 0x2E50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C05 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1A96 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A34 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C05 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B02 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B17 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1BFB JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B29 SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B7E SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BE3 SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1BF7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C00 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C67 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CCC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1CC7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C87 SWAP2 SWAP1 PUSH2 0x2F48 JUMP JUMPDEST PUSH2 0x1CC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CBD SWAP1 PUSH2 0x2FE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CDB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1CE4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D20 SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D32 DUP6 PUSH2 0x1DF8 JUMP JUMPDEST PUSH2 0x1D71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D68 SWAP1 PUSH2 0x30E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D9A SWAP2 SWAP1 PUSH2 0x314C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DD7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DEC DUP3 DUP3 DUP7 PUSH2 0x1E1B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E2B JUMPI DUP3 SWAP1 POP PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1E3E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E72 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE4 DUP3 PUSH2 0x1E82 JUMP JUMPDEST PUSH2 0x1EEE DUP2 DUP6 PUSH2 0x1E8D JUMP JUMPDEST SWAP4 POP PUSH2 0x1EFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x1F07 DUP2 PUSH2 0x1EC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F2C DUP2 DUP5 PUSH2 0x1ED9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F64 DUP3 PUSH2 0x1F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F74 DUP2 PUSH2 0x1F59 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F91 DUP2 PUSH2 0x1F6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAA DUP2 PUSH2 0x1F97 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC7 DUP2 PUSH2 0x1FA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE4 JUMPI PUSH2 0x1FE3 PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2003 DUP6 DUP3 DUP7 ADD PUSH2 0x1FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2022 DUP2 PUSH2 0x200D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x203D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2019 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x204C DUP2 PUSH2 0x1F97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2067 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2043 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2086 JUMPI PUSH2 0x2085 PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2094 DUP7 DUP3 DUP8 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20A5 DUP7 DUP3 DUP8 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20B6 DUP7 DUP3 DUP8 ADD PUSH2 0x1FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D7 DUP2 PUSH2 0x20C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20F4 DUP2 PUSH2 0x20CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2110 JUMPI PUSH2 0x210F PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x211E DUP5 DUP3 DUP6 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x213D JUMPI PUSH2 0x213C PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x214B DUP5 DUP3 DUP6 ADD PUSH2 0x1FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216A DUP2 PUSH2 0x2154 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2185 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B8 DUP2 PUSH2 0x218B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21E2 DUP2 PUSH2 0x1F59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2219 JUMPI PUSH2 0x2218 PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2227 DUP5 DUP3 DUP6 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2255 PUSH2 0x2250 PUSH2 0x224B DUP5 PUSH2 0x1F39 JUMP JUMPDEST PUSH2 0x2230 JUMP JUMPDEST PUSH2 0x1F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2267 DUP3 PUSH2 0x223A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2279 DUP3 PUSH2 0x225C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2289 DUP2 PUSH2 0x226E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CF DUP2 PUSH2 0x22AA JUMP JUMPDEST DUP2 EQ PUSH2 0x22DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22EC DUP2 PUSH2 0x22C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2308 JUMPI PUSH2 0x2307 PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2316 DUP5 DUP3 DUP6 ADD PUSH2 0x22DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2328 DUP2 PUSH2 0x20C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2343 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x231F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2352 DUP2 PUSH2 0x22AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2373 DUP2 PUSH2 0x2358 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x238E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x239B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2349 JUMP JUMPDEST PUSH2 0x23A8 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x236A JUMP JUMPDEST PUSH2 0x23B5 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x231F JUMP JUMPDEST PUSH2 0x23C2 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x231F JUMP JUMPDEST PUSH2 0x23CF PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x21AF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23F1 JUMPI PUSH2 0x23F0 PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23FF DUP6 DUP3 DUP7 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2410 DUP6 DUP3 DUP7 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2461 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2474 JUMPI PUSH2 0x2473 PUSH2 0x241A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B0 PUSH1 0x1F DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x24BB DUP3 PUSH2 0x247A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24DF DUP2 PUSH2 0x24A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A20696E76616C696420696E646578 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251C PUSH1 0x20 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2527 DUP3 PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x254B DUP2 PUSH2 0x250F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A20756E7374616B656420616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164790000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DD PUSH1 0x23 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x25E8 DUP3 PUSH2 0x2581 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x260C DUP2 PUSH2 0x25D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x264D DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x2658 DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2688 JUMPI PUSH2 0x2687 PUSH2 0x2613 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2699 DUP3 PUSH2 0x2358 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A4 DUP4 PUSH2 0x2358 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x26B2 DUP2 PUSH2 0x2358 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x26C4 JUMPI PUSH2 0x26C3 PUSH2 0x2613 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D6 DUP3 PUSH2 0x2358 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E1 DUP4 PUSH2 0x2358 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH6 0xFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26FF JUMPI PUSH2 0x26FE PUSH2 0x2613 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 DUP3 PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP PUSH2 0x271B DUP4 PUSH2 0x22AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2729 DUP2 PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x273B JUMPI PUSH2 0x273A PUSH2 0x2613 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x277C DUP3 PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP PUSH2 0x2787 DUP4 PUSH2 0x22AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2797 JUMPI PUSH2 0x2796 PUSH2 0x2742 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27AD DUP3 PUSH2 0x1F97 JUMP JUMPDEST SWAP2 POP PUSH2 0x27B8 DUP4 PUSH2 0x1F97 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x27D0 JUMPI PUSH2 0x27CF PUSH2 0x2613 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E1 DUP3 PUSH2 0x1F97 JUMP JUMPDEST SWAP2 POP PUSH2 0x27EC DUP4 PUSH2 0x1F97 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2804 JUMPI PUSH2 0x2803 PUSH2 0x2613 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2815 DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x2820 DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2850 JUMPI PUSH2 0x284F PUSH2 0x2613 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B2 PUSH1 0x25 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x28BD DUP3 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28E1 DUP2 PUSH2 0x28A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A2070656E616C74792042502065786365656473206C696D69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2944 PUSH1 0x21 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x294F DUP3 PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2973 DUP2 PUSH2 0x2937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A2074726561737572792069732074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6865207A65726F20616464726573730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D6 PUSH1 0x2F DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x29E1 DUP3 PUSH2 0x297A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A05 DUP2 PUSH2 0x29C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A68 PUSH1 0x26 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A73 DUP3 PUSH2 0x2A0C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A97 DUP2 PUSH2 0x2A5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFA PUSH1 0x24 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B05 DUP3 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B29 DUP2 PUSH2 0x2AED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8C PUSH1 0x22 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B97 DUP3 PUSH2 0x2B30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BBB DUP2 PUSH2 0x2B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF8 PUSH1 0x1D DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2C03 DUP3 PUSH2 0x2BC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C27 DUP2 PUSH2 0x2BEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A204E4F4E5F5452414E5346455241 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x424C450000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8A PUSH1 0x23 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2C95 DUP3 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CB9 DUP2 PUSH2 0x2C7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF6 PUSH1 0x20 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2D01 DUP3 PUSH2 0x2CC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D25 DUP2 PUSH2 0x2CE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D88 PUSH1 0x21 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2D93 DUP3 PUSH2 0x2D2C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DB7 DUP2 PUSH2 0x2D7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1A PUSH1 0x22 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2E25 DUP3 PUSH2 0x2DBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E49 DUP2 PUSH2 0x2E0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E65 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x2E72 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2043 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E8E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x2E9B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x2EA8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2043 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE6 PUSH1 0x1F DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF1 DUP3 PUSH2 0x2EB0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F15 DUP2 PUSH2 0x2ED9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F25 DUP2 PUSH2 0x200D JUMP JUMPDEST DUP2 EQ PUSH2 0x2F30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F42 DUP2 PUSH2 0x2F1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F5E JUMPI PUSH2 0x2F5D PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F6C DUP5 DUP3 DUP6 ADD PUSH2 0x2F33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD1 PUSH1 0x2A DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2FDC DUP3 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3000 DUP2 PUSH2 0x2FC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3063 PUSH1 0x26 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x306E DUP3 PUSH2 0x3007 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3092 DUP2 PUSH2 0x3056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30CF PUSH1 0x1D DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x30DA DUP3 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30FE DUP2 PUSH2 0x30C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3126 DUP3 PUSH2 0x3105 JUMP JUMPDEST PUSH2 0x3130 DUP2 DUP6 PUSH2 0x3110 JUMP JUMPDEST SWAP4 POP PUSH2 0x3140 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3158 DUP3 DUP5 PUSH2 0x311B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A NOT PUSH12 0xABE78C8359D91D83D46570BF 0x24 CODECOPY 0x5C SWAP2 0xC3 0xC3 LT GAS PUSH13 0xCF53AD990DE63E7164736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"316:4464:20:-:0;;;1413:566;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:5;2044;:13;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;:::i;:::-;;1978:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1701:1:2;1806:7;:22;;;;1683:1:20::3;1649:36;;1657:13;1649:36;;::::0;1641:101:::3;;;;;;;;;;;;:::i;:::-;;;;;;;;;1781:1;1760:23;;:9;:23;;::::0;1752:83:::3;;;;;;;;;;;;:::i;:::-;;;;;;;;;1861:13;1846:12;;:28;;;;;;;;;;;;;;;;;;1898:12;1884:11;;:26;;;;;;;;;;;;;;;;;;1932:10;1920:9;;:22;;;;;;;;;;;;;;;;;;1963:9;1952:8;;:20;;;;;;;;;;;;;;;;;;1413:566:::0;;;;316:4464;;640:96:12;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:21:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:89::-;1053:7;1093:6;1086:5;1082:18;1071:29;;1017:89;;;:::o;1112:120::-;1184:23;1201:5;1184:23;:::i;:::-;1177:5;1174:34;1164:62;;1222:1;1219;1212:12;1164:62;1112:120;:::o;1238:141::-;1294:5;1325:6;1319:13;1310:22;;1341:32;1367:5;1341:32;:::i;:::-;1238:141;;;;:::o;1385:122::-;1458:24;1476:5;1458:24;:::i;:::-;1451:5;1448:35;1438:63;;1497:1;1494;1487:12;1438:63;1385:122;:::o;1513:143::-;1570:5;1601:6;1595:13;1586:22;;1617:33;1644:5;1617:33;:::i;:::-;1513:143;;;;:::o;1662:844::-;1771:6;1779;1787;1795;1844:3;1832:9;1823:7;1819:23;1815:33;1812:120;;;1851:79;;:::i;:::-;1812:120;1971:1;1996:78;2066:7;2057:6;2046:9;2042:22;1996:78;:::i;:::-;1986:88;;1942:142;2123:2;2149:63;2204:7;2195:6;2184:9;2180:22;2149:63;:::i;:::-;2139:73;;2094:128;2261:2;2287:63;2342:7;2333:6;2322:9;2318:22;2287:63;:::i;:::-;2277:73;;2232:128;2399:2;2425:64;2481:7;2472:6;2461:9;2457:22;2425:64;:::i;:::-;2415:74;;2370:129;1662:844;;;;;;;:::o;2512:99::-;2564:6;2598:5;2592:12;2582:22;;2512:99;;;:::o;2617:180::-;2665:77;2662:1;2655:88;2762:4;2759:1;2752:15;2786:4;2783:1;2776:15;2803:180;2851:77;2848:1;2841:88;2948:4;2945:1;2938:15;2972:4;2969:1;2962:15;2989:320;3033:6;3070:1;3064:4;3060:12;3050:22;;3117:1;3111:4;3107:12;3138:18;3128:81;;3194:4;3186:6;3182:17;3172:27;;3128:81;3256:2;3248:6;3245:14;3225:18;3222:38;3219:84;;3275:18;;:::i;:::-;3219:84;3040:269;2989:320;;;:::o;3315:141::-;3364:4;3387:3;3379:11;;3410:3;3407:1;3400:14;3444:4;3441:1;3431:18;3423:26;;3315:141;;;:::o;3462:93::-;3499:6;3546:2;3541;3534:5;3530:14;3526:23;3516:33;;3462:93;;;:::o;3561:107::-;3605:8;3655:5;3649:4;3645:16;3624:37;;3561:107;;;;:::o;3674:393::-;3743:6;3793:1;3781:10;3777:18;3816:97;3846:66;3835:9;3816:97;:::i;:::-;3934:39;3964:8;3953:9;3934:39;:::i;:::-;3922:51;;4006:4;4002:9;3995:5;3991:21;3982:30;;4055:4;4045:8;4041:19;4034:5;4031:30;4021:40;;3750:317;;3674:393;;;;;:::o;4073:77::-;4110:7;4139:5;4128:16;;4073:77;;;:::o;4156:60::-;4184:3;4205:5;4198:12;;4156:60;;;:::o;4222:142::-;4272:9;4305:53;4323:34;4332:24;4350:5;4332:24;:::i;:::-;4323:34;:::i;:::-;4305:53;:::i;:::-;4292:66;;4222:142;;;:::o;4370:75::-;4413:3;4434:5;4427:12;;4370:75;;;:::o;4451:269::-;4561:39;4592:7;4561:39;:::i;:::-;4622:91;4671:41;4695:16;4671:41;:::i;:::-;4663:6;4656:4;4650:11;4622:91;:::i;:::-;4616:4;4609:105;4527:193;4451:269;;;:::o;4726:73::-;4771:3;4726:73;:::o;4805:189::-;4882:32;;:::i;:::-;4923:65;4981:6;4973;4967:4;4923:65;:::i;:::-;4858:136;4805:189;;:::o;5000:186::-;5060:120;5077:3;5070:5;5067:14;5060:120;;;5131:39;5168:1;5161:5;5131:39;:::i;:::-;5104:1;5097:5;5093:13;5084:22;;5060:120;;;5000:186;;:::o;5192:543::-;5293:2;5288:3;5285:11;5282:446;;;5327:38;5359:5;5327:38;:::i;:::-;5411:29;5429:10;5411:29;:::i;:::-;5401:8;5397:44;5594:2;5582:10;5579:18;5576:49;;;5615:8;5600:23;;5576:49;5638:80;5694:22;5712:3;5694:22;:::i;:::-;5684:8;5680:37;5667:11;5638:80;:::i;:::-;5297:431;;5282:446;5192:543;;;:::o;5741:117::-;5795:8;5845:5;5839:4;5835:16;5814:37;;5741:117;;;;:::o;5864:169::-;5908:6;5941:51;5989:1;5985:6;5977:5;5974:1;5970:13;5941:51;:::i;:::-;5937:56;6022:4;6016;6012:15;6002:25;;5915:118;5864:169;;;;:::o;6038:295::-;6114:4;6260:29;6285:3;6279:4;6260:29;:::i;:::-;6252:37;;6322:3;6319:1;6315:11;6309:4;6306:21;6298:29;;6038:295;;;;:::o;6338:1395::-;6455:37;6488:3;6455:37;:::i;:::-;6557:18;6549:6;6546:30;6543:56;;;6579:18;;:::i;:::-;6543:56;6623:38;6655:4;6649:11;6623:38;:::i;:::-;6708:67;6768:6;6760;6754:4;6708:67;:::i;:::-;6802:1;6826:4;6813:17;;6858:2;6850:6;6847:14;6875:1;6870:618;;;;7532:1;7549:6;7546:77;;;7598:9;7593:3;7589:19;7583:26;7574:35;;7546:77;7649:67;7709:6;7702:5;7649:67;:::i;:::-;7643:4;7636:81;7505:222;6840:887;;6870:618;6922:4;6918:9;6910:6;6906:22;6956:37;6988:4;6956:37;:::i;:::-;7015:1;7029:208;7043:7;7040:1;7037:14;7029:208;;;7122:9;7117:3;7113:19;7107:26;7099:6;7092:42;7173:1;7165:6;7161:14;7151:24;;7220:2;7209:9;7205:18;7192:31;;7066:4;7063:1;7059:12;7054:17;;7029:208;;;7265:6;7256:7;7253:19;7250:179;;;7323:9;7318:3;7314:19;7308:26;7366:48;7408:4;7400:6;7396:17;7385:9;7366:48;:::i;:::-;7358:6;7351:64;7273:156;7250:179;7475:1;7471;7463:6;7459:14;7455:22;7449:4;7442:36;6877:611;;;6840:887;;6430:1303;;;6338:1395;;:::o;7739:169::-;7823:11;7857:6;7852:3;7845:19;7897:4;7892:3;7888:14;7873:29;;7739:169;;;;:::o;7914:239::-;8054:34;8050:1;8042:6;8038:14;8031:58;8123:22;8118:2;8110:6;8106:15;8099:47;7914:239;:::o;8159:366::-;8301:3;8322:67;8386:2;8381:3;8322:67;:::i;:::-;8315:74;;8398:93;8487:3;8398:93;:::i;:::-;8516:2;8511:3;8507:12;8500:19;;8159:366;;;:::o;8531:419::-;8697:4;8735:2;8724:9;8720:18;8712:26;;8784:9;8778:4;8774:20;8770:1;8759:9;8755:17;8748:47;8812:131;8938:4;8812:131;:::i;:::-;8804:139;;8531:419;;;:::o;8956:234::-;9096:34;9092:1;9084:6;9080:14;9073:58;9165:17;9160:2;9152:6;9148:15;9141:42;8956:234;:::o;9196:366::-;9338:3;9359:67;9423:2;9418:3;9359:67;:::i;:::-;9352:74;;9435:93;9524:3;9435:93;:::i;:::-;9553:2;9548:3;9544:12;9537:19;;9196:366;;;:::o;9568:419::-;9734:4;9772:2;9761:9;9757:18;9749:26;;9821:9;9815:4;9811:20;9807:1;9796:9;9792:17;9785:47;9849:131;9975:4;9849:131;:::i;:::-;9841:139;;9568:419;;;:::o;316:4464:20:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_815":{"entryPoint":7168,"id":815,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":5083,"id":750,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_804":{"entryPoint":7163,"id":804,"parameterSlots":3,"returnSlots":0},"@_burn_705":{"entryPoint":5865,"id":705,"parameterSlots":2,"returnSlots":0},"@_callOptionalReturn_2100":{"entryPoint":7173,"id":2100,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":5739,"id":54,"parameterSlots":0,"returnSlots":0},"@_mint_633":{"entryPoint":6812,"id":633,"parameterSlots":2,"returnSlots":0},"@_msgSender_2408":{"entryPoint":5075,"id":2408,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_793":{"entryPoint":5540,"id":793,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":6477,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_6016":{"entryPoint":5680,"id":6016,"parameterSlots":3,"returnSlots":0},"@allowance_372":{"entryPoint":4547,"id":372,"parameterSlots":2,"returnSlots":1},"@approve_397":{"entryPoint":1389,"id":397,"parameterSlots":2,"returnSlots":1},"@balanceOf_329":{"entryPoint":2763,"id":329,"parameterSlots":1,"returnSlots":1},"@decimals_305":{"entryPoint":2619,"id":305,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_500":{"entryPoint":3993,"id":500,"parameterSlots":2,"returnSlots":1},"@functionCallWithValue_2260":{"entryPoint":7396,"id":2260,"parameterSlots":4,"returnSlots":1},"@functionCall_2190":{"entryPoint":7372,"id":2190,"parameterSlots":3,"returnSlots":1},"@getCurrentTime_6025":{"entryPoint":6335,"id":6025,"parameterSlots":0,"returnSlots":1},"@increaseAllowance_459":{"entryPoint":2628,"id":459,"parameterSlots":2,"returnSlots":1},"@isContract_2119":{"entryPoint":7672,"id":2119,"parameterSlots":1,"returnSlots":1},"@name_285":{"entryPoint":1243,"id":285,"parameterSlots":0,"returnSlots":1},"@owner_40":{"entryPoint":3805,"id":40,"parameterSlots":0,"returnSlots":1},"@penaltyBP_5696":{"entryPoint":4112,"id":5696,"parameterSlots":0,"returnSlots":0},"@penaltyDays_5693":{"entryPoint":4682,"id":5693,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_68":{"entryPoint":2835,"id":68,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1878":{"entryPoint":6675,"id":1878,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1852":{"entryPoint":6343,"id":1852,"parameterSlots":3,"returnSlots":0},"@setPenaltyBP_5973":{"entryPoint":4167,"id":5973,"parameterSlots":1,"returnSlots":0},"@setPenaltyDays_5949":{"entryPoint":1481,"id":5949,"parameterSlots":1,"returnSlots":0},"@setTreasury_6000":{"entryPoint":4702,"id":6000,"parameterSlots":1,"returnSlots":0},"@stake_5834":{"entryPoint":2893,"id":5834,"parameterSlots":1,"returnSlots":0},"@stakers_5690":{"entryPoint":4335,"id":5690,"parameterSlots":0,"returnSlots":0},"@stakingToken_5683":{"entryPoint":2855,"id":5683,"parameterSlots":0,"returnSlots":0},"@symbol_295":{"entryPoint":3847,"id":295,"parameterSlots":0,"returnSlots":1},"@totalShares_5702":{"entryPoint":2683,"id":5702,"parameterSlots":0,"returnSlots":0},"@totalSupply_315":{"entryPoint":1424,"id":315,"parameterSlots":0,"returnSlots":1},"@transferFrom_430":{"entryPoint":1434,"id":430,"parameterSlots":3,"returnSlots":1},"@transferOwnership_91":{"entryPoint":4944,"id":91,"parameterSlots":1,"returnSlots":0},"@transfer_354":{"entryPoint":4132,"id":354,"parameterSlots":2,"returnSlots":1},"@treasury_5699":{"entryPoint":2725,"id":5699,"parameterSlots":0,"returnSlots":0},"@unstake_5936":{"entryPoint":1521,"id":5936,"parameterSlots":1,"returnSlots":0},"@verifyCallResult_2395":{"entryPoint":7707,"id":2395,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8066,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":12083,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint128":{"entryPoint":8925,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":8421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9178,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8301,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8141,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":12104,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint128":{"entryPoint":8946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16":{"entryPoint":8442,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8665,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8217,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12571,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$894_to_t_address_fromStack":{"entryPoint":8832,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7897,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack":{"entryPoint":11789,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":10843,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":11135,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336_to_t_string_memory_ptr_fromStack":{"entryPoint":9680,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":11243,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7_to_t_string_memory_ptr_fromStack":{"entryPoint":10551,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":12374,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":11497,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack":{"entryPoint":10697,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79_to_t_string_memory_ptr_fromStack":{"entryPoint":9487,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f_to_t_string_memory_ptr_fromStack":{"entryPoint":11389,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":11643,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":10989,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":12482,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":12228,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":9379,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":10405,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":11993,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint128_to_t_uint128_fromStack":{"entryPoint":9033,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":8991,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint192_to_t_uint192_fromStack":{"entryPoint":8623,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8259,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":9066,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8545,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":11897,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":11856,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8232,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__to_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__fromStack_reversed":{"entryPoint":9081,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$894__to_t_address__fromStack_reversed":{"entryPoint":8847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7954,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11824,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10878,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11170,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9715,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11278,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10586,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12409,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11532,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10732,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9522,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11678,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11024,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12517,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12263,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9414,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10440,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12028,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":9006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint192__to_t_uint192__fromStack_reversed":{"entryPoint":8638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8274,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":8560,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12549,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7810,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12560,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7821,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint192":{"entryPoint":10250,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10198,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint48":{"entryPoint":9931,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint128":{"entryPoint":10097,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint128":{"entryPoint":9989,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint48":{"entryPoint":9870,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint192":{"entryPoint":9794,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10146,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8025,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8205,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint128":{"entryPoint":8874,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":8384,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7993,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint192":{"entryPoint":8587,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8087,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":9048,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8532,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$894_to_t_address":{"entryPoint":8814,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":8796,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":8762,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7838,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9289,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":8752,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9747,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10050,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9242,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9554,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7988,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7880,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":11710,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":10764,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":11056,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336":{"entryPoint":9601,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":11202,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7":{"entryPoint":10472,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":12295,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":11456,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633":{"entryPoint":10618,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79":{"entryPoint":9446,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f":{"entryPoint":11310,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":11564,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":10910,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":12441,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":12149,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":9338,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":10326,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":11952,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8043,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":12060,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint128":{"entryPoint":8902,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":8398,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8097,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:34114:21","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:21","statements":[{"nodeType":"YulAssignment","src":"77:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:21"},"nodeType":"YulFunctionCall","src":"87:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:21","type":""}],"src":"7:99:21"},{"body":{"nodeType":"YulBlock","src":"208:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:21"},"nodeType":"YulFunctionCall","src":"218:19:21"},"nodeType":"YulExpressionStatement","src":"218:19:21"},{"nodeType":"YulAssignment","src":"246:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:21"},"nodeType":"YulFunctionCall","src":"261:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:21","type":""}],"src":"112:169:21"},{"body":{"nodeType":"YulBlock","src":"349:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:21"},"nodeType":"YulFunctionCall","src":"449:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:21"},"nodeType":"YulFunctionCall","src":"468:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:21"},"nodeType":"YulFunctionCall","src":"462:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:21"},"nodeType":"YulFunctionCall","src":"442:39:21"},"nodeType":"YulExpressionStatement","src":"442:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:21"},"nodeType":"YulFunctionCall","src":"386:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:21","statements":[{"nodeType":"YulAssignment","src":"402:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:21"},"nodeType":"YulFunctionCall","src":"407:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:21","statements":[]},"src":"378:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:21"},"nodeType":"YulFunctionCall","src":"507:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:21"},"nodeType":"YulFunctionCall","src":"500:27:21"},"nodeType":"YulExpressionStatement","src":"500:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:21","type":""}],"src":"287:246:21"},{"body":{"nodeType":"YulBlock","src":"587:54:21","statements":[{"nodeType":"YulAssignment","src":"597:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:21"},"nodeType":"YulFunctionCall","src":"611:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:21"},"nodeType":"YulFunctionCall","src":"627:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:21"},"nodeType":"YulFunctionCall","src":"607:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:21","type":""}],"src":"539:102:21"},{"body":{"nodeType":"YulBlock","src":"739:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:21"},"nodeType":"YulFunctionCall","src":"763:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:21","type":""}]},{"nodeType":"YulAssignment","src":"811:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:21"},"nodeType":"YulFunctionCall","src":"818:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:21"},"nodeType":"YulFunctionCall","src":"933:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:21"},"nodeType":"YulFunctionCall","src":"898:65:21"},"nodeType":"YulExpressionStatement","src":"898:65:21"},{"nodeType":"YulAssignment","src":"972:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:21"},"nodeType":"YulFunctionCall","src":"988:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:21"},"nodeType":"YulFunctionCall","src":"979:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:21","type":""}],"src":"647:377:21"},{"body":{"nodeType":"YulBlock","src":"1148:195:21","statements":[{"nodeType":"YulAssignment","src":"1158:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:21"},"nodeType":"YulFunctionCall","src":"1166:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:21"},"nodeType":"YulFunctionCall","src":"1201:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:21"},"nodeType":"YulFunctionCall","src":"1220:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:21"},"nodeType":"YulFunctionCall","src":"1194:47:21"},"nodeType":"YulExpressionStatement","src":"1194:47:21"},{"nodeType":"YulAssignment","src":"1250:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:21"},"nodeType":"YulFunctionCall","src":"1258:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:21","type":""}],"src":"1030:313:21"},{"body":{"nodeType":"YulBlock","src":"1389:35:21","statements":[{"nodeType":"YulAssignment","src":"1399:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:21"},"nodeType":"YulFunctionCall","src":"1409:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:21","type":""}],"src":"1349:75:21"},{"body":{"nodeType":"YulBlock","src":"1519:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:21"},"nodeType":"YulFunctionCall","src":"1529:12:21"},"nodeType":"YulExpressionStatement","src":"1529:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:21"},{"body":{"nodeType":"YulBlock","src":"1642:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:21"},"nodeType":"YulFunctionCall","src":"1652:12:21"},"nodeType":"YulExpressionStatement","src":"1652:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:21"},{"body":{"nodeType":"YulBlock","src":"1721:81:21","statements":[{"nodeType":"YulAssignment","src":"1731:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:21"},"nodeType":"YulFunctionCall","src":"1742:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:21","type":""}],"src":"1676:126:21"},{"body":{"nodeType":"YulBlock","src":"1853:51:21","statements":[{"nodeType":"YulAssignment","src":"1863:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:21"},"nodeType":"YulFunctionCall","src":"1874:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:21","type":""}],"src":"1808:96:21"},{"body":{"nodeType":"YulBlock","src":"1953:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:21"},"nodeType":"YulFunctionCall","src":"2012:12:21"},"nodeType":"YulExpressionStatement","src":"2012:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:21"},"nodeType":"YulFunctionCall","src":"1983:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:21"},"nodeType":"YulFunctionCall","src":"1973:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:21"},"nodeType":"YulFunctionCall","src":"1966:43:21"},"nodeType":"YulIf","src":"1963:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:21","type":""}],"src":"1910:122:21"},{"body":{"nodeType":"YulBlock","src":"2090:87:21","statements":[{"nodeType":"YulAssignment","src":"2100:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:21"},"nodeType":"YulFunctionCall","src":"2109:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:21"},"nodeType":"YulFunctionCall","src":"2138:33:21"},"nodeType":"YulExpressionStatement","src":"2138:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:21","type":""}],"src":"2038:139:21"},{"body":{"nodeType":"YulBlock","src":"2228:32:21","statements":[{"nodeType":"YulAssignment","src":"2238:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:21","type":""}],"src":"2183:77:21"},{"body":{"nodeType":"YulBlock","src":"2309:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:21"},"nodeType":"YulFunctionCall","src":"2368:12:21"},"nodeType":"YulExpressionStatement","src":"2368:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:21"},"nodeType":"YulFunctionCall","src":"2339:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:21"},"nodeType":"YulFunctionCall","src":"2329:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:21"},"nodeType":"YulFunctionCall","src":"2322:43:21"},"nodeType":"YulIf","src":"2319:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:21","type":""}],"src":"2266:122:21"},{"body":{"nodeType":"YulBlock","src":"2446:87:21","statements":[{"nodeType":"YulAssignment","src":"2456:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:21"},"nodeType":"YulFunctionCall","src":"2465:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:21"},"nodeType":"YulFunctionCall","src":"2494:33:21"},"nodeType":"YulExpressionStatement","src":"2494:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:21","type":""}],"src":"2394:139:21"},{"body":{"nodeType":"YulBlock","src":"2622:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:21"},"nodeType":"YulFunctionCall","src":"2670:79:21"},"nodeType":"YulExpressionStatement","src":"2670:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:21"},"nodeType":"YulFunctionCall","src":"2639:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:21"},"nodeType":"YulFunctionCall","src":"2635:32:21"},"nodeType":"YulIf","src":"2632:119:21"},{"nodeType":"YulBlock","src":"2761:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:21"},"nodeType":"YulFunctionCall","src":"2836:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:21"},"nodeType":"YulFunctionCall","src":"2815:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:21"}]}]},{"nodeType":"YulBlock","src":"2888:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:21"},"nodeType":"YulFunctionCall","src":"2964:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:21"},"nodeType":"YulFunctionCall","src":"2943:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:21","type":""}],"src":"2539:474:21"},{"body":{"nodeType":"YulBlock","src":"3061:48:21","statements":[{"nodeType":"YulAssignment","src":"3071:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:21"},"nodeType":"YulFunctionCall","src":"3089:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:21"},"nodeType":"YulFunctionCall","src":"3082:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:21","type":""}],"src":"3019:90:21"},{"body":{"nodeType":"YulBlock","src":"3174:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:21"},"nodeType":"YulFunctionCall","src":"3196:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:21"},"nodeType":"YulFunctionCall","src":"3184:34:21"},"nodeType":"YulExpressionStatement","src":"3184:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:21","type":""}],"src":"3115:109:21"},{"body":{"nodeType":"YulBlock","src":"3322:118:21","statements":[{"nodeType":"YulAssignment","src":"3332:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:21"},"nodeType":"YulFunctionCall","src":"3340:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:21"},"nodeType":"YulFunctionCall","src":"3415:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:21"},"nodeType":"YulFunctionCall","src":"3368:65:21"},"nodeType":"YulExpressionStatement","src":"3368:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:21","type":""}],"src":"3230:210:21"},{"body":{"nodeType":"YulBlock","src":"3511:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:21"},"nodeType":"YulFunctionCall","src":"3533:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:21"},"nodeType":"YulFunctionCall","src":"3521:37:21"},"nodeType":"YulExpressionStatement","src":"3521:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:21","type":""}],"src":"3446:118:21"},{"body":{"nodeType":"YulBlock","src":"3668:124:21","statements":[{"nodeType":"YulAssignment","src":"3678:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:21"},"nodeType":"YulFunctionCall","src":"3686:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:21"},"nodeType":"YulFunctionCall","src":"3767:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:21"},"nodeType":"YulFunctionCall","src":"3714:71:21"},"nodeType":"YulExpressionStatement","src":"3714:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:21","type":""}],"src":"3570:222:21"},{"body":{"nodeType":"YulBlock","src":"3898:519:21","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:21"},"nodeType":"YulFunctionCall","src":"3946:79:21"},"nodeType":"YulExpressionStatement","src":"3946:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:21"},"nodeType":"YulFunctionCall","src":"3915:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:21"},"nodeType":"YulFunctionCall","src":"3911:32:21"},"nodeType":"YulIf","src":"3908:119:21"},{"nodeType":"YulBlock","src":"4037:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:21"},"nodeType":"YulFunctionCall","src":"4112:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:21"},"nodeType":"YulFunctionCall","src":"4091:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:21"}]}]},{"nodeType":"YulBlock","src":"4164:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:21"},"nodeType":"YulFunctionCall","src":"4240:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:21"},"nodeType":"YulFunctionCall","src":"4219:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:21"}]}]},{"nodeType":"YulBlock","src":"4292:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:21"},"nodeType":"YulFunctionCall","src":"4368:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:21"},"nodeType":"YulFunctionCall","src":"4347:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:21","type":""}],"src":"3798:619:21"},{"body":{"nodeType":"YulBlock","src":"4467:45:21","statements":[{"nodeType":"YulAssignment","src":"4477:29:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4492:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4499:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4488:3:21"},"nodeType":"YulFunctionCall","src":"4488:18:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4477:7:21"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4449:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4459:7:21","type":""}],"src":"4423:89:21"},{"body":{"nodeType":"YulBlock","src":"4560:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"4616:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4625:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4628:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4618:6:21"},"nodeType":"YulFunctionCall","src":"4618:12:21"},"nodeType":"YulExpressionStatement","src":"4618:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4583:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4607:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"4590:16:21"},"nodeType":"YulFunctionCall","src":"4590:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4580:2:21"},"nodeType":"YulFunctionCall","src":"4580:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4573:6:21"},"nodeType":"YulFunctionCall","src":"4573:42:21"},"nodeType":"YulIf","src":"4570:62:21"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4553:5:21","type":""}],"src":"4518:120:21"},{"body":{"nodeType":"YulBlock","src":"4695:86:21","statements":[{"nodeType":"YulAssignment","src":"4705:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4727:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4714:12:21"},"nodeType":"YulFunctionCall","src":"4714:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4705:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4769:5:21"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"4743:25:21"},"nodeType":"YulFunctionCall","src":"4743:32:21"},"nodeType":"YulExpressionStatement","src":"4743:32:21"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4673:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"4681:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4689:5:21","type":""}],"src":"4644:137:21"},{"body":{"nodeType":"YulBlock","src":"4852:262:21","statements":[{"body":{"nodeType":"YulBlock","src":"4898:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4900:77:21"},"nodeType":"YulFunctionCall","src":"4900:79:21"},"nodeType":"YulExpressionStatement","src":"4900:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4873:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4882:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4869:3:21"},"nodeType":"YulFunctionCall","src":"4869:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4894:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4865:3:21"},"nodeType":"YulFunctionCall","src":"4865:32:21"},"nodeType":"YulIf","src":"4862:119:21"},{"nodeType":"YulBlock","src":"4991:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5006:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5020:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5010:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5035:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5069:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5080:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5065:3:21"},"nodeType":"YulFunctionCall","src":"5065:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5089:7:21"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"5045:19:21"},"nodeType":"YulFunctionCall","src":"5045:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5035:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4822:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4833:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4845:6:21","type":""}],"src":"4787:327:21"},{"body":{"nodeType":"YulBlock","src":"5186:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"5232:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5234:77:21"},"nodeType":"YulFunctionCall","src":"5234:79:21"},"nodeType":"YulExpressionStatement","src":"5234:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5207:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5216:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5203:3:21"},"nodeType":"YulFunctionCall","src":"5203:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5228:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5199:3:21"},"nodeType":"YulFunctionCall","src":"5199:32:21"},"nodeType":"YulIf","src":"5196:119:21"},{"nodeType":"YulBlock","src":"5325:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5340:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5354:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5344:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5369:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5404:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5415:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5400:3:21"},"nodeType":"YulFunctionCall","src":"5400:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5424:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5379:20:21"},"nodeType":"YulFunctionCall","src":"5379:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5369:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5156:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5167:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5179:6:21","type":""}],"src":"5120:329:21"},{"body":{"nodeType":"YulBlock","src":"5498:43:21","statements":[{"nodeType":"YulAssignment","src":"5508:27:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5523:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5530:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5519:3:21"},"nodeType":"YulFunctionCall","src":"5519:16:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5508:7:21"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5480:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5490:7:21","type":""}],"src":"5455:86:21"},{"body":{"nodeType":"YulBlock","src":"5608:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5625:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5646:5:21"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5630:15:21"},"nodeType":"YulFunctionCall","src":"5630:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5618:6:21"},"nodeType":"YulFunctionCall","src":"5618:35:21"},"nodeType":"YulExpressionStatement","src":"5618:35:21"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5596:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5603:3:21","type":""}],"src":"5547:112:21"},{"body":{"nodeType":"YulBlock","src":"5759:120:21","statements":[{"nodeType":"YulAssignment","src":"5769:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5781:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5792:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5777:3:21"},"nodeType":"YulFunctionCall","src":"5777:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5769:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5845:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5858:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5869:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5854:3:21"},"nodeType":"YulFunctionCall","src":"5854:17:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"5805:39:21"},"nodeType":"YulFunctionCall","src":"5805:67:21"},"nodeType":"YulExpressionStatement","src":"5805:67:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5731:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5743:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5754:4:21","type":""}],"src":"5665:214:21"},{"body":{"nodeType":"YulBlock","src":"5930:89:21","statements":[{"nodeType":"YulAssignment","src":"5940:73:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5962:50:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5951:3:21"},"nodeType":"YulFunctionCall","src":"5951:62:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5940:7:21"}]}]},"name":"cleanup_t_uint192","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5912:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5922:7:21","type":""}],"src":"5885:134:21"},{"body":{"nodeType":"YulBlock","src":"6090:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6107:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6130:5:21"}],"functionName":{"name":"cleanup_t_uint192","nodeType":"YulIdentifier","src":"6112:17:21"},"nodeType":"YulFunctionCall","src":"6112:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6100:6:21"},"nodeType":"YulFunctionCall","src":"6100:37:21"},"nodeType":"YulExpressionStatement","src":"6100:37:21"}]},"name":"abi_encode_t_uint192_to_t_uint192_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6078:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6085:3:21","type":""}],"src":"6025:118:21"},{"body":{"nodeType":"YulBlock","src":"6247:124:21","statements":[{"nodeType":"YulAssignment","src":"6257:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6269:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6280:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6265:3:21"},"nodeType":"YulFunctionCall","src":"6265:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6257:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6337:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6350:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6361:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6346:3:21"},"nodeType":"YulFunctionCall","src":"6346:17:21"}],"functionName":{"name":"abi_encode_t_uint192_to_t_uint192_fromStack","nodeType":"YulIdentifier","src":"6293:43:21"},"nodeType":"YulFunctionCall","src":"6293:71:21"},"nodeType":"YulExpressionStatement","src":"6293:71:21"}]},"name":"abi_encode_tuple_t_uint192__to_t_uint192__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6219:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6231:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6242:4:21","type":""}],"src":"6149:222:21"},{"body":{"nodeType":"YulBlock","src":"6442:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6459:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6482:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6464:17:21"},"nodeType":"YulFunctionCall","src":"6464:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6452:6:21"},"nodeType":"YulFunctionCall","src":"6452:37:21"},"nodeType":"YulExpressionStatement","src":"6452:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6430:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6437:3:21","type":""}],"src":"6377:118:21"},{"body":{"nodeType":"YulBlock","src":"6599:124:21","statements":[{"nodeType":"YulAssignment","src":"6609:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6632:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6617:3:21"},"nodeType":"YulFunctionCall","src":"6617:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6609:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6689:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6702:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6713:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6698:3:21"},"nodeType":"YulFunctionCall","src":"6698:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6645:43:21"},"nodeType":"YulFunctionCall","src":"6645:71:21"},"nodeType":"YulExpressionStatement","src":"6645:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6571:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6583:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6594:4:21","type":""}],"src":"6501:222:21"},{"body":{"nodeType":"YulBlock","src":"6795:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"6841:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6843:77:21"},"nodeType":"YulFunctionCall","src":"6843:79:21"},"nodeType":"YulExpressionStatement","src":"6843:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6816:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6825:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6812:3:21"},"nodeType":"YulFunctionCall","src":"6812:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6837:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6808:3:21"},"nodeType":"YulFunctionCall","src":"6808:32:21"},"nodeType":"YulIf","src":"6805:119:21"},{"nodeType":"YulBlock","src":"6934:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6949:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6963:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6953:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6978:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7013:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7024:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7009:3:21"},"nodeType":"YulFunctionCall","src":"7009:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7033:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6988:20:21"},"nodeType":"YulFunctionCall","src":"6988:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6978:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6765:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6776:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6788:6:21","type":""}],"src":"6729:329:21"},{"body":{"nodeType":"YulBlock","src":"7096:28:21","statements":[{"nodeType":"YulAssignment","src":"7106:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"7113:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7106:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7082:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7092:3:21","type":""}],"src":"7064:60:21"},{"body":{"nodeType":"YulBlock","src":"7190:82:21","statements":[{"nodeType":"YulAssignment","src":"7200:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7258:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7240:17:21"},"nodeType":"YulFunctionCall","src":"7240:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"7231:8:21"},"nodeType":"YulFunctionCall","src":"7231:34:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7213:17:21"},"nodeType":"YulFunctionCall","src":"7213:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7200:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7170:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7180:9:21","type":""}],"src":"7130:142:21"},{"body":{"nodeType":"YulBlock","src":"7338:66:21","statements":[{"nodeType":"YulAssignment","src":"7348:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7392:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"7361:30:21"},"nodeType":"YulFunctionCall","src":"7361:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7348:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7318:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7328:9:21","type":""}],"src":"7278:126:21"},{"body":{"nodeType":"YulBlock","src":"7484:66:21","statements":[{"nodeType":"YulAssignment","src":"7494:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7538:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"7507:30:21"},"nodeType":"YulFunctionCall","src":"7507:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7494:9:21"}]}]},"name":"convert_t_contract$_IERC20_$894_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7464:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7474:9:21","type":""}],"src":"7410:140:21"},{"body":{"nodeType":"YulBlock","src":"7635:80:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7652:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7702:5:21"}],"functionName":{"name":"convert_t_contract$_IERC20_$894_to_t_address","nodeType":"YulIdentifier","src":"7657:44:21"},"nodeType":"YulFunctionCall","src":"7657:51:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7645:6:21"},"nodeType":"YulFunctionCall","src":"7645:64:21"},"nodeType":"YulExpressionStatement","src":"7645:64:21"}]},"name":"abi_encode_t_contract$_IERC20_$894_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7623:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7630:3:21","type":""}],"src":"7556:159:21"},{"body":{"nodeType":"YulBlock","src":"7833:138:21","statements":[{"nodeType":"YulAssignment","src":"7843:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7855:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7866:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7851:3:21"},"nodeType":"YulFunctionCall","src":"7851:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7843:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7937:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7950:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7961:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7946:3:21"},"nodeType":"YulFunctionCall","src":"7946:17:21"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$894_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7879:57:21"},"nodeType":"YulFunctionCall","src":"7879:85:21"},"nodeType":"YulExpressionStatement","src":"7879:85:21"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$894__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7805:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7817:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7828:4:21","type":""}],"src":"7721:250:21"},{"body":{"nodeType":"YulBlock","src":"8022:73:21","statements":[{"nodeType":"YulAssignment","src":"8032:57:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8047:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8054:34:21","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8043:3:21"},"nodeType":"YulFunctionCall","src":"8043:46:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8032:7:21"}]}]},"name":"cleanup_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8004:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8014:7:21","type":""}],"src":"7977:118:21"},{"body":{"nodeType":"YulBlock","src":"8144:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"8201:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8210:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8213:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8203:6:21"},"nodeType":"YulFunctionCall","src":"8203:12:21"},"nodeType":"YulExpressionStatement","src":"8203:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8167:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8192:5:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"8174:17:21"},"nodeType":"YulFunctionCall","src":"8174:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8164:2:21"},"nodeType":"YulFunctionCall","src":"8164:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8157:6:21"},"nodeType":"YulFunctionCall","src":"8157:43:21"},"nodeType":"YulIf","src":"8154:63:21"}]},"name":"validator_revert_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8137:5:21","type":""}],"src":"8101:122:21"},{"body":{"nodeType":"YulBlock","src":"8281:87:21","statements":[{"nodeType":"YulAssignment","src":"8291:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8313:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8300:12:21"},"nodeType":"YulFunctionCall","src":"8300:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8291:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8356:5:21"}],"functionName":{"name":"validator_revert_t_uint128","nodeType":"YulIdentifier","src":"8329:26:21"},"nodeType":"YulFunctionCall","src":"8329:33:21"},"nodeType":"YulExpressionStatement","src":"8329:33:21"}]},"name":"abi_decode_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8259:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"8267:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8275:5:21","type":""}],"src":"8229:139:21"},{"body":{"nodeType":"YulBlock","src":"8440:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"8486:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8488:77:21"},"nodeType":"YulFunctionCall","src":"8488:79:21"},"nodeType":"YulExpressionStatement","src":"8488:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8461:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8470:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8457:3:21"},"nodeType":"YulFunctionCall","src":"8457:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8482:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8453:3:21"},"nodeType":"YulFunctionCall","src":"8453:32:21"},"nodeType":"YulIf","src":"8450:119:21"},{"nodeType":"YulBlock","src":"8579:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8594:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8608:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8598:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8623:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8658:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8669:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8654:3:21"},"nodeType":"YulFunctionCall","src":"8654:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8678:7:21"}],"functionName":{"name":"abi_decode_t_uint128","nodeType":"YulIdentifier","src":"8633:20:21"},"nodeType":"YulFunctionCall","src":"8633:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8623:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8410:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8421:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8433:6:21","type":""}],"src":"8374:329:21"},{"body":{"nodeType":"YulBlock","src":"8772:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8789:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8811:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"8794:16:21"},"nodeType":"YulFunctionCall","src":"8794:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8782:6:21"},"nodeType":"YulFunctionCall","src":"8782:36:21"},"nodeType":"YulExpressionStatement","src":"8782:36:21"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8760:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8767:3:21","type":""}],"src":"8709:115:21"},{"body":{"nodeType":"YulBlock","src":"8926:122:21","statements":[{"nodeType":"YulAssignment","src":"8936:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8948:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8959:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8944:3:21"},"nodeType":"YulFunctionCall","src":"8944:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8936:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9014:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9027:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9038:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9023:3:21"},"nodeType":"YulFunctionCall","src":"9023:17:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"8972:41:21"},"nodeType":"YulFunctionCall","src":"8972:69:21"},"nodeType":"YulExpressionStatement","src":"8972:69:21"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8898:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8910:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8921:4:21","type":""}],"src":"8830:218:21"},{"body":{"nodeType":"YulBlock","src":"9119:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9136:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9159:5:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"9141:17:21"},"nodeType":"YulFunctionCall","src":"9141:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9129:6:21"},"nodeType":"YulFunctionCall","src":"9129:37:21"},"nodeType":"YulExpressionStatement","src":"9129:37:21"}]},"name":"abi_encode_t_uint128_to_t_uint128_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9107:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9114:3:21","type":""}],"src":"9054:118:21"},{"body":{"nodeType":"YulBlock","src":"9222:53:21","statements":[{"nodeType":"YulAssignment","src":"9232:37:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9247:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"9254:14:21","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9243:3:21"},"nodeType":"YulFunctionCall","src":"9243:26:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9232:7:21"}]}]},"name":"cleanup_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9204:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9214:7:21","type":""}],"src":"9178:97:21"},{"body":{"nodeType":"YulBlock","src":"9344:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9361:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9383:5:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"9366:16:21"},"nodeType":"YulFunctionCall","src":"9366:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9354:6:21"},"nodeType":"YulFunctionCall","src":"9354:36:21"},"nodeType":"YulExpressionStatement","src":"9354:36:21"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9332:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9339:3:21","type":""}],"src":"9281:115:21"},{"body":{"nodeType":"YulBlock","src":"9628:525:21","statements":[{"nodeType":"YulAssignment","src":"9638:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9650:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9661:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9646:3:21"},"nodeType":"YulFunctionCall","src":"9646:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9638:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9713:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9726:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9737:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9722:3:21"},"nodeType":"YulFunctionCall","src":"9722:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"9675:37:21"},"nodeType":"YulFunctionCall","src":"9675:65:21"},"nodeType":"YulExpressionStatement","src":"9675:65:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9794:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9807:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9818:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9803:3:21"},"nodeType":"YulFunctionCall","src":"9803:18:21"}],"functionName":{"name":"abi_encode_t_uint128_to_t_uint128_fromStack","nodeType":"YulIdentifier","src":"9750:43:21"},"nodeType":"YulFunctionCall","src":"9750:72:21"},"nodeType":"YulExpressionStatement","src":"9750:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9874:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9887:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9898:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9883:3:21"},"nodeType":"YulFunctionCall","src":"9883:18:21"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"9832:41:21"},"nodeType":"YulFunctionCall","src":"9832:70:21"},"nodeType":"YulExpressionStatement","src":"9832:70:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9954:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9967:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9978:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9963:3:21"},"nodeType":"YulFunctionCall","src":"9963:18:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"9912:41:21"},"nodeType":"YulFunctionCall","src":"9912:70:21"},"nodeType":"YulExpressionStatement","src":"9912:70:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10034:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10047:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10058:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10043:3:21"},"nodeType":"YulFunctionCall","src":"10043:19:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"9992:41:21"},"nodeType":"YulFunctionCall","src":"9992:71:21"},"nodeType":"YulExpressionStatement","src":"9992:71:21"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"10117:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10130:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10141:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10126:3:21"},"nodeType":"YulFunctionCall","src":"10126:19:21"}],"functionName":{"name":"abi_encode_t_uint192_to_t_uint192_fromStack","nodeType":"YulIdentifier","src":"10073:43:21"},"nodeType":"YulFunctionCall","src":"10073:73:21"},"nodeType":"YulExpressionStatement","src":"10073:73:21"}]},"name":"abi_encode_tuple_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__to_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9560:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9572:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9580:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9588:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9596:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9604:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9612:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9623:4:21","type":""}],"src":"9402:751:21"},{"body":{"nodeType":"YulBlock","src":"10242:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"10288:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10290:77:21"},"nodeType":"YulFunctionCall","src":"10290:79:21"},"nodeType":"YulExpressionStatement","src":"10290:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10263:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10272:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10259:3:21"},"nodeType":"YulFunctionCall","src":"10259:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10284:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10255:3:21"},"nodeType":"YulFunctionCall","src":"10255:32:21"},"nodeType":"YulIf","src":"10252:119:21"},{"nodeType":"YulBlock","src":"10381:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10396:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10410:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10400:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10425:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10460:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10471:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10456:3:21"},"nodeType":"YulFunctionCall","src":"10456:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10480:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10435:20:21"},"nodeType":"YulFunctionCall","src":"10435:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10425:6:21"}]}]},{"nodeType":"YulBlock","src":"10508:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10523:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10537:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10527:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10553:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10588:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10599:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10584:3:21"},"nodeType":"YulFunctionCall","src":"10584:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10608:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10563:20:21"},"nodeType":"YulFunctionCall","src":"10563:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10553:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10204:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10215:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10227:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10235:6:21","type":""}],"src":"10159:474:21"},{"body":{"nodeType":"YulBlock","src":"10667:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10684:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10687:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10677:6:21"},"nodeType":"YulFunctionCall","src":"10677:88:21"},"nodeType":"YulExpressionStatement","src":"10677:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10781:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10784:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10774:6:21"},"nodeType":"YulFunctionCall","src":"10774:15:21"},"nodeType":"YulExpressionStatement","src":"10774:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10805:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10808:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10798:6:21"},"nodeType":"YulFunctionCall","src":"10798:15:21"},"nodeType":"YulExpressionStatement","src":"10798:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10639:180:21"},{"body":{"nodeType":"YulBlock","src":"10876:269:21","statements":[{"nodeType":"YulAssignment","src":"10886:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10900:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"10906:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10896:3:21"},"nodeType":"YulFunctionCall","src":"10896:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10886:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"10917:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10947:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"10953:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10943:3:21"},"nodeType":"YulFunctionCall","src":"10943:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10921:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"10994:51:21","statements":[{"nodeType":"YulAssignment","src":"11008:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11022:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11030:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11018:3:21"},"nodeType":"YulFunctionCall","src":"11018:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11008:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10974:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10967:6:21"},"nodeType":"YulFunctionCall","src":"10967:26:21"},"nodeType":"YulIf","src":"10964:81:21"},{"body":{"nodeType":"YulBlock","src":"11097:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11111:16:21"},"nodeType":"YulFunctionCall","src":"11111:18:21"},"nodeType":"YulExpressionStatement","src":"11111:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11061:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11084:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11092:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11081:2:21"},"nodeType":"YulFunctionCall","src":"11081:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11058:2:21"},"nodeType":"YulFunctionCall","src":"11058:38:21"},"nodeType":"YulIf","src":"11055:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10860:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10869:6:21","type":""}],"src":"10825:320:21"},{"body":{"nodeType":"YulBlock","src":"11257:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11279:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11287:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11275:3:21"},"nodeType":"YulFunctionCall","src":"11275:14:21"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"11291:33:21","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11268:6:21"},"nodeType":"YulFunctionCall","src":"11268:57:21"},"nodeType":"YulExpressionStatement","src":"11268:57:21"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11249:6:21","type":""}],"src":"11151:181:21"},{"body":{"nodeType":"YulBlock","src":"11484:220:21","statements":[{"nodeType":"YulAssignment","src":"11494:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11560:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11565:2:21","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11501:58:21"},"nodeType":"YulFunctionCall","src":"11501:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11494:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11666:3:21"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"11577:88:21"},"nodeType":"YulFunctionCall","src":"11577:93:21"},"nodeType":"YulExpressionStatement","src":"11577:93:21"},{"nodeType":"YulAssignment","src":"11679:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11690:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11695:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11686:3:21"},"nodeType":"YulFunctionCall","src":"11686:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11679:3:21"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11472:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11480:3:21","type":""}],"src":"11338:366:21"},{"body":{"nodeType":"YulBlock","src":"11881:248:21","statements":[{"nodeType":"YulAssignment","src":"11891:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11903:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11914:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11899:3:21"},"nodeType":"YulFunctionCall","src":"11899:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11891:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11938:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11949:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11934:3:21"},"nodeType":"YulFunctionCall","src":"11934:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11957:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11963:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11953:3:21"},"nodeType":"YulFunctionCall","src":"11953:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11927:6:21"},"nodeType":"YulFunctionCall","src":"11927:47:21"},"nodeType":"YulExpressionStatement","src":"11927:47:21"},{"nodeType":"YulAssignment","src":"11983:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12117:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11991:124:21"},"nodeType":"YulFunctionCall","src":"11991:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11983:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11861:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11876:4:21","type":""}],"src":"11710:419:21"},{"body":{"nodeType":"YulBlock","src":"12241:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12263:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12271:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12259:3:21"},"nodeType":"YulFunctionCall","src":"12259:14:21"},{"hexValue":"43796265724172656e615374616b696e673a20696e76616c696420696e646578","kind":"string","nodeType":"YulLiteral","src":"12275:34:21","type":"","value":"CyberArenaStaking: invalid index"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12252:6:21"},"nodeType":"YulFunctionCall","src":"12252:58:21"},"nodeType":"YulExpressionStatement","src":"12252:58:21"}]},"name":"store_literal_in_memory_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12233:6:21","type":""}],"src":"12135:182:21"},{"body":{"nodeType":"YulBlock","src":"12469:220:21","statements":[{"nodeType":"YulAssignment","src":"12479:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12545:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12550:2:21","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12486:58:21"},"nodeType":"YulFunctionCall","src":"12486:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12479:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12651:3:21"}],"functionName":{"name":"store_literal_in_memory_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79","nodeType":"YulIdentifier","src":"12562:88:21"},"nodeType":"YulFunctionCall","src":"12562:93:21"},"nodeType":"YulExpressionStatement","src":"12562:93:21"},{"nodeType":"YulAssignment","src":"12664:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12675:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12680:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12671:3:21"},"nodeType":"YulFunctionCall","src":"12671:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12664:3:21"}]}]},"name":"abi_encode_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12457:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12465:3:21","type":""}],"src":"12323:366:21"},{"body":{"nodeType":"YulBlock","src":"12866:248:21","statements":[{"nodeType":"YulAssignment","src":"12876:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12888:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12899:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12884:3:21"},"nodeType":"YulFunctionCall","src":"12884:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12876:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12923:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12934:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12919:3:21"},"nodeType":"YulFunctionCall","src":"12919:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12942:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12948:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12938:3:21"},"nodeType":"YulFunctionCall","src":"12938:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12912:6:21"},"nodeType":"YulFunctionCall","src":"12912:47:21"},"nodeType":"YulExpressionStatement","src":"12912:47:21"},{"nodeType":"YulAssignment","src":"12968:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13102:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12976:124:21"},"nodeType":"YulFunctionCall","src":"12976:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12968:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12846:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12861:4:21","type":""}],"src":"12695:419:21"},{"body":{"nodeType":"YulBlock","src":"13148:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13165:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13168:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13158:6:21"},"nodeType":"YulFunctionCall","src":"13158:88:21"},"nodeType":"YulExpressionStatement","src":"13158:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13262:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13265:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13255:6:21"},"nodeType":"YulFunctionCall","src":"13255:15:21"},"nodeType":"YulExpressionStatement","src":"13255:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13286:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13289:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13279:6:21"},"nodeType":"YulFunctionCall","src":"13279:15:21"},"nodeType":"YulExpressionStatement","src":"13279:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"13120:180:21"},{"body":{"nodeType":"YulBlock","src":"13412:116:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13434:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13442:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13430:3:21"},"nodeType":"YulFunctionCall","src":"13430:14:21"},{"hexValue":"43796265724172656e615374616b696e673a20756e7374616b656420616c7265","kind":"string","nodeType":"YulLiteral","src":"13446:34:21","type":"","value":"CyberArenaStaking: unstaked alre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13423:6:21"},"nodeType":"YulFunctionCall","src":"13423:58:21"},"nodeType":"YulExpressionStatement","src":"13423:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13502:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13510:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13498:3:21"},"nodeType":"YulFunctionCall","src":"13498:15:21"},{"hexValue":"616479","kind":"string","nodeType":"YulLiteral","src":"13515:5:21","type":"","value":"ady"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13491:6:21"},"nodeType":"YulFunctionCall","src":"13491:30:21"},"nodeType":"YulExpressionStatement","src":"13491:30:21"}]},"name":"store_literal_in_memory_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13404:6:21","type":""}],"src":"13306:222:21"},{"body":{"nodeType":"YulBlock","src":"13680:220:21","statements":[{"nodeType":"YulAssignment","src":"13690:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13756:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13761:2:21","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13697:58:21"},"nodeType":"YulFunctionCall","src":"13697:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13690:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13862:3:21"}],"functionName":{"name":"store_literal_in_memory_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336","nodeType":"YulIdentifier","src":"13773:88:21"},"nodeType":"YulFunctionCall","src":"13773:93:21"},"nodeType":"YulExpressionStatement","src":"13773:93:21"},{"nodeType":"YulAssignment","src":"13875:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13886:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13891:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13882:3:21"},"nodeType":"YulFunctionCall","src":"13882:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13875:3:21"}]}]},"name":"abi_encode_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13668:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13676:3:21","type":""}],"src":"13534:366:21"},{"body":{"nodeType":"YulBlock","src":"14077:248:21","statements":[{"nodeType":"YulAssignment","src":"14087:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14099:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14110:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14095:3:21"},"nodeType":"YulFunctionCall","src":"14095:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14087:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14134:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14145:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14130:3:21"},"nodeType":"YulFunctionCall","src":"14130:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14153:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14159:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14149:3:21"},"nodeType":"YulFunctionCall","src":"14149:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14123:6:21"},"nodeType":"YulFunctionCall","src":"14123:47:21"},"nodeType":"YulExpressionStatement","src":"14123:47:21"},{"nodeType":"YulAssignment","src":"14179:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14313:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14187:124:21"},"nodeType":"YulFunctionCall","src":"14187:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14179:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14057:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14072:4:21","type":""}],"src":"13906:419:21"},{"body":{"nodeType":"YulBlock","src":"14359:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14376:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14379:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14369:6:21"},"nodeType":"YulFunctionCall","src":"14369:88:21"},"nodeType":"YulExpressionStatement","src":"14369:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14473:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14476:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14466:6:21"},"nodeType":"YulFunctionCall","src":"14466:15:21"},"nodeType":"YulExpressionStatement","src":"14466:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14497:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14500:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14490:6:21"},"nodeType":"YulFunctionCall","src":"14490:15:21"},"nodeType":"YulExpressionStatement","src":"14490:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14331:180:21"},{"body":{"nodeType":"YulBlock","src":"14562:198:21","statements":[{"nodeType":"YulAssignment","src":"14572:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14595:1:21"}],"functionName":{"name":"cleanup_t_uint192","nodeType":"YulIdentifier","src":"14577:17:21"},"nodeType":"YulFunctionCall","src":"14577:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14572:1:21"}]},{"nodeType":"YulAssignment","src":"14606:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14629:1:21"}],"functionName":{"name":"cleanup_t_uint192","nodeType":"YulIdentifier","src":"14611:17:21"},"nodeType":"YulFunctionCall","src":"14611:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14606:1:21"}]},{"nodeType":"YulAssignment","src":"14640:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14652:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"14655:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14648:3:21"},"nodeType":"YulFunctionCall","src":"14648:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14640:4:21"}]},{"body":{"nodeType":"YulBlock","src":"14731:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14733:16:21"},"nodeType":"YulFunctionCall","src":"14733:18:21"},"nodeType":"YulExpressionStatement","src":"14733:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14673:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"14679:50:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14670:2:21"},"nodeType":"YulFunctionCall","src":"14670:60:21"},"nodeType":"YulIf","src":"14667:86:21"}]},"name":"checked_sub_t_uint192","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14548:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"14551:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14557:4:21","type":""}],"src":"14517:243:21"},{"body":{"nodeType":"YulBlock","src":"14813:228:21","statements":[{"nodeType":"YulAssignment","src":"14823:24:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14845:1:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"14828:16:21"},"nodeType":"YulFunctionCall","src":"14828:19:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14823:1:21"}]},{"nodeType":"YulAssignment","src":"14856:24:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14878:1:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"14861:16:21"},"nodeType":"YulFunctionCall","src":"14861:19:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14856:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"14889:28:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14912:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"14915:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14908:3:21"},"nodeType":"YulFunctionCall","src":"14908:9:21"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"14893:11:21","type":""}]},{"nodeType":"YulAssignment","src":"14926:40:21","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"14954:11:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"14937:16:21"},"nodeType":"YulFunctionCall","src":"14937:29:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"14926:7:21"}]},{"body":{"nodeType":"YulBlock","src":"15012:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15014:16:21"},"nodeType":"YulFunctionCall","src":"15014:18:21"},"nodeType":"YulExpressionStatement","src":"15014:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"14989:7:21"},{"name":"product_raw","nodeType":"YulIdentifier","src":"14998:11:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14986:2:21"},"nodeType":"YulFunctionCall","src":"14986:24:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14979:6:21"},"nodeType":"YulFunctionCall","src":"14979:32:21"},"nodeType":"YulIf","src":"14976:58:21"}]},"name":"checked_mul_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14796:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"14799:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"14805:7:21","type":""}],"src":"14766:275:21"},{"body":{"nodeType":"YulBlock","src":"15090:158:21","statements":[{"nodeType":"YulAssignment","src":"15100:24:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15122:1:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"15105:16:21"},"nodeType":"YulFunctionCall","src":"15105:19:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15100:1:21"}]},{"nodeType":"YulAssignment","src":"15133:24:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15155:1:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"15138:16:21"},"nodeType":"YulFunctionCall","src":"15138:19:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15133:1:21"}]},{"nodeType":"YulAssignment","src":"15166:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15177:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"15180:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15173:3:21"},"nodeType":"YulFunctionCall","src":"15173:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"15166:3:21"}]},{"body":{"nodeType":"YulBlock","src":"15219:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15221:16:21"},"nodeType":"YulFunctionCall","src":"15221:18:21"},"nodeType":"YulExpressionStatement","src":"15221:18:21"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"15198:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15203:14:21","type":"","value":"0xffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15195:2:21"},"nodeType":"YulFunctionCall","src":"15195:23:21"},"nodeType":"YulIf","src":"15192:49:21"}]},"name":"checked_add_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15077:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"15080:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15086:3:21","type":""}],"src":"15047:201:21"},{"body":{"nodeType":"YulBlock","src":"15302:231:21","statements":[{"nodeType":"YulAssignment","src":"15312:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15335:1:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"15317:17:21"},"nodeType":"YulFunctionCall","src":"15317:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15312:1:21"}]},{"nodeType":"YulAssignment","src":"15346:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15369:1:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"15351:17:21"},"nodeType":"YulFunctionCall","src":"15351:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15346:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"15380:28:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15403:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"15406:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15399:3:21"},"nodeType":"YulFunctionCall","src":"15399:9:21"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"15384:11:21","type":""}]},{"nodeType":"YulAssignment","src":"15417:41:21","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"15446:11:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"15428:17:21"},"nodeType":"YulFunctionCall","src":"15428:30:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"15417:7:21"}]},{"body":{"nodeType":"YulBlock","src":"15504:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15506:16:21"},"nodeType":"YulFunctionCall","src":"15506:18:21"},"nodeType":"YulExpressionStatement","src":"15506:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"15481:7:21"},{"name":"product_raw","nodeType":"YulIdentifier","src":"15490:11:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15478:2:21"},"nodeType":"YulFunctionCall","src":"15478:24:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15471:6:21"},"nodeType":"YulFunctionCall","src":"15471:32:21"},"nodeType":"YulIf","src":"15468:58:21"}]},"name":"checked_mul_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15285:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"15288:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"15294:7:21","type":""}],"src":"15254:279:21"},{"body":{"nodeType":"YulBlock","src":"15567:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15584:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15587:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15577:6:21"},"nodeType":"YulFunctionCall","src":"15577:88:21"},"nodeType":"YulExpressionStatement","src":"15577:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15681:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15684:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15674:6:21"},"nodeType":"YulFunctionCall","src":"15674:15:21"},"nodeType":"YulExpressionStatement","src":"15674:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15705:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15708:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15698:6:21"},"nodeType":"YulFunctionCall","src":"15698:15:21"},"nodeType":"YulExpressionStatement","src":"15698:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15539:180:21"},{"body":{"nodeType":"YulBlock","src":"15767:143:21","statements":[{"nodeType":"YulAssignment","src":"15777:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15800:1:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"15782:17:21"},"nodeType":"YulFunctionCall","src":"15782:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15777:1:21"}]},{"nodeType":"YulAssignment","src":"15811:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15834:1:21"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"15816:17:21"},"nodeType":"YulFunctionCall","src":"15816:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15811:1:21"}]},{"body":{"nodeType":"YulBlock","src":"15858:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"15860:16:21"},"nodeType":"YulFunctionCall","src":"15860:18:21"},"nodeType":"YulExpressionStatement","src":"15860:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15855:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15848:6:21"},"nodeType":"YulFunctionCall","src":"15848:9:21"},"nodeType":"YulIf","src":"15845:35:21"},{"nodeType":"YulAssignment","src":"15890:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15899:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"15902:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15895:3:21"},"nodeType":"YulFunctionCall","src":"15895:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"15890:1:21"}]}]},"name":"checked_div_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15756:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"15759:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"15765:1:21","type":""}],"src":"15725:185:21"},{"body":{"nodeType":"YulBlock","src":"15961:149:21","statements":[{"nodeType":"YulAssignment","src":"15971:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15994:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15976:17:21"},"nodeType":"YulFunctionCall","src":"15976:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15971:1:21"}]},{"nodeType":"YulAssignment","src":"16005:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16028:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16010:17:21"},"nodeType":"YulFunctionCall","src":"16010:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16005:1:21"}]},{"nodeType":"YulAssignment","src":"16039:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16051:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"16054:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16047:3:21"},"nodeType":"YulFunctionCall","src":"16047:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"16039:4:21"}]},{"body":{"nodeType":"YulBlock","src":"16081:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16083:16:21"},"nodeType":"YulFunctionCall","src":"16083:18:21"},"nodeType":"YulExpressionStatement","src":"16083:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"16072:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"16078:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16069:2:21"},"nodeType":"YulFunctionCall","src":"16069:11:21"},"nodeType":"YulIf","src":"16066:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15947:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"15950:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"15956:4:21","type":""}],"src":"15916:194:21"},{"body":{"nodeType":"YulBlock","src":"16160:147:21","statements":[{"nodeType":"YulAssignment","src":"16170:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16193:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16175:17:21"},"nodeType":"YulFunctionCall","src":"16175:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16170:1:21"}]},{"nodeType":"YulAssignment","src":"16204:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16227:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16209:17:21"},"nodeType":"YulFunctionCall","src":"16209:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16204:1:21"}]},{"nodeType":"YulAssignment","src":"16238:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16249:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"16252:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16245:3:21"},"nodeType":"YulFunctionCall","src":"16245:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16238:3:21"}]},{"body":{"nodeType":"YulBlock","src":"16278:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16280:16:21"},"nodeType":"YulFunctionCall","src":"16280:18:21"},"nodeType":"YulExpressionStatement","src":"16280:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16270:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"16273:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16267:2:21"},"nodeType":"YulFunctionCall","src":"16267:10:21"},"nodeType":"YulIf","src":"16264:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16147:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"16150:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16156:3:21","type":""}],"src":"16116:191:21"},{"body":{"nodeType":"YulBlock","src":"16357:196:21","statements":[{"nodeType":"YulAssignment","src":"16367:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16390:1:21"}],"functionName":{"name":"cleanup_t_uint192","nodeType":"YulIdentifier","src":"16372:17:21"},"nodeType":"YulFunctionCall","src":"16372:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16367:1:21"}]},{"nodeType":"YulAssignment","src":"16401:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16424:1:21"}],"functionName":{"name":"cleanup_t_uint192","nodeType":"YulIdentifier","src":"16406:17:21"},"nodeType":"YulFunctionCall","src":"16406:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16401:1:21"}]},{"nodeType":"YulAssignment","src":"16435:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16446:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"16449:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16442:3:21"},"nodeType":"YulFunctionCall","src":"16442:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16435:3:21"}]},{"body":{"nodeType":"YulBlock","src":"16524:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16526:16:21"},"nodeType":"YulFunctionCall","src":"16526:18:21"},"nodeType":"YulExpressionStatement","src":"16526:18:21"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"16467:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16472:50:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16464:2:21"},"nodeType":"YulFunctionCall","src":"16464:59:21"},"nodeType":"YulIf","src":"16461:85:21"}]},"name":"checked_add_t_uint192","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16344:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"16347:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16353:3:21","type":""}],"src":"16313:240:21"},{"body":{"nodeType":"YulBlock","src":"16665:118:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16687:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16695:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16683:3:21"},"nodeType":"YulFunctionCall","src":"16683:14:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"16699:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16676:6:21"},"nodeType":"YulFunctionCall","src":"16676:58:21"},"nodeType":"YulExpressionStatement","src":"16676:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16755:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16763:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16751:3:21"},"nodeType":"YulFunctionCall","src":"16751:15:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"16768:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16744:6:21"},"nodeType":"YulFunctionCall","src":"16744:32:21"},"nodeType":"YulExpressionStatement","src":"16744:32:21"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16657:6:21","type":""}],"src":"16559:224:21"},{"body":{"nodeType":"YulBlock","src":"16935:220:21","statements":[{"nodeType":"YulAssignment","src":"16945:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17011:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17016:2:21","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16952:58:21"},"nodeType":"YulFunctionCall","src":"16952:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16945:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17117:3:21"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"17028:88:21"},"nodeType":"YulFunctionCall","src":"17028:93:21"},"nodeType":"YulExpressionStatement","src":"17028:93:21"},{"nodeType":"YulAssignment","src":"17130:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17141:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17146:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17137:3:21"},"nodeType":"YulFunctionCall","src":"17137:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17130:3:21"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16923:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16931:3:21","type":""}],"src":"16789:366:21"},{"body":{"nodeType":"YulBlock","src":"17332:248:21","statements":[{"nodeType":"YulAssignment","src":"17342:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17354:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17365:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17350:3:21"},"nodeType":"YulFunctionCall","src":"17350:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17342:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17389:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17400:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17385:3:21"},"nodeType":"YulFunctionCall","src":"17385:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17408:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17414:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17404:3:21"},"nodeType":"YulFunctionCall","src":"17404:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17378:6:21"},"nodeType":"YulFunctionCall","src":"17378:47:21"},"nodeType":"YulExpressionStatement","src":"17378:47:21"},{"nodeType":"YulAssignment","src":"17434:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17568:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17442:124:21"},"nodeType":"YulFunctionCall","src":"17442:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17434:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17312:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17327:4:21","type":""}],"src":"17161:419:21"},{"body":{"nodeType":"YulBlock","src":"17692:114:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17714:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17722:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17710:3:21"},"nodeType":"YulFunctionCall","src":"17710:14:21"},{"hexValue":"5374616b696e673a2070656e616c74792042502065786365656473206c696d69","kind":"string","nodeType":"YulLiteral","src":"17726:34:21","type":"","value":"Staking: penalty BP exceeds limi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17703:6:21"},"nodeType":"YulFunctionCall","src":"17703:58:21"},"nodeType":"YulExpressionStatement","src":"17703:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17782:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17790:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17778:3:21"},"nodeType":"YulFunctionCall","src":"17778:15:21"},{"hexValue":"74","kind":"string","nodeType":"YulLiteral","src":"17795:3:21","type":"","value":"t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17771:6:21"},"nodeType":"YulFunctionCall","src":"17771:28:21"},"nodeType":"YulExpressionStatement","src":"17771:28:21"}]},"name":"store_literal_in_memory_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17684:6:21","type":""}],"src":"17586:220:21"},{"body":{"nodeType":"YulBlock","src":"17958:220:21","statements":[{"nodeType":"YulAssignment","src":"17968:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18034:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18039:2:21","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17975:58:21"},"nodeType":"YulFunctionCall","src":"17975:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17968:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18140:3:21"}],"functionName":{"name":"store_literal_in_memory_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7","nodeType":"YulIdentifier","src":"18051:88:21"},"nodeType":"YulFunctionCall","src":"18051:93:21"},"nodeType":"YulExpressionStatement","src":"18051:93:21"},{"nodeType":"YulAssignment","src":"18153:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18164:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18169:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18160:3:21"},"nodeType":"YulFunctionCall","src":"18160:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18153:3:21"}]}]},"name":"abi_encode_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17946:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17954:3:21","type":""}],"src":"17812:366:21"},{"body":{"nodeType":"YulBlock","src":"18355:248:21","statements":[{"nodeType":"YulAssignment","src":"18365:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18377:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18388:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18373:3:21"},"nodeType":"YulFunctionCall","src":"18373:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18365:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18412:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18423:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18408:3:21"},"nodeType":"YulFunctionCall","src":"18408:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18431:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18437:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18427:3:21"},"nodeType":"YulFunctionCall","src":"18427:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18401:6:21"},"nodeType":"YulFunctionCall","src":"18401:47:21"},"nodeType":"YulExpressionStatement","src":"18401:47:21"},{"nodeType":"YulAssignment","src":"18457:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18591:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18465:124:21"},"nodeType":"YulFunctionCall","src":"18465:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18457:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18335:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18350:4:21","type":""}],"src":"18184:419:21"},{"body":{"nodeType":"YulBlock","src":"18715:128:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18737:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18745:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18733:3:21"},"nodeType":"YulFunctionCall","src":"18733:14:21"},{"hexValue":"43796265724172656e615374616b696e673a2074726561737572792069732074","kind":"string","nodeType":"YulLiteral","src":"18749:34:21","type":"","value":"CyberArenaStaking: treasury is t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18726:6:21"},"nodeType":"YulFunctionCall","src":"18726:58:21"},"nodeType":"YulExpressionStatement","src":"18726:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18805:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18813:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18801:3:21"},"nodeType":"YulFunctionCall","src":"18801:15:21"},{"hexValue":"6865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"18818:17:21","type":"","value":"he zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18794:6:21"},"nodeType":"YulFunctionCall","src":"18794:42:21"},"nodeType":"YulExpressionStatement","src":"18794:42:21"}]},"name":"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18707:6:21","type":""}],"src":"18609:234:21"},{"body":{"nodeType":"YulBlock","src":"18995:220:21","statements":[{"nodeType":"YulAssignment","src":"19005:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19071:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19076:2:21","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19012:58:21"},"nodeType":"YulFunctionCall","src":"19012:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19005:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19177:3:21"}],"functionName":{"name":"store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633","nodeType":"YulIdentifier","src":"19088:88:21"},"nodeType":"YulFunctionCall","src":"19088:93:21"},"nodeType":"YulExpressionStatement","src":"19088:93:21"},{"nodeType":"YulAssignment","src":"19190:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19201:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19206:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19197:3:21"},"nodeType":"YulFunctionCall","src":"19197:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19190:3:21"}]}]},"name":"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18983:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18991:3:21","type":""}],"src":"18849:366:21"},{"body":{"nodeType":"YulBlock","src":"19392:248:21","statements":[{"nodeType":"YulAssignment","src":"19402:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19414:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19425:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19410:3:21"},"nodeType":"YulFunctionCall","src":"19410:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19402:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19449:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19460:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19445:3:21"},"nodeType":"YulFunctionCall","src":"19445:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19468:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19474:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19464:3:21"},"nodeType":"YulFunctionCall","src":"19464:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19438:6:21"},"nodeType":"YulFunctionCall","src":"19438:47:21"},"nodeType":"YulExpressionStatement","src":"19438:47:21"},{"nodeType":"YulAssignment","src":"19494:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19628:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19502:124:21"},"nodeType":"YulFunctionCall","src":"19502:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19494:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19372:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19387:4:21","type":""}],"src":"19221:419:21"},{"body":{"nodeType":"YulBlock","src":"19752:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19774:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19782:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19770:3:21"},"nodeType":"YulFunctionCall","src":"19770:14:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"19786:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19763:6:21"},"nodeType":"YulFunctionCall","src":"19763:58:21"},"nodeType":"YulExpressionStatement","src":"19763:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19842:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19850:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19838:3:21"},"nodeType":"YulFunctionCall","src":"19838:15:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"19855:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19831:6:21"},"nodeType":"YulFunctionCall","src":"19831:33:21"},"nodeType":"YulExpressionStatement","src":"19831:33:21"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19744:6:21","type":""}],"src":"19646:225:21"},{"body":{"nodeType":"YulBlock","src":"20023:220:21","statements":[{"nodeType":"YulAssignment","src":"20033:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20099:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20104:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20040:58:21"},"nodeType":"YulFunctionCall","src":"20040:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20033:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20205:3:21"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"20116:88:21"},"nodeType":"YulFunctionCall","src":"20116:93:21"},"nodeType":"YulExpressionStatement","src":"20116:93:21"},{"nodeType":"YulAssignment","src":"20218:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20229:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20234:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20225:3:21"},"nodeType":"YulFunctionCall","src":"20225:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20218:3:21"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20011:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20019:3:21","type":""}],"src":"19877:366:21"},{"body":{"nodeType":"YulBlock","src":"20420:248:21","statements":[{"nodeType":"YulAssignment","src":"20430:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20442:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20453:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20438:3:21"},"nodeType":"YulFunctionCall","src":"20438:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20430:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20477:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20488:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20473:3:21"},"nodeType":"YulFunctionCall","src":"20473:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20496:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20502:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20492:3:21"},"nodeType":"YulFunctionCall","src":"20492:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20466:6:21"},"nodeType":"YulFunctionCall","src":"20466:47:21"},"nodeType":"YulExpressionStatement","src":"20466:47:21"},{"nodeType":"YulAssignment","src":"20522:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20656:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20530:124:21"},"nodeType":"YulFunctionCall","src":"20530:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20522:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20400:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20415:4:21","type":""}],"src":"20249:419:21"},{"body":{"nodeType":"YulBlock","src":"20780:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20802:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20810:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20798:3:21"},"nodeType":"YulFunctionCall","src":"20798:14:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"20814:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20791:6:21"},"nodeType":"YulFunctionCall","src":"20791:58:21"},"nodeType":"YulExpressionStatement","src":"20791:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20870:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20878:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20866:3:21"},"nodeType":"YulFunctionCall","src":"20866:15:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"20883:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20859:6:21"},"nodeType":"YulFunctionCall","src":"20859:31:21"},"nodeType":"YulExpressionStatement","src":"20859:31:21"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20772:6:21","type":""}],"src":"20674:223:21"},{"body":{"nodeType":"YulBlock","src":"21049:220:21","statements":[{"nodeType":"YulAssignment","src":"21059:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21125:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21130:2:21","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21066:58:21"},"nodeType":"YulFunctionCall","src":"21066:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21059:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21231:3:21"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"21142:88:21"},"nodeType":"YulFunctionCall","src":"21142:93:21"},"nodeType":"YulExpressionStatement","src":"21142:93:21"},{"nodeType":"YulAssignment","src":"21244:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21255:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21260:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21251:3:21"},"nodeType":"YulFunctionCall","src":"21251:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21244:3:21"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21037:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21045:3:21","type":""}],"src":"20903:366:21"},{"body":{"nodeType":"YulBlock","src":"21446:248:21","statements":[{"nodeType":"YulAssignment","src":"21456:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21468:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21479:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21464:3:21"},"nodeType":"YulFunctionCall","src":"21464:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21456:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21503:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21514:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21499:3:21"},"nodeType":"YulFunctionCall","src":"21499:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21522:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21528:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21518:3:21"},"nodeType":"YulFunctionCall","src":"21518:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21492:6:21"},"nodeType":"YulFunctionCall","src":"21492:47:21"},"nodeType":"YulExpressionStatement","src":"21492:47:21"},{"nodeType":"YulAssignment","src":"21548:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21682:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21556:124:21"},"nodeType":"YulFunctionCall","src":"21556:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21548:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21426:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21441:4:21","type":""}],"src":"21275:419:21"},{"body":{"nodeType":"YulBlock","src":"21806:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21828:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21836:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21824:3:21"},"nodeType":"YulFunctionCall","src":"21824:14:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"21840:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21817:6:21"},"nodeType":"YulFunctionCall","src":"21817:58:21"},"nodeType":"YulExpressionStatement","src":"21817:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21896:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21904:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21892:3:21"},"nodeType":"YulFunctionCall","src":"21892:15:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"21909:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21885:6:21"},"nodeType":"YulFunctionCall","src":"21885:29:21"},"nodeType":"YulExpressionStatement","src":"21885:29:21"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21798:6:21","type":""}],"src":"21700:221:21"},{"body":{"nodeType":"YulBlock","src":"22073:220:21","statements":[{"nodeType":"YulAssignment","src":"22083:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22149:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22154:2:21","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22090:58:21"},"nodeType":"YulFunctionCall","src":"22090:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22083:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22255:3:21"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"22166:88:21"},"nodeType":"YulFunctionCall","src":"22166:93:21"},"nodeType":"YulExpressionStatement","src":"22166:93:21"},{"nodeType":"YulAssignment","src":"22268:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22279:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22284:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22275:3:21"},"nodeType":"YulFunctionCall","src":"22275:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22268:3:21"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22061:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22069:3:21","type":""}],"src":"21927:366:21"},{"body":{"nodeType":"YulBlock","src":"22470:248:21","statements":[{"nodeType":"YulAssignment","src":"22480:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22492:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22503:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22488:3:21"},"nodeType":"YulFunctionCall","src":"22488:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22480:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22527:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22538:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22523:3:21"},"nodeType":"YulFunctionCall","src":"22523:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22546:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22552:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22542:3:21"},"nodeType":"YulFunctionCall","src":"22542:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22516:6:21"},"nodeType":"YulFunctionCall","src":"22516:47:21"},"nodeType":"YulExpressionStatement","src":"22516:47:21"},{"nodeType":"YulAssignment","src":"22572:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22706:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22580:124:21"},"nodeType":"YulFunctionCall","src":"22580:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22572:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22450:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22465:4:21","type":""}],"src":"22299:419:21"},{"body":{"nodeType":"YulBlock","src":"22830:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22852:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22860:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22848:3:21"},"nodeType":"YulFunctionCall","src":"22848:14:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"22864:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22841:6:21"},"nodeType":"YulFunctionCall","src":"22841:55:21"},"nodeType":"YulExpressionStatement","src":"22841:55:21"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22822:6:21","type":""}],"src":"22724:179:21"},{"body":{"nodeType":"YulBlock","src":"23055:220:21","statements":[{"nodeType":"YulAssignment","src":"23065:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23131:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23136:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23072:58:21"},"nodeType":"YulFunctionCall","src":"23072:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23065:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23237:3:21"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"23148:88:21"},"nodeType":"YulFunctionCall","src":"23148:93:21"},"nodeType":"YulExpressionStatement","src":"23148:93:21"},{"nodeType":"YulAssignment","src":"23250:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23261:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23266:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23257:3:21"},"nodeType":"YulFunctionCall","src":"23257:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23250:3:21"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23043:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23051:3:21","type":""}],"src":"22909:366:21"},{"body":{"nodeType":"YulBlock","src":"23452:248:21","statements":[{"nodeType":"YulAssignment","src":"23462:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23474:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23485:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23470:3:21"},"nodeType":"YulFunctionCall","src":"23470:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23462:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23509:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23520:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23505:3:21"},"nodeType":"YulFunctionCall","src":"23505:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23528:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"23534:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23524:3:21"},"nodeType":"YulFunctionCall","src":"23524:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23498:6:21"},"nodeType":"YulFunctionCall","src":"23498:47:21"},"nodeType":"YulExpressionStatement","src":"23498:47:21"},{"nodeType":"YulAssignment","src":"23554:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23688:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23562:124:21"},"nodeType":"YulFunctionCall","src":"23562:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23554:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23432:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23447:4:21","type":""}],"src":"23281:419:21"},{"body":{"nodeType":"YulBlock","src":"23812:116:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23834:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23842:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23830:3:21"},"nodeType":"YulFunctionCall","src":"23830:14:21"},{"hexValue":"43796265724172656e615374616b696e673a204e4f4e5f5452414e5346455241","kind":"string","nodeType":"YulLiteral","src":"23846:34:21","type":"","value":"CyberArenaStaking: NON_TRANSFERA"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23823:6:21"},"nodeType":"YulFunctionCall","src":"23823:58:21"},"nodeType":"YulExpressionStatement","src":"23823:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23902:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23910:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23898:3:21"},"nodeType":"YulFunctionCall","src":"23898:15:21"},{"hexValue":"424c45","kind":"string","nodeType":"YulLiteral","src":"23915:5:21","type":"","value":"BLE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23891:6:21"},"nodeType":"YulFunctionCall","src":"23891:30:21"},"nodeType":"YulExpressionStatement","src":"23891:30:21"}]},"name":"store_literal_in_memory_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23804:6:21","type":""}],"src":"23706:222:21"},{"body":{"nodeType":"YulBlock","src":"24080:220:21","statements":[{"nodeType":"YulAssignment","src":"24090:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24156:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"24161:2:21","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24097:58:21"},"nodeType":"YulFunctionCall","src":"24097:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24090:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24262:3:21"}],"functionName":{"name":"store_literal_in_memory_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f","nodeType":"YulIdentifier","src":"24173:88:21"},"nodeType":"YulFunctionCall","src":"24173:93:21"},"nodeType":"YulExpressionStatement","src":"24173:93:21"},{"nodeType":"YulAssignment","src":"24275:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24286:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"24291:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24282:3:21"},"nodeType":"YulFunctionCall","src":"24282:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24275:3:21"}]}]},"name":"abi_encode_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24068:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24076:3:21","type":""}],"src":"23934:366:21"},{"body":{"nodeType":"YulBlock","src":"24477:248:21","statements":[{"nodeType":"YulAssignment","src":"24487:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24499:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24510:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24495:3:21"},"nodeType":"YulFunctionCall","src":"24495:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24487:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24534:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24545:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24530:3:21"},"nodeType":"YulFunctionCall","src":"24530:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24553:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"24559:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24549:3:21"},"nodeType":"YulFunctionCall","src":"24549:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24523:6:21"},"nodeType":"YulFunctionCall","src":"24523:47:21"},"nodeType":"YulExpressionStatement","src":"24523:47:21"},{"nodeType":"YulAssignment","src":"24579:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24713:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24587:124:21"},"nodeType":"YulFunctionCall","src":"24587:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24579:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24457:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24472:4:21","type":""}],"src":"24306:419:21"},{"body":{"nodeType":"YulBlock","src":"24837:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24859:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24867:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24855:3:21"},"nodeType":"YulFunctionCall","src":"24855:14:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"24871:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24848:6:21"},"nodeType":"YulFunctionCall","src":"24848:58:21"},"nodeType":"YulExpressionStatement","src":"24848:58:21"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24829:6:21","type":""}],"src":"24731:182:21"},{"body":{"nodeType":"YulBlock","src":"25065:220:21","statements":[{"nodeType":"YulAssignment","src":"25075:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25141:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"25146:2:21","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25082:58:21"},"nodeType":"YulFunctionCall","src":"25082:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25075:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25247:3:21"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"25158:88:21"},"nodeType":"YulFunctionCall","src":"25158:93:21"},"nodeType":"YulExpressionStatement","src":"25158:93:21"},{"nodeType":"YulAssignment","src":"25260:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25271:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"25276:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25267:3:21"},"nodeType":"YulFunctionCall","src":"25267:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25260:3:21"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25053:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25061:3:21","type":""}],"src":"24919:366:21"},{"body":{"nodeType":"YulBlock","src":"25462:248:21","statements":[{"nodeType":"YulAssignment","src":"25472:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25484:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25495:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25480:3:21"},"nodeType":"YulFunctionCall","src":"25480:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25472:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25519:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25530:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25515:3:21"},"nodeType":"YulFunctionCall","src":"25515:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25538:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"25544:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25534:3:21"},"nodeType":"YulFunctionCall","src":"25534:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25508:6:21"},"nodeType":"YulFunctionCall","src":"25508:47:21"},"nodeType":"YulExpressionStatement","src":"25508:47:21"},{"nodeType":"YulAssignment","src":"25564:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25698:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25572:124:21"},"nodeType":"YulFunctionCall","src":"25572:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25564:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25442:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25457:4:21","type":""}],"src":"25291:419:21"},{"body":{"nodeType":"YulBlock","src":"25822:114:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25844:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"25852:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25840:3:21"},"nodeType":"YulFunctionCall","src":"25840:14:21"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"25856:34:21","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25833:6:21"},"nodeType":"YulFunctionCall","src":"25833:58:21"},"nodeType":"YulExpressionStatement","src":"25833:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25912:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"25920:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25908:3:21"},"nodeType":"YulFunctionCall","src":"25908:15:21"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"25925:3:21","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25901:6:21"},"nodeType":"YulFunctionCall","src":"25901:28:21"},"nodeType":"YulExpressionStatement","src":"25901:28:21"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25814:6:21","type":""}],"src":"25716:220:21"},{"body":{"nodeType":"YulBlock","src":"26088:220:21","statements":[{"nodeType":"YulAssignment","src":"26098:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26164:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"26169:2:21","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26105:58:21"},"nodeType":"YulFunctionCall","src":"26105:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26098:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26270:3:21"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"26181:88:21"},"nodeType":"YulFunctionCall","src":"26181:93:21"},"nodeType":"YulExpressionStatement","src":"26181:93:21"},{"nodeType":"YulAssignment","src":"26283:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26294:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"26299:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26290:3:21"},"nodeType":"YulFunctionCall","src":"26290:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26283:3:21"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26076:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26084:3:21","type":""}],"src":"25942:366:21"},{"body":{"nodeType":"YulBlock","src":"26485:248:21","statements":[{"nodeType":"YulAssignment","src":"26495:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26507:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26518:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26503:3:21"},"nodeType":"YulFunctionCall","src":"26503:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26495:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26542:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26553:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26538:3:21"},"nodeType":"YulFunctionCall","src":"26538:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26561:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"26567:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26557:3:21"},"nodeType":"YulFunctionCall","src":"26557:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26531:6:21"},"nodeType":"YulFunctionCall","src":"26531:47:21"},"nodeType":"YulExpressionStatement","src":"26531:47:21"},{"nodeType":"YulAssignment","src":"26587:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26721:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26595:124:21"},"nodeType":"YulFunctionCall","src":"26595:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26587:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26465:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26480:4:21","type":""}],"src":"26314:419:21"},{"body":{"nodeType":"YulBlock","src":"26845:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26867:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"26875:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26863:3:21"},"nodeType":"YulFunctionCall","src":"26863:14:21"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"26879:34:21","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26856:6:21"},"nodeType":"YulFunctionCall","src":"26856:58:21"},"nodeType":"YulExpressionStatement","src":"26856:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26935:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"26943:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26931:3:21"},"nodeType":"YulFunctionCall","src":"26931:15:21"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"26948:4:21","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26924:6:21"},"nodeType":"YulFunctionCall","src":"26924:29:21"},"nodeType":"YulExpressionStatement","src":"26924:29:21"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26837:6:21","type":""}],"src":"26739:221:21"},{"body":{"nodeType":"YulBlock","src":"27112:220:21","statements":[{"nodeType":"YulAssignment","src":"27122:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27188:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"27193:2:21","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27129:58:21"},"nodeType":"YulFunctionCall","src":"27129:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27122:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27294:3:21"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"27205:88:21"},"nodeType":"YulFunctionCall","src":"27205:93:21"},"nodeType":"YulExpressionStatement","src":"27205:93:21"},{"nodeType":"YulAssignment","src":"27307:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27318:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"27323:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27314:3:21"},"nodeType":"YulFunctionCall","src":"27314:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27307:3:21"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27100:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27108:3:21","type":""}],"src":"26966:366:21"},{"body":{"nodeType":"YulBlock","src":"27509:248:21","statements":[{"nodeType":"YulAssignment","src":"27519:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27531:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27542:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27527:3:21"},"nodeType":"YulFunctionCall","src":"27527:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27519:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27566:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27577:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27562:3:21"},"nodeType":"YulFunctionCall","src":"27562:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27585:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"27591:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27581:3:21"},"nodeType":"YulFunctionCall","src":"27581:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27555:6:21"},"nodeType":"YulFunctionCall","src":"27555:47:21"},"nodeType":"YulExpressionStatement","src":"27555:47:21"},{"nodeType":"YulAssignment","src":"27611:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27745:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27619:124:21"},"nodeType":"YulFunctionCall","src":"27619:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27611:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27489:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27504:4:21","type":""}],"src":"27338:419:21"},{"body":{"nodeType":"YulBlock","src":"27889:206:21","statements":[{"nodeType":"YulAssignment","src":"27899:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27911:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27922:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27907:3:21"},"nodeType":"YulFunctionCall","src":"27907:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27899:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27979:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27992:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28003:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27988:3:21"},"nodeType":"YulFunctionCall","src":"27988:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27935:43:21"},"nodeType":"YulFunctionCall","src":"27935:71:21"},"nodeType":"YulExpressionStatement","src":"27935:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28060:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28073:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28084:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28069:3:21"},"nodeType":"YulFunctionCall","src":"28069:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28016:43:21"},"nodeType":"YulFunctionCall","src":"28016:72:21"},"nodeType":"YulExpressionStatement","src":"28016:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27853:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27865:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27873:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27884:4:21","type":""}],"src":"27763:332:21"},{"body":{"nodeType":"YulBlock","src":"28255:288:21","statements":[{"nodeType":"YulAssignment","src":"28265:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28277:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28288:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28273:3:21"},"nodeType":"YulFunctionCall","src":"28273:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28265:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28345:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28358:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28369:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28354:3:21"},"nodeType":"YulFunctionCall","src":"28354:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28301:43:21"},"nodeType":"YulFunctionCall","src":"28301:71:21"},"nodeType":"YulExpressionStatement","src":"28301:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28426:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28439:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28450:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28435:3:21"},"nodeType":"YulFunctionCall","src":"28435:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28382:43:21"},"nodeType":"YulFunctionCall","src":"28382:72:21"},"nodeType":"YulExpressionStatement","src":"28382:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28508:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28521:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28532:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28517:3:21"},"nodeType":"YulFunctionCall","src":"28517:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28464:43:21"},"nodeType":"YulFunctionCall","src":"28464:72:21"},"nodeType":"YulExpressionStatement","src":"28464:72:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28211:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28223:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28231:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28239:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28250:4:21","type":""}],"src":"28101:442:21"},{"body":{"nodeType":"YulBlock","src":"28655:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28677:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28685:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28673:3:21"},"nodeType":"YulFunctionCall","src":"28673:14:21"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"28689:33:21","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28666:6:21"},"nodeType":"YulFunctionCall","src":"28666:57:21"},"nodeType":"YulExpressionStatement","src":"28666:57:21"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28647:6:21","type":""}],"src":"28549:181:21"},{"body":{"nodeType":"YulBlock","src":"28882:220:21","statements":[{"nodeType":"YulAssignment","src":"28892:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28958:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"28963:2:21","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28899:58:21"},"nodeType":"YulFunctionCall","src":"28899:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28892:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29064:3:21"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"28975:88:21"},"nodeType":"YulFunctionCall","src":"28975:93:21"},"nodeType":"YulExpressionStatement","src":"28975:93:21"},{"nodeType":"YulAssignment","src":"29077:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29088:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"29093:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29084:3:21"},"nodeType":"YulFunctionCall","src":"29084:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29077:3:21"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28870:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28878:3:21","type":""}],"src":"28736:366:21"},{"body":{"nodeType":"YulBlock","src":"29279:248:21","statements":[{"nodeType":"YulAssignment","src":"29289:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29301:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29312:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29297:3:21"},"nodeType":"YulFunctionCall","src":"29297:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29289:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29336:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29347:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29332:3:21"},"nodeType":"YulFunctionCall","src":"29332:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29355:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"29361:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29351:3:21"},"nodeType":"YulFunctionCall","src":"29351:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29325:6:21"},"nodeType":"YulFunctionCall","src":"29325:47:21"},"nodeType":"YulExpressionStatement","src":"29325:47:21"},{"nodeType":"YulAssignment","src":"29381:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29515:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29389:124:21"},"nodeType":"YulFunctionCall","src":"29389:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29381:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29259:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29274:4:21","type":""}],"src":"29108:419:21"},{"body":{"nodeType":"YulBlock","src":"29573:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"29627:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29636:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29639:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29629:6:21"},"nodeType":"YulFunctionCall","src":"29629:12:21"},"nodeType":"YulExpressionStatement","src":"29629:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29596:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29618:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"29603:14:21"},"nodeType":"YulFunctionCall","src":"29603:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29593:2:21"},"nodeType":"YulFunctionCall","src":"29593:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29586:6:21"},"nodeType":"YulFunctionCall","src":"29586:40:21"},"nodeType":"YulIf","src":"29583:60:21"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29566:5:21","type":""}],"src":"29533:116:21"},{"body":{"nodeType":"YulBlock","src":"29715:77:21","statements":[{"nodeType":"YulAssignment","src":"29725:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29740:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29734:5:21"},"nodeType":"YulFunctionCall","src":"29734:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29725:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29780:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"29756:23:21"},"nodeType":"YulFunctionCall","src":"29756:30:21"},"nodeType":"YulExpressionStatement","src":"29756:30:21"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"29693:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"29701:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"29709:5:21","type":""}],"src":"29655:137:21"},{"body":{"nodeType":"YulBlock","src":"29872:271:21","statements":[{"body":{"nodeType":"YulBlock","src":"29918:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"29920:77:21"},"nodeType":"YulFunctionCall","src":"29920:79:21"},"nodeType":"YulExpressionStatement","src":"29920:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"29893:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"29902:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29889:3:21"},"nodeType":"YulFunctionCall","src":"29889:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"29914:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"29885:3:21"},"nodeType":"YulFunctionCall","src":"29885:32:21"},"nodeType":"YulIf","src":"29882:119:21"},{"nodeType":"YulBlock","src":"30011:125:21","statements":[{"nodeType":"YulVariableDeclaration","src":"30026:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"30040:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30030:6:21","type":""}]},{"nodeType":"YulAssignment","src":"30055:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30098:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"30109:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30094:3:21"},"nodeType":"YulFunctionCall","src":"30094:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30118:7:21"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"30065:28:21"},"nodeType":"YulFunctionCall","src":"30065:61:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"30055:6:21"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29842:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"29853:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"29865:6:21","type":""}],"src":"29798:345:21"},{"body":{"nodeType":"YulBlock","src":"30255:123:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30277:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"30285:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30273:3:21"},"nodeType":"YulFunctionCall","src":"30273:14:21"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"30289:34:21","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30266:6:21"},"nodeType":"YulFunctionCall","src":"30266:58:21"},"nodeType":"YulExpressionStatement","src":"30266:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30345:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"30353:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30341:3:21"},"nodeType":"YulFunctionCall","src":"30341:15:21"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"30358:12:21","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30334:6:21"},"nodeType":"YulFunctionCall","src":"30334:37:21"},"nodeType":"YulExpressionStatement","src":"30334:37:21"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30247:6:21","type":""}],"src":"30149:229:21"},{"body":{"nodeType":"YulBlock","src":"30530:220:21","statements":[{"nodeType":"YulAssignment","src":"30540:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30606:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"30611:2:21","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30547:58:21"},"nodeType":"YulFunctionCall","src":"30547:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30540:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30712:3:21"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"30623:88:21"},"nodeType":"YulFunctionCall","src":"30623:93:21"},"nodeType":"YulExpressionStatement","src":"30623:93:21"},{"nodeType":"YulAssignment","src":"30725:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30736:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"30741:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30732:3:21"},"nodeType":"YulFunctionCall","src":"30732:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30725:3:21"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30518:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30526:3:21","type":""}],"src":"30384:366:21"},{"body":{"nodeType":"YulBlock","src":"30927:248:21","statements":[{"nodeType":"YulAssignment","src":"30937:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30949:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30960:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30945:3:21"},"nodeType":"YulFunctionCall","src":"30945:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30937:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30984:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30995:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30980:3:21"},"nodeType":"YulFunctionCall","src":"30980:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31003:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"31009:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30999:3:21"},"nodeType":"YulFunctionCall","src":"30999:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30973:6:21"},"nodeType":"YulFunctionCall","src":"30973:47:21"},"nodeType":"YulExpressionStatement","src":"30973:47:21"},{"nodeType":"YulAssignment","src":"31029:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31163:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31037:124:21"},"nodeType":"YulFunctionCall","src":"31037:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31029:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30907:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30922:4:21","type":""}],"src":"30756:419:21"},{"body":{"nodeType":"YulBlock","src":"31287:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31309:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31317:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31305:3:21"},"nodeType":"YulFunctionCall","src":"31305:14:21"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"31321:34:21","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31298:6:21"},"nodeType":"YulFunctionCall","src":"31298:58:21"},"nodeType":"YulExpressionStatement","src":"31298:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31377:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31385:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31373:3:21"},"nodeType":"YulFunctionCall","src":"31373:15:21"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"31390:8:21","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31366:6:21"},"nodeType":"YulFunctionCall","src":"31366:33:21"},"nodeType":"YulExpressionStatement","src":"31366:33:21"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31279:6:21","type":""}],"src":"31181:225:21"},{"body":{"nodeType":"YulBlock","src":"31558:220:21","statements":[{"nodeType":"YulAssignment","src":"31568:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31634:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"31639:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31575:58:21"},"nodeType":"YulFunctionCall","src":"31575:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31568:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31740:3:21"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"31651:88:21"},"nodeType":"YulFunctionCall","src":"31651:93:21"},"nodeType":"YulExpressionStatement","src":"31651:93:21"},{"nodeType":"YulAssignment","src":"31753:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31764:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"31769:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31760:3:21"},"nodeType":"YulFunctionCall","src":"31760:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31753:3:21"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31546:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31554:3:21","type":""}],"src":"31412:366:21"},{"body":{"nodeType":"YulBlock","src":"31955:248:21","statements":[{"nodeType":"YulAssignment","src":"31965:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31977:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31988:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31973:3:21"},"nodeType":"YulFunctionCall","src":"31973:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31965:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32012:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32023:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32008:3:21"},"nodeType":"YulFunctionCall","src":"32008:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32031:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"32037:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32027:3:21"},"nodeType":"YulFunctionCall","src":"32027:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32001:6:21"},"nodeType":"YulFunctionCall","src":"32001:47:21"},"nodeType":"YulExpressionStatement","src":"32001:47:21"},{"nodeType":"YulAssignment","src":"32057:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32191:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32065:124:21"},"nodeType":"YulFunctionCall","src":"32065:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32057:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31935:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31950:4:21","type":""}],"src":"31784:419:21"},{"body":{"nodeType":"YulBlock","src":"32315:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32337:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32345:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32333:3:21"},"nodeType":"YulFunctionCall","src":"32333:14:21"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"32349:31:21","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32326:6:21"},"nodeType":"YulFunctionCall","src":"32326:55:21"},"nodeType":"YulExpressionStatement","src":"32326:55:21"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32307:6:21","type":""}],"src":"32209:179:21"},{"body":{"nodeType":"YulBlock","src":"32540:220:21","statements":[{"nodeType":"YulAssignment","src":"32550:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32616:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"32621:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32557:58:21"},"nodeType":"YulFunctionCall","src":"32557:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32550:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32722:3:21"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"32633:88:21"},"nodeType":"YulFunctionCall","src":"32633:93:21"},"nodeType":"YulExpressionStatement","src":"32633:93:21"},{"nodeType":"YulAssignment","src":"32735:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32746:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"32751:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32742:3:21"},"nodeType":"YulFunctionCall","src":"32742:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32735:3:21"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32528:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32536:3:21","type":""}],"src":"32394:366:21"},{"body":{"nodeType":"YulBlock","src":"32937:248:21","statements":[{"nodeType":"YulAssignment","src":"32947:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32959:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32970:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32955:3:21"},"nodeType":"YulFunctionCall","src":"32955:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32947:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32994:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33005:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32990:3:21"},"nodeType":"YulFunctionCall","src":"32990:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33013:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"33019:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33009:3:21"},"nodeType":"YulFunctionCall","src":"33009:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32983:6:21"},"nodeType":"YulFunctionCall","src":"32983:47:21"},"nodeType":"YulExpressionStatement","src":"32983:47:21"},{"nodeType":"YulAssignment","src":"33039:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33173:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33047:124:21"},"nodeType":"YulFunctionCall","src":"33047:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33039:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32917:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32932:4:21","type":""}],"src":"32766:419:21"},{"body":{"nodeType":"YulBlock","src":"33249:40:21","statements":[{"nodeType":"YulAssignment","src":"33260:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33276:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33270:5:21"},"nodeType":"YulFunctionCall","src":"33270:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"33260:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33232:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"33242:6:21","type":""}],"src":"33191:98:21"},{"body":{"nodeType":"YulBlock","src":"33408:34:21","statements":[{"nodeType":"YulAssignment","src":"33418:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"33433:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"33418:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33380:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"33385:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"33396:11:21","type":""}],"src":"33295:147:21"},{"body":{"nodeType":"YulBlock","src":"33556:278:21","statements":[{"nodeType":"YulVariableDeclaration","src":"33566:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33612:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"33580:31:21"},"nodeType":"YulFunctionCall","src":"33580:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"33570:6:21","type":""}]},{"nodeType":"YulAssignment","src":"33627:95:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33710:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"33715:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"33634:75:21"},"nodeType":"YulFunctionCall","src":"33634:88:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33627:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33770:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"33777:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33766:3:21"},"nodeType":"YulFunctionCall","src":"33766:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"33784:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"33789:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"33731:34:21"},"nodeType":"YulFunctionCall","src":"33731:65:21"},"nodeType":"YulExpressionStatement","src":"33731:65:21"},{"nodeType":"YulAssignment","src":"33805:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33816:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"33821:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33812:3:21"},"nodeType":"YulFunctionCall","src":"33812:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33805:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33537:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33544:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33552:3:21","type":""}],"src":"33448:386:21"},{"body":{"nodeType":"YulBlock","src":"33974:137:21","statements":[{"nodeType":"YulAssignment","src":"33985:100:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34072:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"34081:3:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"33992:79:21"},"nodeType":"YulFunctionCall","src":"33992:93:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33985:3:21"}]},{"nodeType":"YulAssignment","src":"34095:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"34102:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34095:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33953:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33959:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33970:3:21","type":""}],"src":"33840:271:21"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint192(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint192_to_t_uint192_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint192(value))\n    }\n\n    function abi_encode_tuple_t_uint192__to_t_uint192__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint192_to_t_uint192_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$894_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$894_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$894_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$894__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$894_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__to_t_bool_t_uint128_t_uint48_t_uint16_t_uint16_t_uint192__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint192_to_t_uint192_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: invalid index\")\n\n    }\n\n    function abi_encode_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a097e8863a3e9f4b8c13fe696dcec86e3547f5d71d7b2210c95a401023651c79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: unstaked alre\")\n\n        mstore(add(memPtr, 32), \"ady\")\n\n    }\n\n    function abi_encode_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3517ab65dc7c85707a4d2e44d8422a198c769b6f04ab06106fa58156352d2336_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint192(x, y) -> diff {\n        x := cleanup_t_uint192(x)\n        y := cleanup_t_uint192(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint48(x, y) -> product {\n        x := cleanup_t_uint48(x)\n        y := cleanup_t_uint48(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint48(product_raw)\n\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint48(x, y) -> sum {\n        x := cleanup_t_uint48(x)\n        y := cleanup_t_uint48(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint128(x, y) -> product {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint128(product_raw)\n\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint128(x, y) -> r {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint192(x, y) -> sum {\n        x := cleanup_t_uint192(x)\n        y := cleanup_t_uint192(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking: penalty BP exceeds limi\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_504fd40739c5d2b3df5a16acb601680ae9e3446141704125267ebd112220f6a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: treasury is t\")\n\n        mstore(add(memPtr, 32), \"he zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e19fac88ecb7e87bdb69eb10aac37fb6fcfa51c9d065bb5adde5af6435aa633_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f(memPtr) {\n\n        mstore(add(memPtr, 0), \"CyberArenaStaking: NON_TRANSFERA\")\n\n        mstore(add(memPtr, 32), \"BLE\")\n\n    }\n\n    function abi_encode_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ac03c1e8ce26aa70a46316ba4c270551d2e02a98a1c4854cb85e8cfe8fcb391f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101735760003560e01c806372f702f3116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e14610455578063ee2b44e414610485578063f0f44260146104a3578063f2fde38b146104bf57610173565b8063a9059cbb146103d4578063bacb4c5714610404578063c8b6cbf71461042057610173565b806372f702f31461031057806388fe2be81461032e5780638da5cb5b1461034a57806395d89b4114610368578063a457c2d714610386578063a5582c3e146103b657610173565b8063313ce56711610130578063313ce5671461024c578063395093511461026a5780633a98ef391461029a57806361d027b3146102b857806370a08231146102d6578063715018a61461030657610173565b806306fdde0314610178578063095ea7b31461019657806318160ddd146101c657806323b872dd146101e45780632932e77a146102145780632e17de7814610230575b600080fd5b6101806104db565b60405161018d9190611f12565b60405180910390f35b6101b060048036038101906101ab9190611fcd565b61056d565b6040516101bd9190612028565b60405180910390f35b6101ce610590565b6040516101db9190612052565b60405180910390f35b6101fe60048036038101906101f9919061206d565b61059a565b60405161020b9190612028565b60405180910390f35b61022e600480360381019061022991906120fa565b6105c9565b005b61024a60048036038101906102459190612127565b6105f1565b005b610254610a3b565b6040516102619190612170565b60405180910390f35b610284600480360381019061027f9190611fcd565b610a44565b6040516102919190612028565b60405180910390f35b6102a2610a7b565b6040516102af91906121be565b60405180910390f35b6102c0610aa5565b6040516102cd91906121e8565b60405180910390f35b6102f060048036038101906102eb9190612203565b610acb565b6040516102fd9190612052565b60405180910390f35b61030e610b13565b005b610318610b27565b604051610325919061228f565b60405180910390f35b610348600480360381019061034391906122f2565b610b4d565b005b610352610edd565b60405161035f91906121e8565b60405180910390f35b610370610f07565b60405161037d9190611f12565b60405180910390f35b6103a0600480360381019061039b9190611fcd565b610f99565b6040516103ad9190612028565b60405180910390f35b6103be611010565b6040516103cb919061232e565b60405180910390f35b6103ee60048036038101906103e99190611fcd565b611024565b6040516103fb9190612028565b60405180910390f35b61041e600480360381019061041991906120fa565b611047565b005b61043a60048036038101906104359190611fcd565b6110ef565b60405161044c96959493929190612379565b60405180910390f35b61046f600480360381019061046a91906123da565b6111c3565b60405161047c9190612052565b60405180910390f35b61048d61124a565b60405161049a919061232e565b60405180910390f35b6104bd60048036038101906104b89190612203565b61125e565b005b6104d960048036038101906104d49190612203565b611350565b005b6060600380546104ea90612449565b80601f016020809104026020016040519081016040528092919081815260200182805461051690612449565b80156105635780601f1061053857610100808354040283529160200191610563565b820191906000526020600020905b81548152906001019060200180831161054657829003601f168201915b5050505050905090565b6000806105786113d3565b90506105858185856113db565b600191505092915050565b6000600254905090565b6000806105a56113d3565b90506105b28582856115a4565b6105bd858585611630565b60019150509392505050565b6105d161166b565b80600960006101000a81548161ffff021916908361ffff16021790555050565b600260065403610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d906124c6565b60405180910390fd5b6002600681905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b990612532565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061071557610714612552565b5b906000526020600020906002020190508060000160009054906101000a900460ff1615610777576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076e906125f3565b60405180910390fd5b6107b3338260000160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166116e9565b8060010160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16600a60008282829054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff166108109190612642565b92506101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060018160000160006101000a81548160ff021916908315150217905550600061087d6118bf565b620151808360000160179054906101000a900461ffff1661ffff166108a2919061268e565b8360000160119054906101000a900465ffffffffffff166108c391906126cb565b65ffffffffffff1611156109a4576127108260000160199054906101000a900461ffff1661ffff168360000160019054906101000a90046fffffffffffffffffffffffffffffffff166109169190612705565b6109209190612771565b6fffffffffffffffffffffffffffffffff1690506109a3600960049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118c79092919063ffffffff16565b5b610a2e33828460000160019054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166109e691906127a2565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118c79092919063ffffffff16565b5050600160068190555050565b60006012905090565b600080610a4f6113d3565b9050610a70818585610a6185896111c3565b610a6b91906127d6565b6113db565b600191505092915050565b600a60009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1681565b600960049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b1b61166b565b610b25600061194d565b565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260065403610b92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b89906124c6565b60405180910390fd5b6002600681905550610bfb3330836fffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a13909392919063ffffffff16565b610c1733826fffffffffffffffffffffffffffffffff16611a9c565b806fffffffffffffffffffffffffffffffff16600a60008282829054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16610c5e919061280a565b92506101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff160217905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405280600015158152602001836fffffffffffffffffffffffffffffffff168152602001610d176118bf565b65ffffffffffff168152602001600960009054906101000a900461ffff1661ffff168152602001600960029054906101000a900461ffff1661ffff168152602001836fffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060408201518160000160116101000a81548165ffffffffffff021916908365ffffffffffff16021790555060608201518160000160176101000a81548161ffff021916908361ffff16021790555060808201518160000160196101000a81548161ffff021916908361ffff16021790555060a08201518160010160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff1602179055505050600160068190555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610f1690612449565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4290612449565b8015610f8f5780601f10610f6457610100808354040283529160200191610f8f565b820191906000526020600020905b815481529060010190602001808311610f7257829003601f168201915b5050505050905090565b600080610fa46113d3565b90506000610fb282866111c3565b905083811015610ff7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fee906128c8565b60405180910390fd5b61100482868684036113db565b60019250505092915050565b600960029054906101000a900461ffff1681565b60008061102f6113d3565b905061103c818585611630565b600191505092915050565b61104f61166b565b6127108161ffff161115611098576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108f9061295a565b60405180910390fd5b80600960026101000a81548161ffff021916908361ffff1602179055507f49df4ae990079b53e42ad090f1fc5b7311dd70675bccd49294082a2ed78d6194816040516110e4919061232e565b60405180910390a150565b6008602052816000526040600020818154811061110b57600080fd5b9060005260206000209060020201600091509150508060000160009054906101000a900460ff16908060000160019054906101000a90046fffffffffffffffffffffffffffffffff16908060000160119054906101000a900465ffffffffffff16908060000160179054906101000a900461ffff16908060000160199054906101000a900461ffff16908060010160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16905086565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600960009054906101000a900461ffff1681565b61126661166b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cc906129ec565b60405180910390fd5b80600960046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcb7ef3e545f5cdb893f5c568ba710fe08f336375a2d9fd66e161033f8fc09ef38160405161134591906121e8565b60405180910390a150565b61135861166b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113be90612a7e565b60405180910390fd5b6113d08161194d565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361144a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144190612b10565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b090612ba2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115979190612052565b60405180910390a3505050565b60006115b084846111c3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461162a578181101561161c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161390612c0e565b60405180910390fd5b61162984848484036113db565b5b50505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166290612ca0565b60405180910390fd5b6116736113d3565b73ffffffffffffffffffffffffffffffffffffffff16611691610edd565b73ffffffffffffffffffffffffffffffffffffffff16146116e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116de90612d0c565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174f90612d9e565b60405180910390fd5b61176482600083611bfb565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156117ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e190612e30565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461184191906127a2565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516118a69190612052565b60405180910390a36118ba83600084611c00565b505050565b600042905090565b6119488363a9059cbb60e01b84846040516024016118e6929190612e50565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c05565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611a96846323b872dd60e01b858585604051602401611a3493929190612e79565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c05565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0290612efc565b60405180910390fd5b611b1760008383611bfb565b8060026000828254611b2991906127d6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b7e91906127d6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611be39190612052565b60405180910390a3611bf760008383611c00565b5050565b505050565b505050565b6000611c67826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611ccc9092919063ffffffff16565b9050600081511115611cc75780806020019051810190611c879190612f48565b611cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbd90612fe7565b60405180910390fd5b5b505050565b6060611cdb8484600085611ce4565b90509392505050565b606082471015611d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2090613079565b60405180910390fd5b611d3285611df8565b611d71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d68906130e5565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d9a919061314c565b60006040518083038185875af1925050503d8060008114611dd7576040519150601f19603f3d011682016040523d82523d6000602084013e611ddc565b606091505b5091509150611dec828286611e1b565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611e2b57829050611e7b565b600083511115611e3e5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e729190611f12565b60405180910390fd5b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ebc578082015181840152602081019050611ea1565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ee482611e82565b611eee8185611e8d565b9350611efe818560208601611e9e565b611f0781611ec8565b840191505092915050565b60006020820190508181036000830152611f2c8184611ed9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f6482611f39565b9050919050565b611f7481611f59565b8114611f7f57600080fd5b50565b600081359050611f9181611f6b565b92915050565b6000819050919050565b611faa81611f97565b8114611fb557600080fd5b50565b600081359050611fc781611fa1565b92915050565b60008060408385031215611fe457611fe3611f34565b5b6000611ff285828601611f82565b925050602061200385828601611fb8565b9150509250929050565b60008115159050919050565b6120228161200d565b82525050565b600060208201905061203d6000830184612019565b92915050565b61204c81611f97565b82525050565b60006020820190506120676000830184612043565b92915050565b60008060006060848603121561208657612085611f34565b5b600061209486828701611f82565b93505060206120a586828701611f82565b92505060406120b686828701611fb8565b9150509250925092565b600061ffff82169050919050565b6120d7816120c0565b81146120e257600080fd5b50565b6000813590506120f4816120ce565b92915050565b6000602082840312156121105761210f611f34565b5b600061211e848285016120e5565b91505092915050565b60006020828403121561213d5761213c611f34565b5b600061214b84828501611fb8565b91505092915050565b600060ff82169050919050565b61216a81612154565b82525050565b60006020820190506121856000830184612161565b92915050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6121b88161218b565b82525050565b60006020820190506121d360008301846121af565b92915050565b6121e281611f59565b82525050565b60006020820190506121fd60008301846121d9565b92915050565b60006020828403121561221957612218611f34565b5b600061222784828501611f82565b91505092915050565b6000819050919050565b600061225561225061224b84611f39565b612230565b611f39565b9050919050565b60006122678261223a565b9050919050565b60006122798261225c565b9050919050565b6122898161226e565b82525050565b60006020820190506122a46000830184612280565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6122cf816122aa565b81146122da57600080fd5b50565b6000813590506122ec816122c6565b92915050565b60006020828403121561230857612307611f34565b5b6000612316848285016122dd565b91505092915050565b612328816120c0565b82525050565b6000602082019050612343600083018461231f565b92915050565b612352816122aa565b82525050565b600065ffffffffffff82169050919050565b61237381612358565b82525050565b600060c08201905061238e6000830189612019565b61239b6020830188612349565b6123a8604083018761236a565b6123b5606083018661231f565b6123c2608083018561231f565b6123cf60a08301846121af565b979650505050505050565b600080604083850312156123f1576123f0611f34565b5b60006123ff85828601611f82565b925050602061241085828601611f82565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061246157607f821691505b6020821081036124745761247361241a565b5b50919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006124b0601f83611e8d565b91506124bb8261247a565b602082019050919050565b600060208201905081810360008301526124df816124a3565b9050919050565b7f43796265724172656e615374616b696e673a20696e76616c696420696e646578600082015250565b600061251c602083611e8d565b9150612527826124e6565b602082019050919050565b6000602082019050818103600083015261254b8161250f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f43796265724172656e615374616b696e673a20756e7374616b656420616c726560008201527f6164790000000000000000000000000000000000000000000000000000000000602082015250565b60006125dd602383611e8d565b91506125e882612581565b604082019050919050565b6000602082019050818103600083015261260c816125d0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061264d8261218b565b91506126588361218b565b9250828203905077ffffffffffffffffffffffffffffffffffffffffffffffff81111561268857612687612613565b5b92915050565b600061269982612358565b91506126a483612358565b92508282026126b281612358565b91508082146126c4576126c3612613565b5b5092915050565b60006126d682612358565b91506126e183612358565b9250828201905065ffffffffffff8111156126ff576126fe612613565b5b92915050565b6000612710826122aa565b915061271b836122aa565b9250828202612729816122aa565b915080821461273b5761273a612613565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061277c826122aa565b9150612787836122aa565b92508261279757612796612742565b5b828204905092915050565b60006127ad82611f97565b91506127b883611f97565b92508282039050818111156127d0576127cf612613565b5b92915050565b60006127e182611f97565b91506127ec83611f97565b925082820190508082111561280457612803612613565b5b92915050565b60006128158261218b565b91506128208361218b565b9250828201905077ffffffffffffffffffffffffffffffffffffffffffffffff8111156128505761284f612613565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006128b2602583611e8d565b91506128bd82612856565b604082019050919050565b600060208201905081810360008301526128e1816128a5565b9050919050565b7f5374616b696e673a2070656e616c74792042502065786365656473206c696d6960008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612944602183611e8d565b915061294f826128e8565b604082019050919050565b6000602082019050818103600083015261297381612937565b9050919050565b7f43796265724172656e615374616b696e673a207472656173757279206973207460008201527f6865207a65726f20616464726573730000000000000000000000000000000000602082015250565b60006129d6602f83611e8d565b91506129e18261297a565b604082019050919050565b60006020820190508181036000830152612a05816129c9565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612a68602683611e8d565b9150612a7382612a0c565b604082019050919050565b60006020820190508181036000830152612a9781612a5b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612afa602483611e8d565b9150612b0582612a9e565b604082019050919050565b60006020820190508181036000830152612b2981612aed565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612b8c602283611e8d565b9150612b9782612b30565b604082019050919050565b60006020820190508181036000830152612bbb81612b7f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612bf8601d83611e8d565b9150612c0382612bc2565b602082019050919050565b60006020820190508181036000830152612c2781612beb565b9050919050565b7f43796265724172656e615374616b696e673a204e4f4e5f5452414e534645524160008201527f424c450000000000000000000000000000000000000000000000000000000000602082015250565b6000612c8a602383611e8d565b9150612c9582612c2e565b604082019050919050565b60006020820190508181036000830152612cb981612c7d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612cf6602083611e8d565b9150612d0182612cc0565b602082019050919050565b60006020820190508181036000830152612d2581612ce9565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612d88602183611e8d565b9150612d9382612d2c565b604082019050919050565b60006020820190508181036000830152612db781612d7b565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612e1a602283611e8d565b9150612e2582612dbe565b604082019050919050565b60006020820190508181036000830152612e4981612e0d565b9050919050565b6000604082019050612e6560008301856121d9565b612e726020830184612043565b9392505050565b6000606082019050612e8e60008301866121d9565b612e9b60208301856121d9565b612ea86040830184612043565b949350505050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000612ee6601f83611e8d565b9150612ef182612eb0565b602082019050919050565b60006020820190508181036000830152612f1581612ed9565b9050919050565b612f258161200d565b8114612f3057600080fd5b50565b600081519050612f4281612f1c565b92915050565b600060208284031215612f5e57612f5d611f34565b5b6000612f6c84828501612f33565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612fd1602a83611e8d565b9150612fdc82612f75565b604082019050919050565b6000602082019050818103600083015261300081612fc4565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000613063602683611e8d565b915061306e82613007565b604082019050919050565b6000602082019050818103600083015261309281613056565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006130cf601d83611e8d565b91506130da82613099565b602082019050919050565b600060208201905081810360008301526130fe816130c2565b9050919050565b600081519050919050565b600081905092915050565b600061312682613105565b6131308185613110565b9350613140818560208601611e9e565b80840191505092915050565b6000613158828461311b565b91508190509291505056fea26469706673582212204a196babe78c8359d91d83d46570bf24395c91c3c3105a6ccf53ad990de63e7164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xEE2B44E4 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4BF JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xBACB4C57 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xC8B6CBF7 EQ PUSH2 0x420 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x88FE2BE8 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xA5582C3E EQ PUSH2 0x3B6 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x306 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2932E77A EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0xACB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH2 0xB13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x228F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0xB4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BE PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x23DA JUMP JUMPDEST PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48D PUSH2 0x124A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x1350 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4EA SWAP1 PUSH2 0x2449 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x516 SWAP1 PUSH2 0x2449 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x563 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x538 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x563 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x546 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x578 PUSH2 0x13D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x585 DUP2 DUP6 DUP6 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5A5 PUSH2 0x13D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x5B2 DUP6 DUP3 DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x5BD DUP6 DUP6 DUP6 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5D1 PUSH2 0x166B JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62D SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x2532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x715 JUMPI PUSH2 0x714 PUSH2 0x2552 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76E SWAP1 PUSH2 0x25F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B3 CALLER DUP3 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E9 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x2642 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x87D PUSH2 0x18BF JUMP JUMPDEST PUSH3 0x15180 DUP4 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x268E JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x11 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x8C3 SWAP2 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x9A4 JUMPI PUSH2 0x2710 DUP3 PUSH1 0x0 ADD PUSH1 0x19 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP4 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x916 SWAP2 SWAP1 PUSH2 0x2705 JUMP JUMPDEST PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x2771 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x9A3 PUSH1 0x9 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18C7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xA2E CALLER DUP3 DUP5 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E6 SWAP2 SWAP1 PUSH2 0x27A2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18C7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA4F PUSH2 0x13D3 JUMP JUMPDEST SWAP1 POP PUSH2 0xA70 DUP2 DUP6 DUP6 PUSH2 0xA61 DUP6 DUP10 PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1B PUSH2 0x166B JUMP JUMPDEST PUSH2 0xB25 PUSH1 0x0 PUSH2 0x194D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB89 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0xBFB CALLER ADDRESS DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A13 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC17 CALLER DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A9C JUMP JUMPDEST DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC5E SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD17 PUSH2 0x18BF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x11 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x19 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF16 SWAP1 PUSH2 0x2449 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF42 SWAP1 PUSH2 0x2449 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF8F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF64 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF8F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF72 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFA4 PUSH2 0x13D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFB2 DUP3 DUP7 PUSH2 0x11C3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEE SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1004 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x102F PUSH2 0x13D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x103C DUP2 DUP6 DUP6 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x104F PUSH2 0x166B JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x1098 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108F SWAP1 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x49DF4AE990079B53E42AD090F1FC5B7311DD70675BCCD49294082A2ED78D6194 DUP2 PUSH1 0x40 MLOAD PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x11 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x19 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1266 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CC SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCB7EF3E545F5CDB893F5C568BA710FE08F336375A2D9FD66E161033F8FC09EF3 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1345 SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1358 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BE SWAP1 PUSH2 0x2A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13D0 DUP2 PUSH2 0x194D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1441 SWAP1 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B0 SWAP1 PUSH2 0x2BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1597 SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B0 DUP5 DUP5 PUSH2 0x11C3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x162A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x161C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1613 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1629 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x13DB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1662 SWAP1 PUSH2 0x2CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1673 PUSH2 0x13D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1691 PUSH2 0xEDD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DE SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1758 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174F SWAP1 PUSH2 0x2D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1764 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E1 SWAP1 PUSH2 0x2E30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1841 SWAP2 SWAP1 PUSH2 0x27A2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x18A6 SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x18BA DUP4 PUSH1 0x0 DUP5 PUSH2 0x1C00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1948 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18E6 SWAP3 SWAP2 SWAP1 PUSH2 0x2E50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C05 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1A96 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A34 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C05 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B02 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B17 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1BFB JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B29 SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B7E SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BE3 SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1BF7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C00 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C67 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CCC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1CC7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C87 SWAP2 SWAP1 PUSH2 0x2F48 JUMP JUMPDEST PUSH2 0x1CC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CBD SWAP1 PUSH2 0x2FE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CDB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1CE4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D20 SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D32 DUP6 PUSH2 0x1DF8 JUMP JUMPDEST PUSH2 0x1D71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D68 SWAP1 PUSH2 0x30E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D9A SWAP2 SWAP1 PUSH2 0x314C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DD7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DEC DUP3 DUP3 DUP7 PUSH2 0x1E1B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E2B JUMPI DUP3 SWAP1 POP PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1E3E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E72 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE4 DUP3 PUSH2 0x1E82 JUMP JUMPDEST PUSH2 0x1EEE DUP2 DUP6 PUSH2 0x1E8D JUMP JUMPDEST SWAP4 POP PUSH2 0x1EFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x1F07 DUP2 PUSH2 0x1EC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F2C DUP2 DUP5 PUSH2 0x1ED9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F64 DUP3 PUSH2 0x1F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F74 DUP2 PUSH2 0x1F59 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F91 DUP2 PUSH2 0x1F6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAA DUP2 PUSH2 0x1F97 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC7 DUP2 PUSH2 0x1FA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE4 JUMPI PUSH2 0x1FE3 PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2003 DUP6 DUP3 DUP7 ADD PUSH2 0x1FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2022 DUP2 PUSH2 0x200D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x203D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2019 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x204C DUP2 PUSH2 0x1F97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2067 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2043 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2086 JUMPI PUSH2 0x2085 PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2094 DUP7 DUP3 DUP8 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20A5 DUP7 DUP3 DUP8 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20B6 DUP7 DUP3 DUP8 ADD PUSH2 0x1FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D7 DUP2 PUSH2 0x20C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20F4 DUP2 PUSH2 0x20CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2110 JUMPI PUSH2 0x210F PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x211E DUP5 DUP3 DUP6 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x213D JUMPI PUSH2 0x213C PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x214B DUP5 DUP3 DUP6 ADD PUSH2 0x1FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216A DUP2 PUSH2 0x2154 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2185 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B8 DUP2 PUSH2 0x218B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21E2 DUP2 PUSH2 0x1F59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2219 JUMPI PUSH2 0x2218 PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2227 DUP5 DUP3 DUP6 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2255 PUSH2 0x2250 PUSH2 0x224B DUP5 PUSH2 0x1F39 JUMP JUMPDEST PUSH2 0x2230 JUMP JUMPDEST PUSH2 0x1F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2267 DUP3 PUSH2 0x223A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2279 DUP3 PUSH2 0x225C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2289 DUP2 PUSH2 0x226E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CF DUP2 PUSH2 0x22AA JUMP JUMPDEST DUP2 EQ PUSH2 0x22DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22EC DUP2 PUSH2 0x22C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2308 JUMPI PUSH2 0x2307 PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2316 DUP5 DUP3 DUP6 ADD PUSH2 0x22DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2328 DUP2 PUSH2 0x20C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2343 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x231F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2352 DUP2 PUSH2 0x22AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2373 DUP2 PUSH2 0x2358 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x238E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x239B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2349 JUMP JUMPDEST PUSH2 0x23A8 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x236A JUMP JUMPDEST PUSH2 0x23B5 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x231F JUMP JUMPDEST PUSH2 0x23C2 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x231F JUMP JUMPDEST PUSH2 0x23CF PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x21AF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23F1 JUMPI PUSH2 0x23F0 PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23FF DUP6 DUP3 DUP7 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2410 DUP6 DUP3 DUP7 ADD PUSH2 0x1F82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2461 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2474 JUMPI PUSH2 0x2473 PUSH2 0x241A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B0 PUSH1 0x1F DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x24BB DUP3 PUSH2 0x247A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24DF DUP2 PUSH2 0x24A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A20696E76616C696420696E646578 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251C PUSH1 0x20 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2527 DUP3 PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x254B DUP2 PUSH2 0x250F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A20756E7374616B656420616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164790000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DD PUSH1 0x23 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x25E8 DUP3 PUSH2 0x2581 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x260C DUP2 PUSH2 0x25D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x264D DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x2658 DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2688 JUMPI PUSH2 0x2687 PUSH2 0x2613 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2699 DUP3 PUSH2 0x2358 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A4 DUP4 PUSH2 0x2358 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x26B2 DUP2 PUSH2 0x2358 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x26C4 JUMPI PUSH2 0x26C3 PUSH2 0x2613 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D6 DUP3 PUSH2 0x2358 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E1 DUP4 PUSH2 0x2358 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH6 0xFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26FF JUMPI PUSH2 0x26FE PUSH2 0x2613 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 DUP3 PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP PUSH2 0x271B DUP4 PUSH2 0x22AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2729 DUP2 PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x273B JUMPI PUSH2 0x273A PUSH2 0x2613 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x277C DUP3 PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP PUSH2 0x2787 DUP4 PUSH2 0x22AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2797 JUMPI PUSH2 0x2796 PUSH2 0x2742 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27AD DUP3 PUSH2 0x1F97 JUMP JUMPDEST SWAP2 POP PUSH2 0x27B8 DUP4 PUSH2 0x1F97 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x27D0 JUMPI PUSH2 0x27CF PUSH2 0x2613 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E1 DUP3 PUSH2 0x1F97 JUMP JUMPDEST SWAP2 POP PUSH2 0x27EC DUP4 PUSH2 0x1F97 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2804 JUMPI PUSH2 0x2803 PUSH2 0x2613 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2815 DUP3 PUSH2 0x218B JUMP JUMPDEST SWAP2 POP PUSH2 0x2820 DUP4 PUSH2 0x218B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2850 JUMPI PUSH2 0x284F PUSH2 0x2613 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B2 PUSH1 0x25 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x28BD DUP3 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28E1 DUP2 PUSH2 0x28A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A2070656E616C74792042502065786365656473206C696D69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2944 PUSH1 0x21 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x294F DUP3 PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2973 DUP2 PUSH2 0x2937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A2074726561737572792069732074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6865207A65726F20616464726573730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D6 PUSH1 0x2F DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x29E1 DUP3 PUSH2 0x297A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A05 DUP2 PUSH2 0x29C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A68 PUSH1 0x26 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A73 DUP3 PUSH2 0x2A0C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A97 DUP2 PUSH2 0x2A5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFA PUSH1 0x24 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B05 DUP3 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B29 DUP2 PUSH2 0x2AED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8C PUSH1 0x22 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B97 DUP3 PUSH2 0x2B30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BBB DUP2 PUSH2 0x2B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF8 PUSH1 0x1D DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2C03 DUP3 PUSH2 0x2BC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C27 DUP2 PUSH2 0x2BEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43796265724172656E615374616B696E673A204E4F4E5F5452414E5346455241 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x424C450000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8A PUSH1 0x23 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2C95 DUP3 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CB9 DUP2 PUSH2 0x2C7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF6 PUSH1 0x20 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2D01 DUP3 PUSH2 0x2CC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D25 DUP2 PUSH2 0x2CE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D88 PUSH1 0x21 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2D93 DUP3 PUSH2 0x2D2C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DB7 DUP2 PUSH2 0x2D7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1A PUSH1 0x22 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2E25 DUP3 PUSH2 0x2DBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E49 DUP2 PUSH2 0x2E0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E65 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x2E72 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2043 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E8E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x2E9B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x2EA8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2043 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE6 PUSH1 0x1F DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF1 DUP3 PUSH2 0x2EB0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F15 DUP2 PUSH2 0x2ED9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F25 DUP2 PUSH2 0x200D JUMP JUMPDEST DUP2 EQ PUSH2 0x2F30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F42 DUP2 PUSH2 0x2F1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F5E JUMPI PUSH2 0x2F5D PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F6C DUP5 DUP3 DUP6 ADD PUSH2 0x2F33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD1 PUSH1 0x2A DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2FDC DUP3 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3000 DUP2 PUSH2 0x2FC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3063 PUSH1 0x26 DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x306E DUP3 PUSH2 0x3007 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3092 DUP2 PUSH2 0x3056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30CF PUSH1 0x1D DUP4 PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP PUSH2 0x30DA DUP3 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30FE DUP2 PUSH2 0x30C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3126 DUP3 PUSH2 0x3105 JUMP JUMPDEST PUSH2 0x3130 DUP2 DUP6 PUSH2 0x3110 JUMP JUMPDEST SWAP4 POP PUSH2 0x3140 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3158 DUP3 DUP5 PUSH2 0x311B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A NOT PUSH12 0xABE78C8359D91D83D46570BF 0x24 CODECOPY 0x5C SWAP2 0xC3 0xC3 LT GAS PUSH13 0xCF53AD990DE63E7164736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"316:4464:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3651:107:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2661:849;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3093:91:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;839:26:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;783:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;444:26:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2075:404;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;680:23:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3886:211:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;528:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;3976:149:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;609:25:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4206:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2156:98:3;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;3651:107:20:-;1094:13:0;:11;:13::i;:::-;3739:12:20::1;3725:11;;:26;;;;;;;;;;;;;;;;;;3651:107:::0;:::o;2661:849::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2753:7:20::1;:19;2761:10;2753:19;;;;;;;;;;;;;;;:26;;;;2739:11;:40;2731:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2826:22;2851:7;:19;2859:10;2851:19;;;;;;;;;;;;;;;2871:11;2851:32;;;;;;;;:::i;:::-;;;;;;;;;;;;2826:57;;2902:8;:17;;;;;;;;;;;;2901:18;2893:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2970:34;2976:10;2988:8;:15;;;;;;;;;;;;2970:34;;:5;:34::i;:::-;3029:8;:15;;;;;;;;;;;;3014:11;;:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3074:4;3054:8;:17;;;:24;;;;;;;;;;;;;;;;;;3153:21;3258:16;:14;:16::i;:::-;3250:5;3226:8;:20;;;;;;;;;;;;3219:28;;:36;;;;:::i;:::-;3192:8;:24;;;;;;;;;;;;:63;;;;:::i;:::-;:82;;;3188:235;;;3345:3;3324:8;:18;;;;;;;;;;;;3306:36;;:8;:15;;;;;;;;;;;;:36;;;;:::i;:::-;:42;;;;:::i;:::-;3290:58;;;;3362:50;3388:8;;;;;;;;;;;3398:13;3362:12;;;;;;;;;;;:25;;;;:50;;;;;:::i;:::-;3188:235;3433:70;3459:10;3489:13;3471:8;:15;;;;;;;;;;;;:31;;;;;;:::i;:::-;3433:12;;;;;;;;;;;:25;;;;:70;;;;;:::i;:::-;2721:789;;1701:1:2::0;2628:7;:22;;;;2661:849:20;:::o;3093:91:3:-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;839:26:20:-;;;;;;;;;;;;;:::o;783:23::-;;;;;;;;;;;;;:::o;3408:125:3:-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;444:26:20:-;;;;;;;;;;;;;:::o;2075:404::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2139:65:20::1;2169:10;2189:4;2196:7;2139:65;;:12;;;;;;;;;;;:29;;;;:65;;;;;;:::i;:::-;2215:26;2221:10;2233:7;2215:26;;:5;:26::i;:::-;2267:7;2252:22;;:11;;:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2284:7;:19;2292:10;2284:19;;;;;;;;;;;;;;;2309:162;;;;;;;;2328:5;2309:162;;;;;;2347:7;2309:162;;;;;;2375:16;:14;:16::i;:::-;2309:162;;;;;;2406:11;;;;;;;;;;;2309:162;;;;;;2431:9;;;;;;;;;;;2309:162;;;;;;2454:7;2309:162;;;;;;::::0;2284:188:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1701:1:2::0;2628:7;:22;;;;2075:404:20;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2367:102:3:-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;680:23:20:-;;;;;;;;;;;;;:::o;3729:189:3:-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;3886:211:20:-;1094:13:0;:11;:13::i;:::-;3978:3:20::1;3964:10;:17;;;;3956:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4041:10;4029:9;;:22;;;;;;;;;;;;;;;;;;4066:24;4079:10;4066:24;;;;;;:::i;:::-;;;;;;;;3886:211:::0;:::o;528:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3976:149:3:-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;609:25:20:-;;;;;;;;;;;;;:::o;4206:227::-;1094:13:0;:11;:13::i;:::-;4304:1:20::1;4283:23;;:9;:23;;::::0;4275:83:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4379:9;4368:8;;:20;;;;;;;;;;;;;;;;;;4404:22;4416:9;4404:22;;;;;;:::i;:::-;;;;;;;;4206:227:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;640:96:12:-;693:7;719:10;712:17;;640:96;:::o;10110:370:3:-;10258:1;10241:19;;:5;:19;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10881:321;10761:441;;;:::o;4493:144:20:-;4585:45;;;;;;;;;;:::i;:::-;;;;;;;;1359:130:0;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;9111:576:3:-;9213:1;9194:21;;:7;:21;;;9186:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9264:49;9285:7;9302:1;9306:6;9264:20;:49::i;:::-;9324:22;9349:9;:18;9359:7;9349:18;;;;;;;;;;;;;;;;9324:43;;9403:6;9385:14;:24;;9377:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9520:6;9503:14;:23;9482:9;:18;9492:7;9482:18;;;;;;;;;;;;;;;:44;;;;9562:6;9546:12;;:22;;;;;;;:::i;:::-;;;;;;;;9610:1;9584:37;;9593:7;9584:37;;;9614:6;9584:37;;;;;;:::i;:::-;;;;;;;;9632:48;9652:7;9669:1;9673:6;9632:19;:48::i;:::-;9176:511;9111:576;;:::o;4643:135:20:-;4731:7;4756:15;4749:22;;4643:135;:::o;763:205:10:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;974:241:10:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;8402:389:3:-;8504:1;8485:21;;:7;:21;;;8477:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;;;;;8667:6;8645:9;:18;8655:7;8645:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8709:7;8688:37;;8705:1;8688:37;;;8718:6;8688:37;;;;;;:::i;:::-;;;;;;;;8736:48;8764:1;8768:7;8777:6;8736:19;:48::i;:::-;8402:389;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;3747:706:10:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3861:223:11:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:742::-;7707:12;7735:7;7731:566;;;7765:10;7758:17;;;;7731:566;7896:1;7876:10;:17;:21;7872:415;;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:742;;;;;;:::o;7:99:21:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:89::-;4459:7;4499:6;4492:5;4488:18;4477:29;;4423:89;;;:::o;4518:120::-;4590:23;4607:5;4590:23;:::i;:::-;4583:5;4580:34;4570:62;;4628:1;4625;4618:12;4570:62;4518:120;:::o;4644:137::-;4689:5;4727:6;4714:20;4705:29;;4743:32;4769:5;4743:32;:::i;:::-;4644:137;;;;:::o;4787:327::-;4845:6;4894:2;4882:9;4873:7;4869:23;4865:32;4862:119;;;4900:79;;:::i;:::-;4862:119;5020:1;5045:52;5089:7;5080:6;5069:9;5065:22;5045:52;:::i;:::-;5035:62;;4991:116;4787:327;;;;:::o;5120:329::-;5179:6;5228:2;5216:9;5207:7;5203:23;5199:32;5196:119;;;5234:79;;:::i;:::-;5196:119;5354:1;5379:53;5424:7;5415:6;5404:9;5400:22;5379:53;:::i;:::-;5369:63;;5325:117;5120:329;;;;:::o;5455:86::-;5490:7;5530:4;5523:5;5519:16;5508:27;;5455:86;;;:::o;5547:112::-;5630:22;5646:5;5630:22;:::i;:::-;5625:3;5618:35;5547:112;;:::o;5665:214::-;5754:4;5792:2;5781:9;5777:18;5769:26;;5805:67;5869:1;5858:9;5854:17;5845:6;5805:67;:::i;:::-;5665:214;;;;:::o;5885:134::-;5922:7;5962:50;5955:5;5951:62;5940:73;;5885:134;;;:::o;6025:118::-;6112:24;6130:5;6112:24;:::i;:::-;6107:3;6100:37;6025:118;;:::o;6149:222::-;6242:4;6280:2;6269:9;6265:18;6257:26;;6293:71;6361:1;6350:9;6346:17;6337:6;6293:71;:::i;:::-;6149:222;;;;:::o;6377:118::-;6464:24;6482:5;6464:24;:::i;:::-;6459:3;6452:37;6377:118;;:::o;6501:222::-;6594:4;6632:2;6621:9;6617:18;6609:26;;6645:71;6713:1;6702:9;6698:17;6689:6;6645:71;:::i;:::-;6501:222;;;;:::o;6729:329::-;6788:6;6837:2;6825:9;6816:7;6812:23;6808:32;6805:119;;;6843:79;;:::i;:::-;6805:119;6963:1;6988:53;7033:7;7024:6;7013:9;7009:22;6988:53;:::i;:::-;6978:63;;6934:117;6729:329;;;;:::o;7064:60::-;7092:3;7113:5;7106:12;;7064:60;;;:::o;7130:142::-;7180:9;7213:53;7231:34;7240:24;7258:5;7240:24;:::i;:::-;7231:34;:::i;:::-;7213:53;:::i;:::-;7200:66;;7130:142;;;:::o;7278:126::-;7328:9;7361:37;7392:5;7361:37;:::i;:::-;7348:50;;7278:126;;;:::o;7410:140::-;7474:9;7507:37;7538:5;7507:37;:::i;:::-;7494:50;;7410:140;;;:::o;7556:159::-;7657:51;7702:5;7657:51;:::i;:::-;7652:3;7645:64;7556:159;;:::o;7721:250::-;7828:4;7866:2;7855:9;7851:18;7843:26;;7879:85;7961:1;7950:9;7946:17;7937:6;7879:85;:::i;:::-;7721:250;;;;:::o;7977:118::-;8014:7;8054:34;8047:5;8043:46;8032:57;;7977:118;;;:::o;8101:122::-;8174:24;8192:5;8174:24;:::i;:::-;8167:5;8164:35;8154:63;;8213:1;8210;8203:12;8154:63;8101:122;:::o;8229:139::-;8275:5;8313:6;8300:20;8291:29;;8329:33;8356:5;8329:33;:::i;:::-;8229:139;;;;:::o;8374:329::-;8433:6;8482:2;8470:9;8461:7;8457:23;8453:32;8450:119;;;8488:79;;:::i;:::-;8450:119;8608:1;8633:53;8678:7;8669:6;8658:9;8654:22;8633:53;:::i;:::-;8623:63;;8579:117;8374:329;;;;:::o;8709:115::-;8794:23;8811:5;8794:23;:::i;:::-;8789:3;8782:36;8709:115;;:::o;8830:218::-;8921:4;8959:2;8948:9;8944:18;8936:26;;8972:69;9038:1;9027:9;9023:17;9014:6;8972:69;:::i;:::-;8830:218;;;;:::o;9054:118::-;9141:24;9159:5;9141:24;:::i;:::-;9136:3;9129:37;9054:118;;:::o;9178:97::-;9214:7;9254:14;9247:5;9243:26;9232:37;;9178:97;;;:::o;9281:115::-;9366:23;9383:5;9366:23;:::i;:::-;9361:3;9354:36;9281:115;;:::o;9402:751::-;9623:4;9661:3;9650:9;9646:19;9638:27;;9675:65;9737:1;9726:9;9722:17;9713:6;9675:65;:::i;:::-;9750:72;9818:2;9807:9;9803:18;9794:6;9750:72;:::i;:::-;9832:70;9898:2;9887:9;9883:18;9874:6;9832:70;:::i;:::-;9912;9978:2;9967:9;9963:18;9954:6;9912:70;:::i;:::-;9992:71;10058:3;10047:9;10043:19;10034:6;9992:71;:::i;:::-;10073:73;10141:3;10130:9;10126:19;10117:6;10073:73;:::i;:::-;9402:751;;;;;;;;;:::o;10159:474::-;10227:6;10235;10284:2;10272:9;10263:7;10259:23;10255:32;10252:119;;;10290:79;;:::i;:::-;10252:119;10410:1;10435:53;10480:7;10471:6;10460:9;10456:22;10435:53;:::i;:::-;10425:63;;10381:117;10537:2;10563:53;10608:7;10599:6;10588:9;10584:22;10563:53;:::i;:::-;10553:63;;10508:118;10159:474;;;;;:::o;10639:180::-;10687:77;10684:1;10677:88;10784:4;10781:1;10774:15;10808:4;10805:1;10798:15;10825:320;10869:6;10906:1;10900:4;10896:12;10886:22;;10953:1;10947:4;10943:12;10974:18;10964:81;;11030:4;11022:6;11018:17;11008:27;;10964:81;11092:2;11084:6;11081:14;11061:18;11058:38;11055:84;;11111:18;;:::i;:::-;11055:84;10876:269;10825:320;;;:::o;11151:181::-;11291:33;11287:1;11279:6;11275:14;11268:57;11151:181;:::o;11338:366::-;11480:3;11501:67;11565:2;11560:3;11501:67;:::i;:::-;11494:74;;11577:93;11666:3;11577:93;:::i;:::-;11695:2;11690:3;11686:12;11679:19;;11338:366;;;:::o;11710:419::-;11876:4;11914:2;11903:9;11899:18;11891:26;;11963:9;11957:4;11953:20;11949:1;11938:9;11934:17;11927:47;11991:131;12117:4;11991:131;:::i;:::-;11983:139;;11710:419;;;:::o;12135:182::-;12275:34;12271:1;12263:6;12259:14;12252:58;12135:182;:::o;12323:366::-;12465:3;12486:67;12550:2;12545:3;12486:67;:::i;:::-;12479:74;;12562:93;12651:3;12562:93;:::i;:::-;12680:2;12675:3;12671:12;12664:19;;12323:366;;;:::o;12695:419::-;12861:4;12899:2;12888:9;12884:18;12876:26;;12948:9;12942:4;12938:20;12934:1;12923:9;12919:17;12912:47;12976:131;13102:4;12976:131;:::i;:::-;12968:139;;12695:419;;;:::o;13120:180::-;13168:77;13165:1;13158:88;13265:4;13262:1;13255:15;13289:4;13286:1;13279:15;13306:222;13446:34;13442:1;13434:6;13430:14;13423:58;13515:5;13510:2;13502:6;13498:15;13491:30;13306:222;:::o;13534:366::-;13676:3;13697:67;13761:2;13756:3;13697:67;:::i;:::-;13690:74;;13773:93;13862:3;13773:93;:::i;:::-;13891:2;13886:3;13882:12;13875:19;;13534:366;;;:::o;13906:419::-;14072:4;14110:2;14099:9;14095:18;14087:26;;14159:9;14153:4;14149:20;14145:1;14134:9;14130:17;14123:47;14187:131;14313:4;14187:131;:::i;:::-;14179:139;;13906:419;;;:::o;14331:180::-;14379:77;14376:1;14369:88;14476:4;14473:1;14466:15;14500:4;14497:1;14490:15;14517:243;14557:4;14577:20;14595:1;14577:20;:::i;:::-;14572:25;;14611:20;14629:1;14611:20;:::i;:::-;14606:25;;14655:1;14652;14648:9;14640:17;;14679:50;14673:4;14670:60;14667:86;;;14733:18;;:::i;:::-;14667:86;14517:243;;;;:::o;14766:275::-;14805:7;14828:19;14845:1;14828:19;:::i;:::-;14823:24;;14861:19;14878:1;14861:19;:::i;:::-;14856:24;;14915:1;14912;14908:9;14937:29;14954:11;14937:29;:::i;:::-;14926:40;;14998:11;14989:7;14986:24;14976:58;;15014:18;;:::i;:::-;14976:58;14813:228;14766:275;;;;:::o;15047:201::-;15086:3;15105:19;15122:1;15105:19;:::i;:::-;15100:24;;15138:19;15155:1;15138:19;:::i;:::-;15133:24;;15180:1;15177;15173:9;15166:16;;15203:14;15198:3;15195:23;15192:49;;;15221:18;;:::i;:::-;15192:49;15047:201;;;;:::o;15254:279::-;15294:7;15317:20;15335:1;15317:20;:::i;:::-;15312:25;;15351:20;15369:1;15351:20;:::i;:::-;15346:25;;15406:1;15403;15399:9;15428:30;15446:11;15428:30;:::i;:::-;15417:41;;15490:11;15481:7;15478:24;15468:58;;15506:18;;:::i;:::-;15468:58;15302:231;15254:279;;;;:::o;15539:180::-;15587:77;15584:1;15577:88;15684:4;15681:1;15674:15;15708:4;15705:1;15698:15;15725:185;15765:1;15782:20;15800:1;15782:20;:::i;:::-;15777:25;;15816:20;15834:1;15816:20;:::i;:::-;15811:25;;15855:1;15845:35;;15860:18;;:::i;:::-;15845:35;15902:1;15899;15895:9;15890:14;;15725:185;;;;:::o;15916:194::-;15956:4;15976:20;15994:1;15976:20;:::i;:::-;15971:25;;16010:20;16028:1;16010:20;:::i;:::-;16005:25;;16054:1;16051;16047:9;16039:17;;16078:1;16072:4;16069:11;16066:37;;;16083:18;;:::i;:::-;16066:37;15916:194;;;;:::o;16116:191::-;16156:3;16175:20;16193:1;16175:20;:::i;:::-;16170:25;;16209:20;16227:1;16209:20;:::i;:::-;16204:25;;16252:1;16249;16245:9;16238:16;;16273:3;16270:1;16267:10;16264:36;;;16280:18;;:::i;:::-;16264:36;16116:191;;;;:::o;16313:240::-;16353:3;16372:20;16390:1;16372:20;:::i;:::-;16367:25;;16406:20;16424:1;16406:20;:::i;:::-;16401:25;;16449:1;16446;16442:9;16435:16;;16472:50;16467:3;16464:59;16461:85;;;16526:18;;:::i;:::-;16461:85;16313:240;;;;:::o;16559:224::-;16699:34;16695:1;16687:6;16683:14;16676:58;16768:7;16763:2;16755:6;16751:15;16744:32;16559:224;:::o;16789:366::-;16931:3;16952:67;17016:2;17011:3;16952:67;:::i;:::-;16945:74;;17028:93;17117:3;17028:93;:::i;:::-;17146:2;17141:3;17137:12;17130:19;;16789:366;;;:::o;17161:419::-;17327:4;17365:2;17354:9;17350:18;17342:26;;17414:9;17408:4;17404:20;17400:1;17389:9;17385:17;17378:47;17442:131;17568:4;17442:131;:::i;:::-;17434:139;;17161:419;;;:::o;17586:220::-;17726:34;17722:1;17714:6;17710:14;17703:58;17795:3;17790:2;17782:6;17778:15;17771:28;17586:220;:::o;17812:366::-;17954:3;17975:67;18039:2;18034:3;17975:67;:::i;:::-;17968:74;;18051:93;18140:3;18051:93;:::i;:::-;18169:2;18164:3;18160:12;18153:19;;17812:366;;;:::o;18184:419::-;18350:4;18388:2;18377:9;18373:18;18365:26;;18437:9;18431:4;18427:20;18423:1;18412:9;18408:17;18401:47;18465:131;18591:4;18465:131;:::i;:::-;18457:139;;18184:419;;;:::o;18609:234::-;18749:34;18745:1;18737:6;18733:14;18726:58;18818:17;18813:2;18805:6;18801:15;18794:42;18609:234;:::o;18849:366::-;18991:3;19012:67;19076:2;19071:3;19012:67;:::i;:::-;19005:74;;19088:93;19177:3;19088:93;:::i;:::-;19206:2;19201:3;19197:12;19190:19;;18849:366;;;:::o;19221:419::-;19387:4;19425:2;19414:9;19410:18;19402:26;;19474:9;19468:4;19464:20;19460:1;19449:9;19445:17;19438:47;19502:131;19628:4;19502:131;:::i;:::-;19494:139;;19221:419;;;:::o;19646:225::-;19786:34;19782:1;19774:6;19770:14;19763:58;19855:8;19850:2;19842:6;19838:15;19831:33;19646:225;:::o;19877:366::-;20019:3;20040:67;20104:2;20099:3;20040:67;:::i;:::-;20033:74;;20116:93;20205:3;20116:93;:::i;:::-;20234:2;20229:3;20225:12;20218:19;;19877:366;;;:::o;20249:419::-;20415:4;20453:2;20442:9;20438:18;20430:26;;20502:9;20496:4;20492:20;20488:1;20477:9;20473:17;20466:47;20530:131;20656:4;20530:131;:::i;:::-;20522:139;;20249:419;;;:::o;20674:223::-;20814:34;20810:1;20802:6;20798:14;20791:58;20883:6;20878:2;20870:6;20866:15;20859:31;20674:223;:::o;20903:366::-;21045:3;21066:67;21130:2;21125:3;21066:67;:::i;:::-;21059:74;;21142:93;21231:3;21142:93;:::i;:::-;21260:2;21255:3;21251:12;21244:19;;20903:366;;;:::o;21275:419::-;21441:4;21479:2;21468:9;21464:18;21456:26;;21528:9;21522:4;21518:20;21514:1;21503:9;21499:17;21492:47;21556:131;21682:4;21556:131;:::i;:::-;21548:139;;21275:419;;;:::o;21700:221::-;21840:34;21836:1;21828:6;21824:14;21817:58;21909:4;21904:2;21896:6;21892:15;21885:29;21700:221;:::o;21927:366::-;22069:3;22090:67;22154:2;22149:3;22090:67;:::i;:::-;22083:74;;22166:93;22255:3;22166:93;:::i;:::-;22284:2;22279:3;22275:12;22268:19;;21927:366;;;:::o;22299:419::-;22465:4;22503:2;22492:9;22488:18;22480:26;;22552:9;22546:4;22542:20;22538:1;22527:9;22523:17;22516:47;22580:131;22706:4;22580:131;:::i;:::-;22572:139;;22299:419;;;:::o;22724:179::-;22864:31;22860:1;22852:6;22848:14;22841:55;22724:179;:::o;22909:366::-;23051:3;23072:67;23136:2;23131:3;23072:67;:::i;:::-;23065:74;;23148:93;23237:3;23148:93;:::i;:::-;23266:2;23261:3;23257:12;23250:19;;22909:366;;;:::o;23281:419::-;23447:4;23485:2;23474:9;23470:18;23462:26;;23534:9;23528:4;23524:20;23520:1;23509:9;23505:17;23498:47;23562:131;23688:4;23562:131;:::i;:::-;23554:139;;23281:419;;;:::o;23706:222::-;23846:34;23842:1;23834:6;23830:14;23823:58;23915:5;23910:2;23902:6;23898:15;23891:30;23706:222;:::o;23934:366::-;24076:3;24097:67;24161:2;24156:3;24097:67;:::i;:::-;24090:74;;24173:93;24262:3;24173:93;:::i;:::-;24291:2;24286:3;24282:12;24275:19;;23934:366;;;:::o;24306:419::-;24472:4;24510:2;24499:9;24495:18;24487:26;;24559:9;24553:4;24549:20;24545:1;24534:9;24530:17;24523:47;24587:131;24713:4;24587:131;:::i;:::-;24579:139;;24306:419;;;:::o;24731:182::-;24871:34;24867:1;24859:6;24855:14;24848:58;24731:182;:::o;24919:366::-;25061:3;25082:67;25146:2;25141:3;25082:67;:::i;:::-;25075:74;;25158:93;25247:3;25158:93;:::i;:::-;25276:2;25271:3;25267:12;25260:19;;24919:366;;;:::o;25291:419::-;25457:4;25495:2;25484:9;25480:18;25472:26;;25544:9;25538:4;25534:20;25530:1;25519:9;25515:17;25508:47;25572:131;25698:4;25572:131;:::i;:::-;25564:139;;25291:419;;;:::o;25716:220::-;25856:34;25852:1;25844:6;25840:14;25833:58;25925:3;25920:2;25912:6;25908:15;25901:28;25716:220;:::o;25942:366::-;26084:3;26105:67;26169:2;26164:3;26105:67;:::i;:::-;26098:74;;26181:93;26270:3;26181:93;:::i;:::-;26299:2;26294:3;26290:12;26283:19;;25942:366;;;:::o;26314:419::-;26480:4;26518:2;26507:9;26503:18;26495:26;;26567:9;26561:4;26557:20;26553:1;26542:9;26538:17;26531:47;26595:131;26721:4;26595:131;:::i;:::-;26587:139;;26314:419;;;:::o;26739:221::-;26879:34;26875:1;26867:6;26863:14;26856:58;26948:4;26943:2;26935:6;26931:15;26924:29;26739:221;:::o;26966:366::-;27108:3;27129:67;27193:2;27188:3;27129:67;:::i;:::-;27122:74;;27205:93;27294:3;27205:93;:::i;:::-;27323:2;27318:3;27314:12;27307:19;;26966:366;;;:::o;27338:419::-;27504:4;27542:2;27531:9;27527:18;27519:26;;27591:9;27585:4;27581:20;27577:1;27566:9;27562:17;27555:47;27619:131;27745:4;27619:131;:::i;:::-;27611:139;;27338:419;;;:::o;27763:332::-;27884:4;27922:2;27911:9;27907:18;27899:26;;27935:71;28003:1;27992:9;27988:17;27979:6;27935:71;:::i;:::-;28016:72;28084:2;28073:9;28069:18;28060:6;28016:72;:::i;:::-;27763:332;;;;;:::o;28101:442::-;28250:4;28288:2;28277:9;28273:18;28265:26;;28301:71;28369:1;28358:9;28354:17;28345:6;28301:71;:::i;:::-;28382:72;28450:2;28439:9;28435:18;28426:6;28382:72;:::i;:::-;28464;28532:2;28521:9;28517:18;28508:6;28464:72;:::i;:::-;28101:442;;;;;;:::o;28549:181::-;28689:33;28685:1;28677:6;28673:14;28666:57;28549:181;:::o;28736:366::-;28878:3;28899:67;28963:2;28958:3;28899:67;:::i;:::-;28892:74;;28975:93;29064:3;28975:93;:::i;:::-;29093:2;29088:3;29084:12;29077:19;;28736:366;;;:::o;29108:419::-;29274:4;29312:2;29301:9;29297:18;29289:26;;29361:9;29355:4;29351:20;29347:1;29336:9;29332:17;29325:47;29389:131;29515:4;29389:131;:::i;:::-;29381:139;;29108:419;;;:::o;29533:116::-;29603:21;29618:5;29603:21;:::i;:::-;29596:5;29593:32;29583:60;;29639:1;29636;29629:12;29583:60;29533:116;:::o;29655:137::-;29709:5;29740:6;29734:13;29725:22;;29756:30;29780:5;29756:30;:::i;:::-;29655:137;;;;:::o;29798:345::-;29865:6;29914:2;29902:9;29893:7;29889:23;29885:32;29882:119;;;29920:79;;:::i;:::-;29882:119;30040:1;30065:61;30118:7;30109:6;30098:9;30094:22;30065:61;:::i;:::-;30055:71;;30011:125;29798:345;;;;:::o;30149:229::-;30289:34;30285:1;30277:6;30273:14;30266:58;30358:12;30353:2;30345:6;30341:15;30334:37;30149:229;:::o;30384:366::-;30526:3;30547:67;30611:2;30606:3;30547:67;:::i;:::-;30540:74;;30623:93;30712:3;30623:93;:::i;:::-;30741:2;30736:3;30732:12;30725:19;;30384:366;;;:::o;30756:419::-;30922:4;30960:2;30949:9;30945:18;30937:26;;31009:9;31003:4;30999:20;30995:1;30984:9;30980:17;30973:47;31037:131;31163:4;31037:131;:::i;:::-;31029:139;;30756:419;;;:::o;31181:225::-;31321:34;31317:1;31309:6;31305:14;31298:58;31390:8;31385:2;31377:6;31373:15;31366:33;31181:225;:::o;31412:366::-;31554:3;31575:67;31639:2;31634:3;31575:67;:::i;:::-;31568:74;;31651:93;31740:3;31651:93;:::i;:::-;31769:2;31764:3;31760:12;31753:19;;31412:366;;;:::o;31784:419::-;31950:4;31988:2;31977:9;31973:18;31965:26;;32037:9;32031:4;32027:20;32023:1;32012:9;32008:17;32001:47;32065:131;32191:4;32065:131;:::i;:::-;32057:139;;31784:419;;;:::o;32209:179::-;32349:31;32345:1;32337:6;32333:14;32326:55;32209:179;:::o;32394:366::-;32536:3;32557:67;32621:2;32616:3;32557:67;:::i;:::-;32550:74;;32633:93;32722:3;32633:93;:::i;:::-;32751:2;32746:3;32742:12;32735:19;;32394:366;;;:::o;32766:419::-;32932:4;32970:2;32959:9;32955:18;32947:26;;33019:9;33013:4;33009:20;33005:1;32994:9;32990:17;32983:47;33047:131;33173:4;33047:131;:::i;:::-;33039:139;;32766:419;;;:::o;33191:98::-;33242:6;33276:5;33270:12;33260:22;;33191:98;;;:::o;33295:147::-;33396:11;33433:3;33418:18;;33295:147;;;;:::o;33448:386::-;33552:3;33580:38;33612:5;33580:38;:::i;:::-;33634:88;33715:6;33710:3;33634:88;:::i;:::-;33627:95;;33731:65;33789:6;33784:3;33777:4;33770:5;33766:16;33731:65;:::i;:::-;33821:6;33816:3;33812:16;33805:23;;33556:278;33448:386;;;;:::o;33840:271::-;33970:3;33992:93;34081:3;34072:6;33992:93;:::i;:::-;33985:100;;34102:3;34095:10;;33840:271;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","owner()":"8da5cb5b","penaltyBP()":"a5582c3e","penaltyDays()":"ee2b44e4","renounceOwnership()":"715018a6","setPenaltyBP(uint16)":"bacb4c57","setPenaltyDays(uint16)":"2932e77a","setTreasury(address)":"f0f44260","stake(uint128)":"88fe2be8","stakers(address,uint256)":"c8b6cbf7","stakingToken()":"72f702f3","symbol()":"95d89b41","totalShares()":"3a98ef39","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","treasury()":"61d027b3","unstake(uint256)":"2e17de78"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_penaltyDays\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_penaltyBP\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"penaltyBP\",\"type\":\"uint16\"}],\"name\":\"SetPenaltyBP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"SetTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyBP\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyDays\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_penaltyBP\",\"type\":\"uint16\"}],\"name\":\"setPenaltyBP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_penaltyDays\",\"type\":\"uint16\"}],\"name\":\"setPenaltyDays\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"unstaked\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"stakedTimestamp\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"penaltyDays\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"penaltyBP\",\"type\":\"uint16\"},{\"internalType\":\"uint192\",\"name\":\"shares\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakeIndex\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"_penaltyBP\":\"Penalty base points value\",\"_penaltyDays\":\"Penalty days value\",\"_stakingToken\":\"Staking token address\",\"_treasury\":\"The address to which the penalty tokens will be transferred\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setPenaltyBP(uint16)\":{\"params\":{\"_penaltyBP\":\"New penalty base points value\"}},\"setPenaltyDays(uint16)\":{\"params\":{\"_penaltyDays\":\"New penalty days value\"}},\"setTreasury(address)\":{\"params\":{\"_treasury\":\"New treasury address\"}},\"stake(uint128)\":{\"params\":{\"_amount\":\"amount to stake\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256)\":{\"params\":{\"_stakeIndex\":\"Stake index in array of user's stakes\"}}},\"stateVariables\":{\"penaltyBP\":{\"details\":\"Penalty base points value\"},\"penaltyDays\":{\"details\":\"Penalty days value\"},\"stakers\":{\"details\":\"Info about each stake by user address\"},\"stakingToken\":{\"details\":\"Staking token\"},\"totalShares\":{\"details\":\"Total shares\"},\"treasury\":{\"details\":\"The address to which the penalty tokens will be transferred\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializer\"},\"setPenaltyBP(uint16)\":{\"notice\":\"Set a new penalty base points value\"},\"setPenaltyDays(uint16)\":{\"notice\":\"Set a new penalty days value\"},\"setTreasury(address)\":{\"notice\":\"Set a new penalty treasury\"},\"stake(uint128)\":{\"notice\":\"Stake staking tokens\"},\"unstake(uint256)\":{\"notice\":\"Unstake staking tokensIf penalty period is not over grab penalty\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"CyberArenaStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x7fd2492be0468be4662081ee25cde38a31e4a0ceca0fed10160462389013910f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10c660ba772feee0fcb29319b15b328b429cd020079786e8d00992159f4b7b4e\",\"dweb:/ipfs/QmTjnb1FLbjHkgSZ7qcRZnNSwmZnobBpkJ9UWSc1SkVqhU\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol\":{\"keccak256\":\"0x3e2cf78abe35170695b26fb9f820fe7bfeed607604f4d6c1261f811704c79f16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d677e79ed97d35fa1fa3df7b45df9de5947e0939bb7229bfb05bc00fef9ed45\",\"dweb:/ipfs/QmRiFfC3KJH6KX7hP5cdasrxvEVbB2Fy8UJDDbf2xNSax9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0xa09b8e95c66f36090e8d998c3b20456c006bfa2772c98f04d965d90e9373fe60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ced14165f444fcd5647607333bdf0c7a53c6cfce5f30c12d781863493cc6971\",\"dweb:/ipfs/QmZ8c9Cv6GFGcW7KiLL6ZBUDhfFkRyTEPU6xZRBkLDQN56\"]}},\"version\":1}"}}}}}